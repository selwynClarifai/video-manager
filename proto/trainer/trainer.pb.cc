// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/trainer/trainer.proto

#include "proto/trainer/trainer.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftrainer_2ftrainer_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DatasetLocation_proto_2ftrainer_2ftrainer_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fevaluation_2fevaluation_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_EvaluationResult_proto_2fevaluation_2fevaluation_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftrainer_2ftrainer_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetEvaluationsResponse_EvaluationsEntry_DoNotUse_proto_2ftrainer_2ftrainer_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fpredictor_2fpredictor_5fmetrics_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ProgressStatus_proto_2fpredictor_2fpredictor_5fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2frequest_5fmeta_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2frequest_5fmeta_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftrainer_2ftrainer_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TrainingTemplate_proto_2ftrainer_2ftrainer_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fclarifai_2fapi_2fresources_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Search_proto_2fclarifai_2fapi_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
class DatasetLocationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DatasetLocation> _instance;
} _DatasetLocation_default_instance_;
class TrainRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TrainRequest> _instance;
} _TrainRequest_default_instance_;
class TrainResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TrainResponse> _instance;
} _TrainResponse_default_instance_;
class GetStatusRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetStatusRequest> _instance;
} _GetStatusRequest_default_instance_;
class GetStatusResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetStatusResponse> _instance;
} _GetStatusResponse_default_instance_;
class GetEvaluationsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetEvaluationsRequest> _instance;
} _GetEvaluationsRequest_default_instance_;
class GetEvaluationsResponse_EvaluationsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetEvaluationsResponse_EvaluationsEntry_DoNotUse> _instance;
} _GetEvaluationsResponse_EvaluationsEntry_DoNotUse_default_instance_;
class GetEvaluationsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetEvaluationsResponse> _instance;
} _GetEvaluationsResponse_default_instance_;
class TrainingTemplateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TrainingTemplate> _instance;
} _TrainingTemplate_default_instance_;
class ListTemplatesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListTemplatesRequest> _instance;
} _ListTemplatesRequest_default_instance_;
class ListTemplatesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListTemplatesResponse> _instance;
} _ListTemplatesResponse_default_instance_;
class GetSpireConfigRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSpireConfigRequest> _instance;
} _GetSpireConfigRequest_default_instance_;
class GetSpireConfigResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSpireConfigResponse> _instance;
} _GetSpireConfigResponse_default_instance_;
class EidCleanUpRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EidCleanUpRequest> _instance;
} _EidCleanUpRequest_default_instance_;
class EidCleanUpResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EidCleanUpResponse> _instance;
} _EidCleanUpResponse_default_instance_;
static void InitDefaultsscc_info_DatasetLocation_proto_2ftrainer_2ftrainer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DatasetLocation_default_instance_;
    new (ptr) ::DatasetLocation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DatasetLocation::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DatasetLocation_proto_2ftrainer_2ftrainer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DatasetLocation_proto_2ftrainer_2ftrainer_2eproto}, {
      &scc_info_Search_proto_2fclarifai_2fapi_2fresources_2eproto.base,}};

static void InitDefaultsscc_info_EidCleanUpRequest_proto_2ftrainer_2ftrainer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_EidCleanUpRequest_default_instance_;
    new (ptr) ::EidCleanUpRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EidCleanUpRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EidCleanUpRequest_proto_2ftrainer_2ftrainer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_EidCleanUpRequest_proto_2ftrainer_2ftrainer_2eproto}, {
      &scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto.base,}};

static void InitDefaultsscc_info_EidCleanUpResponse_proto_2ftrainer_2ftrainer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_EidCleanUpResponse_default_instance_;
    new (ptr) ::EidCleanUpResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EidCleanUpResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EidCleanUpResponse_proto_2ftrainer_2ftrainer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_EidCleanUpResponse_proto_2ftrainer_2ftrainer_2eproto}, {
      &scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto.base,}};

static void InitDefaultsscc_info_GetEvaluationsRequest_proto_2ftrainer_2ftrainer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetEvaluationsRequest_default_instance_;
    new (ptr) ::GetEvaluationsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetEvaluationsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetEvaluationsRequest_proto_2ftrainer_2ftrainer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetEvaluationsRequest_proto_2ftrainer_2ftrainer_2eproto}, {
      &scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto.base,}};

static void InitDefaultsscc_info_GetEvaluationsResponse_proto_2ftrainer_2ftrainer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetEvaluationsResponse_default_instance_;
    new (ptr) ::GetEvaluationsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetEvaluationsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetEvaluationsResponse_proto_2ftrainer_2ftrainer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetEvaluationsResponse_proto_2ftrainer_2ftrainer_2eproto}, {
      &scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto.base,
      &scc_info_GetEvaluationsResponse_EvaluationsEntry_DoNotUse_proto_2ftrainer_2ftrainer_2eproto.base,}};

static void InitDefaultsscc_info_GetEvaluationsResponse_EvaluationsEntry_DoNotUse_proto_2ftrainer_2ftrainer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetEvaluationsResponse_EvaluationsEntry_DoNotUse_default_instance_;
    new (ptr) ::GetEvaluationsResponse_EvaluationsEntry_DoNotUse();
  }
  ::GetEvaluationsResponse_EvaluationsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetEvaluationsResponse_EvaluationsEntry_DoNotUse_proto_2ftrainer_2ftrainer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetEvaluationsResponse_EvaluationsEntry_DoNotUse_proto_2ftrainer_2ftrainer_2eproto}, {
      &scc_info_EvaluationResult_proto_2fevaluation_2fevaluation_2eproto.base,}};

static void InitDefaultsscc_info_GetSpireConfigRequest_proto_2ftrainer_2ftrainer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetSpireConfigRequest_default_instance_;
    new (ptr) ::GetSpireConfigRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetSpireConfigRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetSpireConfigRequest_proto_2ftrainer_2ftrainer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetSpireConfigRequest_proto_2ftrainer_2ftrainer_2eproto}, {
      &scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto.base,}};

static void InitDefaultsscc_info_GetSpireConfigResponse_proto_2ftrainer_2ftrainer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetSpireConfigResponse_default_instance_;
    new (ptr) ::GetSpireConfigResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetSpireConfigResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetSpireConfigResponse_proto_2ftrainer_2ftrainer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetSpireConfigResponse_proto_2ftrainer_2ftrainer_2eproto}, {
      &scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto.base,}};

static void InitDefaultsscc_info_GetStatusRequest_proto_2ftrainer_2ftrainer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetStatusRequest_default_instance_;
    new (ptr) ::GetStatusRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetStatusRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetStatusRequest_proto_2ftrainer_2ftrainer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetStatusRequest_proto_2ftrainer_2ftrainer_2eproto}, {
      &scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto.base,}};

static void InitDefaultsscc_info_GetStatusResponse_proto_2ftrainer_2ftrainer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetStatusResponse_default_instance_;
    new (ptr) ::GetStatusResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetStatusResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_GetStatusResponse_proto_2ftrainer_2ftrainer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_GetStatusResponse_proto_2ftrainer_2ftrainer_2eproto}, {
      &scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto.base,
      &scc_info_ProgressStatus_proto_2fpredictor_2fpredictor_5fmetrics_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_ListTemplatesRequest_proto_2ftrainer_2ftrainer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ListTemplatesRequest_default_instance_;
    new (ptr) ::ListTemplatesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ListTemplatesRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListTemplatesRequest_proto_2ftrainer_2ftrainer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListTemplatesRequest_proto_2ftrainer_2ftrainer_2eproto}, {
      &scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto.base,}};

static void InitDefaultsscc_info_ListTemplatesResponse_proto_2ftrainer_2ftrainer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ListTemplatesResponse_default_instance_;
    new (ptr) ::ListTemplatesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ListTemplatesResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ListTemplatesResponse_proto_2ftrainer_2ftrainer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ListTemplatesResponse_proto_2ftrainer_2ftrainer_2eproto}, {
      &scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto.base,
      &scc_info_TrainingTemplate_proto_2ftrainer_2ftrainer_2eproto.base,}};

static void InitDefaultsscc_info_TrainRequest_proto_2ftrainer_2ftrainer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TrainRequest_default_instance_;
    new (ptr) ::TrainRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TrainRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_TrainRequest_proto_2ftrainer_2ftrainer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_TrainRequest_proto_2ftrainer_2ftrainer_2eproto}, {
      &scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto.base,
      &scc_info_DatasetLocation_proto_2ftrainer_2ftrainer_2eproto.base,}};

static void InitDefaultsscc_info_TrainResponse_proto_2ftrainer_2ftrainer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TrainResponse_default_instance_;
    new (ptr) ::TrainResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TrainResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TrainResponse_proto_2ftrainer_2ftrainer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TrainResponse_proto_2ftrainer_2ftrainer_2eproto}, {
      &scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto.base,}};

static void InitDefaultsscc_info_TrainingTemplate_proto_2ftrainer_2ftrainer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TrainingTemplate_default_instance_;
    new (ptr) ::TrainingTemplate();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TrainingTemplate::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TrainingTemplate_proto_2ftrainer_2ftrainer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TrainingTemplate_proto_2ftrainer_2ftrainer_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2ftrainer_2ftrainer_2eproto[15];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_proto_2ftrainer_2ftrainer_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2ftrainer_2ftrainer_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2ftrainer_2ftrainer_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DatasetLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::DatasetLocation, type_),
  PROTOBUF_FIELD_OFFSET(::DatasetLocation, api_key_),
  PROTOBUF_FIELD_OFFSET(::DatasetLocation, api_url_),
  PROTOBUF_FIELD_OFFSET(::DatasetLocation, data_bulk_url_),
  PROTOBUF_FIELD_OFFSET(::DatasetLocation, model_id_),
  PROTOBUF_FIELD_OFFSET(::DatasetLocation, test_split_percent_),
  PROTOBUF_FIELD_OFFSET(::DatasetLocation, data_dump_search_),
  PROTOBUF_FIELD_OFFSET(::DatasetLocation, dataset_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TrainRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TrainRequest, meta_),
  PROTOBUF_FIELD_OFFSET(::TrainRequest, data_),
  PROTOBUF_FIELD_OFFSET(::TrainRequest, template_name_),
  PROTOBUF_FIELD_OFFSET(::TrainRequest, hyper_parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TrainResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TrainResponse, status_),
  PROTOBUF_FIELD_OFFSET(::TrainResponse, eid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetStatusRequest, meta_),
  PROTOBUF_FIELD_OFFSET(::GetStatusRequest, eid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetStatusResponse, status_),
  PROTOBUF_FIELD_OFFSET(::GetStatusResponse, data_fetch_status_),
  PROTOBUF_FIELD_OFFSET(::GetStatusResponse, train_status_),
  PROTOBUF_FIELD_OFFSET(::GetStatusResponse, progress_status_),
  PROTOBUF_FIELD_OFFSET(::GetStatusResponse, eval_status_),
  PROTOBUF_FIELD_OFFSET(::GetStatusResponse, status_modified_at_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetEvaluationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetEvaluationsRequest, meta_),
  PROTOBUF_FIELD_OFFSET(::GetEvaluationsRequest, eid_),
  PROTOBUF_FIELD_OFFSET(::GetEvaluationsResponse_EvaluationsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::GetEvaluationsResponse_EvaluationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetEvaluationsResponse_EvaluationsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::GetEvaluationsResponse_EvaluationsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetEvaluationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetEvaluationsResponse, status_),
  PROTOBUF_FIELD_OFFSET(::GetEvaluationsResponse, evaluations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TrainingTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TrainingTemplate, name_),
  PROTOBUF_FIELD_OFFSET(::TrainingTemplate, default_args_json_),
  PROTOBUF_FIELD_OFFSET(::TrainingTemplate, doc_string_),
  PROTOBUF_FIELD_OFFSET(::TrainingTemplate, model_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ListTemplatesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ListTemplatesRequest, meta_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ListTemplatesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ListTemplatesResponse, status_),
  PROTOBUF_FIELD_OFFSET(::ListTemplatesResponse, templates_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetSpireConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetSpireConfigRequest, meta_),
  PROTOBUF_FIELD_OFFSET(::GetSpireConfigRequest, eid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetSpireConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetSpireConfigResponse, status_),
  PROTOBUF_FIELD_OFFSET(::GetSpireConfigResponse, spire_name_),
  PROTOBUF_FIELD_OFFSET(::GetSpireConfigResponse, spire_config_location_),
  PROTOBUF_FIELD_OFFSET(::GetSpireConfigResponse, checkpoint_root_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::EidCleanUpRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::EidCleanUpRequest, meta_),
  PROTOBUF_FIELD_OFFSET(::EidCleanUpRequest, eid_),
  PROTOBUF_FIELD_OFFSET(::EidCleanUpRequest, delete_checkpoint_folder_),
  PROTOBUF_FIELD_OFFSET(::EidCleanUpRequest, delete_cached_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::EidCleanUpResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::EidCleanUpResponse, status_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::DatasetLocation)},
  { 13, -1, sizeof(::TrainRequest)},
  { 22, -1, sizeof(::TrainResponse)},
  { 29, -1, sizeof(::GetStatusRequest)},
  { 36, -1, sizeof(::GetStatusResponse)},
  { 47, -1, sizeof(::GetEvaluationsRequest)},
  { 54, 61, sizeof(::GetEvaluationsResponse_EvaluationsEntry_DoNotUse)},
  { 63, -1, sizeof(::GetEvaluationsResponse)},
  { 70, -1, sizeof(::TrainingTemplate)},
  { 79, -1, sizeof(::ListTemplatesRequest)},
  { 85, -1, sizeof(::ListTemplatesResponse)},
  { 92, -1, sizeof(::GetSpireConfigRequest)},
  { 99, -1, sizeof(::GetSpireConfigResponse)},
  { 108, -1, sizeof(::EidCleanUpRequest)},
  { 117, -1, sizeof(::EidCleanUpResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_DatasetLocation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_TrainRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_TrainResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetStatusRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetStatusResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetEvaluationsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetEvaluationsResponse_EvaluationsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetEvaluationsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_TrainingTemplate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ListTemplatesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ListTemplatesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetSpireConfigRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_GetSpireConfigResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_EidCleanUpRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_EidCleanUpResponse_default_instance_),
};

const char descriptor_table_protodef_proto_2ftrainer_2ftrainer_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033proto/trainer/trainer.proto\032\"proto/cla"
  "rifai/api/resources.proto\032!proto/evaluat"
  "ion/evaluation.proto\032\'proto/predictor/pr"
  "edictor_metrics.proto\032\036proto/utils/reque"
  "st_meta.proto\032\037google/protobuf/timestamp"
  ".proto\"\231\002\n\017DatasetLocation\022#\n\004type\030\001 \001(\016"
  "2\025.DatasetLocation.Type\022\017\n\007api_key\030\002 \001(\t"
  "\022\017\n\007api_url\030\003 \001(\t\022\025\n\rdata_bulk_url\030\004 \001(\t"
  "\022\020\n\010model_id\030\005 \001(\t\022\032\n\022test_split_percent"
  "\030\006 \001(\005\022.\n\020data_dump_search\030\007 \001(\0132\024.clari"
  "fai.api.Search\022\024\n\014dataset_name\030\n \001(\t\"4\n\004"
  "Type\022\013\n\007INVALID\020\000\022\014\n\010USER_APP\020\001\022\021\n\rDATAS"
  "ETS_YAML\020\002\"{\n\014TrainRequest\022\032\n\004meta\030\001 \001(\013"
  "2\014.RequestMeta\022\036\n\004data\030\003 \001(\0132\020.DatasetLo"
  "cation\022\025\n\rtemplate_name\030\004 \001(\t\022\030\n\020hyper_p"
  "arameters\030\005 \001(\t\"=\n\rTrainResponse\022\037\n\006stat"
  "us\030\001 \001(\0132\017.ResponseStatus\022\013\n\003eid\030\002 \001(\t\";"
  "\n\020GetStatusRequest\022\032\n\004meta\030\001 \001(\0132\014.Reque"
  "stMeta\022\013\n\003eid\030\002 \001(\t\"\217\002\n\021GetStatusRespons"
  "e\022\037\n\006status\030\001 \001(\0132\017.ResponseStatus\022*\n\021da"
  "ta_fetch_status\030\002 \001(\0132\017.ResponseStatus\022%"
  "\n\014train_status\030\003 \001(\0132\017.ResponseStatus\022(\n"
  "\017progress_status\030\004 \001(\0132\017.ProgressStatus\022"
  "$\n\013eval_status\030\005 \001(\0132\017.ResponseStatus\0226\n"
  "\022status_modified_at\030\n \001(\0132\032.google.proto"
  "buf.Timestamp\"@\n\025GetEvaluationsRequest\022\032"
  "\n\004meta\030\001 \001(\0132\014.RequestMeta\022\013\n\003eid\030\002 \001(\t\""
  "\277\001\n\026GetEvaluationsResponse\022\037\n\006status\030\001 \001"
  "(\0132\017.ResponseStatus\022=\n\013evaluations\030\002 \003(\013"
  "2(.GetEvaluationsResponse.EvaluationsEnt"
  "ry\032E\n\020EvaluationsEntry\022\013\n\003key\030\001 \001(\t\022 \n\005v"
  "alue\030\002 \001(\0132\021.EvaluationResult:\0028\001\"c\n\020Tra"
  "iningTemplate\022\014\n\004name\030\001 \001(\t\022\031\n\021default_a"
  "rgs_json\030\002 \001(\t\022\022\n\ndoc_string\030\003 \001(\t\022\022\n\nmo"
  "del_type\030\004 \001(\t\"2\n\024ListTemplatesRequest\022\032"
  "\n\004meta\030\001 \001(\0132\014.RequestMeta\"^\n\025ListTempla"
  "tesResponse\022\037\n\006status\030\001 \001(\0132\017.ResponseSt"
  "atus\022$\n\ttemplates\030\002 \003(\0132\021.TrainingTempla"
  "te\"@\n\025GetSpireConfigRequest\022\032\n\004meta\030\001 \001("
  "\0132\014.RequestMeta\022\013\n\003eid\030\002 \001(\t\"\205\001\n\026GetSpir"
  "eConfigResponse\022\037\n\006status\030\001 \001(\0132\017.Respon"
  "seStatus\022\022\n\nspire_name\030\002 \001(\t\022\035\n\025spire_co"
  "nfig_location\030\003 \001(\t\022\027\n\017checkpoint_root\030\004"
  " \001(\t\"z\n\021EidCleanUpRequest\022\032\n\004meta\030\001 \001(\0132"
  "\014.RequestMeta\022\013\n\003eid\030\002 \001(\t\022 \n\030delete_che"
  "ckpoint_folder\030\003 \001(\010\022\032\n\022delete_cached_da"
  "ta\030\004 \001(\010\"5\n\022EidCleanUpResponse\022\037\n\006status"
  "\030\001 \001(\0132\017.ResponseStatus2\372\002\n\023TrainingCoor"
  "dinator\022(\n\005Train\022\r.TrainRequest\032\016.TrainR"
  "esponse\"\000\0224\n\tGetStatus\022\021.GetStatusReques"
  "t\032\022.GetStatusResponse\"\000\022C\n\016GetEvaluation"
  "s\022\026.GetEvaluationsRequest\032\027.GetEvaluatio"
  "nsResponse\"\000\022@\n\rListTemplates\022\025.ListTemp"
  "latesRequest\032\026.ListTemplatesResponse\"\000\022C"
  "\n\016GetSpireConfig\022\026.GetSpireConfigRequest"
  "\032\027.GetSpireConfigResponse\"\000\0227\n\nEidCleanU"
  "p\022\022.EidCleanUpRequest\032\023.EidCleanUpRespon"
  "se\"\000B\tZ\007trainerb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2ftrainer_2ftrainer_2eproto_deps[5] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_proto_2fclarifai_2fapi_2fresources_2eproto,
  &::descriptor_table_proto_2fevaluation_2fevaluation_2eproto,
  &::descriptor_table_proto_2fpredictor_2fpredictor_5fmetrics_2eproto,
  &::descriptor_table_proto_2futils_2frequest_5fmeta_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2ftrainer_2ftrainer_2eproto_sccs[15] = {
  &scc_info_DatasetLocation_proto_2ftrainer_2ftrainer_2eproto.base,
  &scc_info_EidCleanUpRequest_proto_2ftrainer_2ftrainer_2eproto.base,
  &scc_info_EidCleanUpResponse_proto_2ftrainer_2ftrainer_2eproto.base,
  &scc_info_GetEvaluationsRequest_proto_2ftrainer_2ftrainer_2eproto.base,
  &scc_info_GetEvaluationsResponse_proto_2ftrainer_2ftrainer_2eproto.base,
  &scc_info_GetEvaluationsResponse_EvaluationsEntry_DoNotUse_proto_2ftrainer_2ftrainer_2eproto.base,
  &scc_info_GetSpireConfigRequest_proto_2ftrainer_2ftrainer_2eproto.base,
  &scc_info_GetSpireConfigResponse_proto_2ftrainer_2ftrainer_2eproto.base,
  &scc_info_GetStatusRequest_proto_2ftrainer_2ftrainer_2eproto.base,
  &scc_info_GetStatusResponse_proto_2ftrainer_2ftrainer_2eproto.base,
  &scc_info_ListTemplatesRequest_proto_2ftrainer_2ftrainer_2eproto.base,
  &scc_info_ListTemplatesResponse_proto_2ftrainer_2ftrainer_2eproto.base,
  &scc_info_TrainRequest_proto_2ftrainer_2ftrainer_2eproto.base,
  &scc_info_TrainResponse_proto_2ftrainer_2ftrainer_2eproto.base,
  &scc_info_TrainingTemplate_proto_2ftrainer_2ftrainer_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2ftrainer_2ftrainer_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2ftrainer_2ftrainer_2eproto = {
  false, false, descriptor_table_protodef_proto_2ftrainer_2ftrainer_2eproto, "proto/trainer/trainer.proto", 2303,
  &descriptor_table_proto_2ftrainer_2ftrainer_2eproto_once, descriptor_table_proto_2ftrainer_2ftrainer_2eproto_sccs, descriptor_table_proto_2ftrainer_2ftrainer_2eproto_deps, 15, 5,
  schemas, file_default_instances, TableStruct_proto_2ftrainer_2ftrainer_2eproto::offsets,
  file_level_metadata_proto_2ftrainer_2ftrainer_2eproto, 15, file_level_enum_descriptors_proto_2ftrainer_2ftrainer_2eproto, file_level_service_descriptors_proto_2ftrainer_2ftrainer_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2ftrainer_2ftrainer_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2ftrainer_2ftrainer_2eproto)), true);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DatasetLocation_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proto_2ftrainer_2ftrainer_2eproto);
  return file_level_enum_descriptors_proto_2ftrainer_2ftrainer_2eproto[0];
}
bool DatasetLocation_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr DatasetLocation_Type DatasetLocation::INVALID;
constexpr DatasetLocation_Type DatasetLocation::USER_APP;
constexpr DatasetLocation_Type DatasetLocation::DATASETS_YAML;
constexpr DatasetLocation_Type DatasetLocation::Type_MIN;
constexpr DatasetLocation_Type DatasetLocation::Type_MAX;
constexpr int DatasetLocation::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void DatasetLocation::InitAsDefaultInstance() {
  ::_DatasetLocation_default_instance_._instance.get_mutable()->data_dump_search_ = const_cast< ::clarifai::api::Search*>(
      ::clarifai::api::Search::internal_default_instance());
}
class DatasetLocation::_Internal {
 public:
  static const ::clarifai::api::Search& data_dump_search(const DatasetLocation* msg);
};

const ::clarifai::api::Search&
DatasetLocation::_Internal::data_dump_search(const DatasetLocation* msg) {
  return *msg->data_dump_search_;
}
void DatasetLocation::clear_data_dump_search() {
  if (GetArena() == nullptr && data_dump_search_ != nullptr) {
    delete data_dump_search_;
  }
  data_dump_search_ = nullptr;
}
DatasetLocation::DatasetLocation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:DatasetLocation)
}
DatasetLocation::DatasetLocation(const DatasetLocation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  api_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_api_key().empty()) {
    api_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_api_key(),
      GetArena());
  }
  api_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_api_url().empty()) {
    api_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_api_url(),
      GetArena());
  }
  data_bulk_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data_bulk_url().empty()) {
    data_bulk_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data_bulk_url(),
      GetArena());
  }
  model_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_model_id().empty()) {
    model_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_model_id(),
      GetArena());
  }
  dataset_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dataset_name().empty()) {
    dataset_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_dataset_name(),
      GetArena());
  }
  if (from._internal_has_data_dump_search()) {
    data_dump_search_ = new ::clarifai::api::Search(*from.data_dump_search_);
  } else {
    data_dump_search_ = nullptr;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&test_split_percent_) -
    reinterpret_cast<char*>(&type_)) + sizeof(test_split_percent_));
  // @@protoc_insertion_point(copy_constructor:DatasetLocation)
}

void DatasetLocation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DatasetLocation_proto_2ftrainer_2ftrainer_2eproto.base);
  api_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  api_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_bulk_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dataset_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_dump_search_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&test_split_percent_) -
      reinterpret_cast<char*>(&data_dump_search_)) + sizeof(test_split_percent_));
}

DatasetLocation::~DatasetLocation() {
  // @@protoc_insertion_point(destructor:DatasetLocation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DatasetLocation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  api_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  api_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_bulk_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dataset_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_dump_search_;
}

void DatasetLocation::ArenaDtor(void* object) {
  DatasetLocation* _this = reinterpret_cast< DatasetLocation* >(object);
  (void)_this;
}
void DatasetLocation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DatasetLocation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DatasetLocation& DatasetLocation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DatasetLocation_proto_2ftrainer_2ftrainer_2eproto.base);
  return *internal_default_instance();
}


void DatasetLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:DatasetLocation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  api_key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  api_url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_bulk_url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  model_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dataset_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && data_dump_search_ != nullptr) {
    delete data_dump_search_;
  }
  data_dump_search_ = nullptr;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&test_split_percent_) -
      reinterpret_cast<char*>(&type_)) + sizeof(test_split_percent_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DatasetLocation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .DatasetLocation.Type type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::DatasetLocation_Type>(val));
        } else goto handle_unusual;
        continue;
      // string api_key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_api_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "DatasetLocation.api_key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string api_url = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_api_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "DatasetLocation.api_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string data_bulk_url = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_data_bulk_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "DatasetLocation.data_bulk_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string model_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_model_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "DatasetLocation.model_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 test_split_percent = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          test_split_percent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .clarifai.api.Search data_dump_search = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_data_dump_search(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string dataset_name = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_dataset_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "DatasetLocation.dataset_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DatasetLocation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DatasetLocation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .DatasetLocation.Type type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // string api_key = 2;
  if (this->api_key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_api_key().data(), static_cast<int>(this->_internal_api_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DatasetLocation.api_key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_api_key(), target);
  }

  // string api_url = 3;
  if (this->api_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_api_url().data(), static_cast<int>(this->_internal_api_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DatasetLocation.api_url");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_api_url(), target);
  }

  // string data_bulk_url = 4;
  if (this->data_bulk_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_bulk_url().data(), static_cast<int>(this->_internal_data_bulk_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DatasetLocation.data_bulk_url");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_data_bulk_url(), target);
  }

  // string model_id = 5;
  if (this->model_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_id().data(), static_cast<int>(this->_internal_model_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DatasetLocation.model_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_model_id(), target);
  }

  // int32 test_split_percent = 6;
  if (this->test_split_percent() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_test_split_percent(), target);
  }

  // .clarifai.api.Search data_dump_search = 7;
  if (this->has_data_dump_search()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::data_dump_search(this), target, stream);
  }

  // string dataset_name = 10;
  if (this->dataset_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dataset_name().data(), static_cast<int>(this->_internal_dataset_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DatasetLocation.dataset_name");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_dataset_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DatasetLocation)
  return target;
}

size_t DatasetLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DatasetLocation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string api_key = 2;
  if (this->api_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_api_key());
  }

  // string api_url = 3;
  if (this->api_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_api_url());
  }

  // string data_bulk_url = 4;
  if (this->data_bulk_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_bulk_url());
  }

  // string model_id = 5;
  if (this->model_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_id());
  }

  // string dataset_name = 10;
  if (this->dataset_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dataset_name());
  }

  // .clarifai.api.Search data_dump_search = 7;
  if (this->has_data_dump_search()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_dump_search_);
  }

  // .DatasetLocation.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // int32 test_split_percent = 6;
  if (this->test_split_percent() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_test_split_percent());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DatasetLocation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DatasetLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const DatasetLocation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DatasetLocation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DatasetLocation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DatasetLocation)
    MergeFrom(*source);
  }
}

void DatasetLocation::MergeFrom(const DatasetLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DatasetLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.api_key().size() > 0) {
    _internal_set_api_key(from._internal_api_key());
  }
  if (from.api_url().size() > 0) {
    _internal_set_api_url(from._internal_api_url());
  }
  if (from.data_bulk_url().size() > 0) {
    _internal_set_data_bulk_url(from._internal_data_bulk_url());
  }
  if (from.model_id().size() > 0) {
    _internal_set_model_id(from._internal_model_id());
  }
  if (from.dataset_name().size() > 0) {
    _internal_set_dataset_name(from._internal_dataset_name());
  }
  if (from.has_data_dump_search()) {
    _internal_mutable_data_dump_search()->::clarifai::api::Search::MergeFrom(from._internal_data_dump_search());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.test_split_percent() != 0) {
    _internal_set_test_split_percent(from._internal_test_split_percent());
  }
}

void DatasetLocation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DatasetLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DatasetLocation::CopyFrom(const DatasetLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DatasetLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DatasetLocation::IsInitialized() const {
  return true;
}

void DatasetLocation::InternalSwap(DatasetLocation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  api_key_.Swap(&other->api_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  api_url_.Swap(&other->api_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_bulk_url_.Swap(&other->data_bulk_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  model_id_.Swap(&other->model_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dataset_name_.Swap(&other->dataset_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DatasetLocation, test_split_percent_)
      + sizeof(DatasetLocation::test_split_percent_)
      - PROTOBUF_FIELD_OFFSET(DatasetLocation, data_dump_search_)>(
          reinterpret_cast<char*>(&data_dump_search_),
          reinterpret_cast<char*>(&other->data_dump_search_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DatasetLocation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TrainRequest::InitAsDefaultInstance() {
  ::_TrainRequest_default_instance_._instance.get_mutable()->meta_ = const_cast< ::RequestMeta*>(
      ::RequestMeta::internal_default_instance());
  ::_TrainRequest_default_instance_._instance.get_mutable()->data_ = const_cast< ::DatasetLocation*>(
      ::DatasetLocation::internal_default_instance());
}
class TrainRequest::_Internal {
 public:
  static const ::RequestMeta& meta(const TrainRequest* msg);
  static const ::DatasetLocation& data(const TrainRequest* msg);
};

const ::RequestMeta&
TrainRequest::_Internal::meta(const TrainRequest* msg) {
  return *msg->meta_;
}
const ::DatasetLocation&
TrainRequest::_Internal::data(const TrainRequest* msg) {
  return *msg->data_;
}
void TrainRequest::clear_meta() {
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
}
TrainRequest::TrainRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TrainRequest)
}
TrainRequest::TrainRequest(const TrainRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  template_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_template_name().empty()) {
    template_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_template_name(),
      GetArena());
  }
  hyper_parameters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_hyper_parameters().empty()) {
    hyper_parameters_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_hyper_parameters(),
      GetArena());
  }
  if (from._internal_has_meta()) {
    meta_ = new ::RequestMeta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::DatasetLocation(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:TrainRequest)
}

void TrainRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TrainRequest_proto_2ftrainer_2ftrainer_2eproto.base);
  template_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hyper_parameters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&meta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&meta_)) + sizeof(data_));
}

TrainRequest::~TrainRequest() {
  // @@protoc_insertion_point(destructor:TrainRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TrainRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  template_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hyper_parameters_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete data_;
}

void TrainRequest::ArenaDtor(void* object) {
  TrainRequest* _this = reinterpret_cast< TrainRequest* >(object);
  (void)_this;
}
void TrainRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TrainRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TrainRequest& TrainRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TrainRequest_proto_2ftrainer_2ftrainer_2eproto.base);
  return *internal_default_instance();
}


void TrainRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TrainRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  template_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  hyper_parameters_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TrainRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .RequestMeta meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .DatasetLocation data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string template_name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_template_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TrainRequest.template_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string hyper_parameters = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_hyper_parameters();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TrainRequest.hyper_parameters"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TrainRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TrainRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::meta(this), target, stream);
  }

  // .DatasetLocation data = 3;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::data(this), target, stream);
  }

  // string template_name = 4;
  if (this->template_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_template_name().data(), static_cast<int>(this->_internal_template_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TrainRequest.template_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_template_name(), target);
  }

  // string hyper_parameters = 5;
  if (this->hyper_parameters().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hyper_parameters().data(), static_cast<int>(this->_internal_hyper_parameters().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TrainRequest.hyper_parameters");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_hyper_parameters(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TrainRequest)
  return target;
}

size_t TrainRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TrainRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string template_name = 4;
  if (this->template_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_template_name());
  }

  // string hyper_parameters = 5;
  if (this->hyper_parameters().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hyper_parameters());
  }

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .DatasetLocation data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrainRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TrainRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TrainRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TrainRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TrainRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TrainRequest)
    MergeFrom(*source);
  }
}

void TrainRequest::MergeFrom(const TrainRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TrainRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.template_name().size() > 0) {
    _internal_set_template_name(from._internal_template_name());
  }
  if (from.hyper_parameters().size() > 0) {
    _internal_set_hyper_parameters(from._internal_hyper_parameters());
  }
  if (from.has_meta()) {
    _internal_mutable_meta()->::RequestMeta::MergeFrom(from._internal_meta());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::DatasetLocation::MergeFrom(from._internal_data());
  }
}

void TrainRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TrainRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainRequest::CopyFrom(const TrainRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TrainRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainRequest::IsInitialized() const {
  return true;
}

void TrainRequest::InternalSwap(TrainRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  template_name_.Swap(&other->template_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  hyper_parameters_.Swap(&other->hyper_parameters_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TrainRequest, data_)
      + sizeof(TrainRequest::data_)
      - PROTOBUF_FIELD_OFFSET(TrainRequest, meta_)>(
          reinterpret_cast<char*>(&meta_),
          reinterpret_cast<char*>(&other->meta_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TrainRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TrainResponse::InitAsDefaultInstance() {
  ::_TrainResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class TrainResponse::_Internal {
 public:
  static const ::ResponseStatus& status(const TrainResponse* msg);
};

const ::ResponseStatus&
TrainResponse::_Internal::status(const TrainResponse* msg) {
  return *msg->status_;
}
void TrainResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
TrainResponse::TrainResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TrainResponse)
}
TrainResponse::TrainResponse(const TrainResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  eid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_eid().empty()) {
    eid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_eid(),
      GetArena());
  }
  if (from._internal_has_status()) {
    status_ = new ::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:TrainResponse)
}

void TrainResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TrainResponse_proto_2ftrainer_2ftrainer_2eproto.base);
  eid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = nullptr;
}

TrainResponse::~TrainResponse() {
  // @@protoc_insertion_point(destructor:TrainResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TrainResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  eid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void TrainResponse::ArenaDtor(void* object) {
  TrainResponse* _this = reinterpret_cast< TrainResponse* >(object);
  (void)_this;
}
void TrainResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TrainResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TrainResponse& TrainResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TrainResponse_proto_2ftrainer_2ftrainer_2eproto.base);
  return *internal_default_instance();
}


void TrainResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TrainResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TrainResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string eid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_eid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TrainResponse.eid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TrainResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TrainResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // string eid = 2;
  if (this->eid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_eid().data(), static_cast<int>(this->_internal_eid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TrainResponse.eid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_eid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TrainResponse)
  return target;
}

size_t TrainResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TrainResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string eid = 2;
  if (this->eid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_eid());
  }

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrainResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TrainResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TrainResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TrainResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TrainResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TrainResponse)
    MergeFrom(*source);
  }
}

void TrainResponse::MergeFrom(const TrainResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TrainResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.eid().size() > 0) {
    _internal_set_eid(from._internal_eid());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::ResponseStatus::MergeFrom(from._internal_status());
  }
}

void TrainResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TrainResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainResponse::CopyFrom(const TrainResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TrainResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainResponse::IsInitialized() const {
  return true;
}

void TrainResponse::InternalSwap(TrainResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  eid_.Swap(&other->eid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TrainResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetStatusRequest::InitAsDefaultInstance() {
  ::_GetStatusRequest_default_instance_._instance.get_mutable()->meta_ = const_cast< ::RequestMeta*>(
      ::RequestMeta::internal_default_instance());
}
class GetStatusRequest::_Internal {
 public:
  static const ::RequestMeta& meta(const GetStatusRequest* msg);
};

const ::RequestMeta&
GetStatusRequest::_Internal::meta(const GetStatusRequest* msg) {
  return *msg->meta_;
}
void GetStatusRequest::clear_meta() {
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
}
GetStatusRequest::GetStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetStatusRequest)
}
GetStatusRequest::GetStatusRequest(const GetStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  eid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_eid().empty()) {
    eid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_eid(),
      GetArena());
  }
  if (from._internal_has_meta()) {
    meta_ = new ::RequestMeta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:GetStatusRequest)
}

void GetStatusRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetStatusRequest_proto_2ftrainer_2ftrainer_2eproto.base);
  eid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  meta_ = nullptr;
}

GetStatusRequest::~GetStatusRequest() {
  // @@protoc_insertion_point(destructor:GetStatusRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  eid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete meta_;
}

void GetStatusRequest::ArenaDtor(void* object) {
  GetStatusRequest* _this = reinterpret_cast< GetStatusRequest* >(object);
  (void)_this;
}
void GetStatusRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetStatusRequest& GetStatusRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetStatusRequest_proto_2ftrainer_2ftrainer_2eproto.base);
  return *internal_default_instance();
}


void GetStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatusRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .RequestMeta meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string eid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_eid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GetStatusRequest.eid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetStatusRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::meta(this), target, stream);
  }

  // string eid = 2;
  if (this->eid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_eid().data(), static_cast<int>(this->_internal_eid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetStatusRequest.eid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_eid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetStatusRequest)
  return target;
}

size_t GetStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetStatusRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string eid = 2;
  if (this->eid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_eid());
  }

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStatusRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStatusRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetStatusRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetStatusRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetStatusRequest)
    MergeFrom(*source);
  }
}

void GetStatusRequest::MergeFrom(const GetStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.eid().size() > 0) {
    _internal_set_eid(from._internal_eid());
  }
  if (from.has_meta()) {
    _internal_mutable_meta()->::RequestMeta::MergeFrom(from._internal_meta());
  }
}

void GetStatusRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStatusRequest::CopyFrom(const GetStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatusRequest::IsInitialized() const {
  return true;
}

void GetStatusRequest::InternalSwap(GetStatusRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  eid_.Swap(&other->eid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(meta_, other->meta_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatusRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetStatusResponse::InitAsDefaultInstance() {
  ::_GetStatusResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
  ::_GetStatusResponse_default_instance_._instance.get_mutable()->data_fetch_status_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
  ::_GetStatusResponse_default_instance_._instance.get_mutable()->train_status_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
  ::_GetStatusResponse_default_instance_._instance.get_mutable()->progress_status_ = const_cast< ::ProgressStatus*>(
      ::ProgressStatus::internal_default_instance());
  ::_GetStatusResponse_default_instance_._instance.get_mutable()->eval_status_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
  ::_GetStatusResponse_default_instance_._instance.get_mutable()->status_modified_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class GetStatusResponse::_Internal {
 public:
  static const ::ResponseStatus& status(const GetStatusResponse* msg);
  static const ::ResponseStatus& data_fetch_status(const GetStatusResponse* msg);
  static const ::ResponseStatus& train_status(const GetStatusResponse* msg);
  static const ::ProgressStatus& progress_status(const GetStatusResponse* msg);
  static const ::ResponseStatus& eval_status(const GetStatusResponse* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& status_modified_at(const GetStatusResponse* msg);
};

const ::ResponseStatus&
GetStatusResponse::_Internal::status(const GetStatusResponse* msg) {
  return *msg->status_;
}
const ::ResponseStatus&
GetStatusResponse::_Internal::data_fetch_status(const GetStatusResponse* msg) {
  return *msg->data_fetch_status_;
}
const ::ResponseStatus&
GetStatusResponse::_Internal::train_status(const GetStatusResponse* msg) {
  return *msg->train_status_;
}
const ::ProgressStatus&
GetStatusResponse::_Internal::progress_status(const GetStatusResponse* msg) {
  return *msg->progress_status_;
}
const ::ResponseStatus&
GetStatusResponse::_Internal::eval_status(const GetStatusResponse* msg) {
  return *msg->eval_status_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
GetStatusResponse::_Internal::status_modified_at(const GetStatusResponse* msg) {
  return *msg->status_modified_at_;
}
void GetStatusResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void GetStatusResponse::clear_data_fetch_status() {
  if (GetArena() == nullptr && data_fetch_status_ != nullptr) {
    delete data_fetch_status_;
  }
  data_fetch_status_ = nullptr;
}
void GetStatusResponse::clear_train_status() {
  if (GetArena() == nullptr && train_status_ != nullptr) {
    delete train_status_;
  }
  train_status_ = nullptr;
}
void GetStatusResponse::clear_progress_status() {
  if (GetArena() == nullptr && progress_status_ != nullptr) {
    delete progress_status_;
  }
  progress_status_ = nullptr;
}
void GetStatusResponse::clear_eval_status() {
  if (GetArena() == nullptr && eval_status_ != nullptr) {
    delete eval_status_;
  }
  eval_status_ = nullptr;
}
void GetStatusResponse::clear_status_modified_at() {
  if (GetArena() == nullptr && status_modified_at_ != nullptr) {
    delete status_modified_at_;
  }
  status_modified_at_ = nullptr;
}
GetStatusResponse::GetStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetStatusResponse)
}
GetStatusResponse::GetStatusResponse(const GetStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data_fetch_status()) {
    data_fetch_status_ = new ::ResponseStatus(*from.data_fetch_status_);
  } else {
    data_fetch_status_ = nullptr;
  }
  if (from._internal_has_train_status()) {
    train_status_ = new ::ResponseStatus(*from.train_status_);
  } else {
    train_status_ = nullptr;
  }
  if (from._internal_has_progress_status()) {
    progress_status_ = new ::ProgressStatus(*from.progress_status_);
  } else {
    progress_status_ = nullptr;
  }
  if (from._internal_has_eval_status()) {
    eval_status_ = new ::ResponseStatus(*from.eval_status_);
  } else {
    eval_status_ = nullptr;
  }
  if (from._internal_has_status_modified_at()) {
    status_modified_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.status_modified_at_);
  } else {
    status_modified_at_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:GetStatusResponse)
}

void GetStatusResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetStatusResponse_proto_2ftrainer_2ftrainer_2eproto.base);
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_modified_at_) -
      reinterpret_cast<char*>(&status_)) + sizeof(status_modified_at_));
}

GetStatusResponse::~GetStatusResponse() {
  // @@protoc_insertion_point(destructor:GetStatusResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_fetch_status_;
  if (this != internal_default_instance()) delete train_status_;
  if (this != internal_default_instance()) delete progress_status_;
  if (this != internal_default_instance()) delete eval_status_;
  if (this != internal_default_instance()) delete status_modified_at_;
}

void GetStatusResponse::ArenaDtor(void* object) {
  GetStatusResponse* _this = reinterpret_cast< GetStatusResponse* >(object);
  (void)_this;
}
void GetStatusResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetStatusResponse& GetStatusResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetStatusResponse_proto_2ftrainer_2ftrainer_2eproto.base);
  return *internal_default_instance();
}


void GetStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_fetch_status_ != nullptr) {
    delete data_fetch_status_;
  }
  data_fetch_status_ = nullptr;
  if (GetArena() == nullptr && train_status_ != nullptr) {
    delete train_status_;
  }
  train_status_ = nullptr;
  if (GetArena() == nullptr && progress_status_ != nullptr) {
    delete progress_status_;
  }
  progress_status_ = nullptr;
  if (GetArena() == nullptr && eval_status_ != nullptr) {
    delete eval_status_;
  }
  eval_status_ = nullptr;
  if (GetArena() == nullptr && status_modified_at_ != nullptr) {
    delete status_modified_at_;
  }
  status_modified_at_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatusResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ResponseStatus data_fetch_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data_fetch_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ResponseStatus train_status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_train_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ProgressStatus progress_status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_progress_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ResponseStatus eval_status = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_eval_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp status_modified_at = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_status_modified_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetStatusResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .ResponseStatus data_fetch_status = 2;
  if (this->has_data_fetch_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data_fetch_status(this), target, stream);
  }

  // .ResponseStatus train_status = 3;
  if (this->has_train_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::train_status(this), target, stream);
  }

  // .ProgressStatus progress_status = 4;
  if (this->has_progress_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::progress_status(this), target, stream);
  }

  // .ResponseStatus eval_status = 5;
  if (this->has_eval_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::eval_status(this), target, stream);
  }

  // .google.protobuf.Timestamp status_modified_at = 10;
  if (this->has_status_modified_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::status_modified_at(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetStatusResponse)
  return target;
}

size_t GetStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetStatusResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .ResponseStatus data_fetch_status = 2;
  if (this->has_data_fetch_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_fetch_status_);
  }

  // .ResponseStatus train_status = 3;
  if (this->has_train_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *train_status_);
  }

  // .ProgressStatus progress_status = 4;
  if (this->has_progress_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *progress_status_);
  }

  // .ResponseStatus eval_status = 5;
  if (this->has_eval_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *eval_status_);
  }

  // .google.protobuf.Timestamp status_modified_at = 10;
  if (this->has_status_modified_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_modified_at_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStatusResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStatusResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetStatusResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetStatusResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetStatusResponse)
    MergeFrom(*source);
  }
}

void GetStatusResponse::MergeFrom(const GetStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::ResponseStatus::MergeFrom(from._internal_status());
  }
  if (from.has_data_fetch_status()) {
    _internal_mutable_data_fetch_status()->::ResponseStatus::MergeFrom(from._internal_data_fetch_status());
  }
  if (from.has_train_status()) {
    _internal_mutable_train_status()->::ResponseStatus::MergeFrom(from._internal_train_status());
  }
  if (from.has_progress_status()) {
    _internal_mutable_progress_status()->::ProgressStatus::MergeFrom(from._internal_progress_status());
  }
  if (from.has_eval_status()) {
    _internal_mutable_eval_status()->::ResponseStatus::MergeFrom(from._internal_eval_status());
  }
  if (from.has_status_modified_at()) {
    _internal_mutable_status_modified_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_status_modified_at());
  }
}

void GetStatusResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStatusResponse::CopyFrom(const GetStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatusResponse::IsInitialized() const {
  return true;
}

void GetStatusResponse::InternalSwap(GetStatusResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetStatusResponse, status_modified_at_)
      + sizeof(GetStatusResponse::status_modified_at_)
      - PROTOBUF_FIELD_OFFSET(GetStatusResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatusResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetEvaluationsRequest::InitAsDefaultInstance() {
  ::_GetEvaluationsRequest_default_instance_._instance.get_mutable()->meta_ = const_cast< ::RequestMeta*>(
      ::RequestMeta::internal_default_instance());
}
class GetEvaluationsRequest::_Internal {
 public:
  static const ::RequestMeta& meta(const GetEvaluationsRequest* msg);
};

const ::RequestMeta&
GetEvaluationsRequest::_Internal::meta(const GetEvaluationsRequest* msg) {
  return *msg->meta_;
}
void GetEvaluationsRequest::clear_meta() {
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
}
GetEvaluationsRequest::GetEvaluationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetEvaluationsRequest)
}
GetEvaluationsRequest::GetEvaluationsRequest(const GetEvaluationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  eid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_eid().empty()) {
    eid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_eid(),
      GetArena());
  }
  if (from._internal_has_meta()) {
    meta_ = new ::RequestMeta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:GetEvaluationsRequest)
}

void GetEvaluationsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetEvaluationsRequest_proto_2ftrainer_2ftrainer_2eproto.base);
  eid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  meta_ = nullptr;
}

GetEvaluationsRequest::~GetEvaluationsRequest() {
  // @@protoc_insertion_point(destructor:GetEvaluationsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetEvaluationsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  eid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete meta_;
}

void GetEvaluationsRequest::ArenaDtor(void* object) {
  GetEvaluationsRequest* _this = reinterpret_cast< GetEvaluationsRequest* >(object);
  (void)_this;
}
void GetEvaluationsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetEvaluationsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEvaluationsRequest& GetEvaluationsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetEvaluationsRequest_proto_2ftrainer_2ftrainer_2eproto.base);
  return *internal_default_instance();
}


void GetEvaluationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetEvaluationsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEvaluationsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .RequestMeta meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string eid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_eid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GetEvaluationsRequest.eid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEvaluationsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetEvaluationsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::meta(this), target, stream);
  }

  // string eid = 2;
  if (this->eid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_eid().data(), static_cast<int>(this->_internal_eid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetEvaluationsRequest.eid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_eid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetEvaluationsRequest)
  return target;
}

size_t GetEvaluationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetEvaluationsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string eid = 2;
  if (this->eid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_eid());
  }

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEvaluationsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetEvaluationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEvaluationsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEvaluationsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetEvaluationsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetEvaluationsRequest)
    MergeFrom(*source);
  }
}

void GetEvaluationsRequest::MergeFrom(const GetEvaluationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetEvaluationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.eid().size() > 0) {
    _internal_set_eid(from._internal_eid());
  }
  if (from.has_meta()) {
    _internal_mutable_meta()->::RequestMeta::MergeFrom(from._internal_meta());
  }
}

void GetEvaluationsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetEvaluationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEvaluationsRequest::CopyFrom(const GetEvaluationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetEvaluationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEvaluationsRequest::IsInitialized() const {
  return true;
}

void GetEvaluationsRequest::InternalSwap(GetEvaluationsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  eid_.Swap(&other->eid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(meta_, other->meta_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEvaluationsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetEvaluationsResponse_EvaluationsEntry_DoNotUse::GetEvaluationsResponse_EvaluationsEntry_DoNotUse() {}
GetEvaluationsResponse_EvaluationsEntry_DoNotUse::GetEvaluationsResponse_EvaluationsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetEvaluationsResponse_EvaluationsEntry_DoNotUse::MergeFrom(const GetEvaluationsResponse_EvaluationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetEvaluationsResponse_EvaluationsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetEvaluationsResponse_EvaluationsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetEvaluationsResponse::InitAsDefaultInstance() {
  ::_GetEvaluationsResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class GetEvaluationsResponse::_Internal {
 public:
  static const ::ResponseStatus& status(const GetEvaluationsResponse* msg);
};

const ::ResponseStatus&
GetEvaluationsResponse::_Internal::status(const GetEvaluationsResponse* msg) {
  return *msg->status_;
}
void GetEvaluationsResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void GetEvaluationsResponse::clear_evaluations() {
  evaluations_.Clear();
}
GetEvaluationsResponse::GetEvaluationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  evaluations_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetEvaluationsResponse)
}
GetEvaluationsResponse::GetEvaluationsResponse(const GetEvaluationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  evaluations_.MergeFrom(from.evaluations_);
  if (from._internal_has_status()) {
    status_ = new ::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:GetEvaluationsResponse)
}

void GetEvaluationsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetEvaluationsResponse_proto_2ftrainer_2ftrainer_2eproto.base);
  status_ = nullptr;
}

GetEvaluationsResponse::~GetEvaluationsResponse() {
  // @@protoc_insertion_point(destructor:GetEvaluationsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetEvaluationsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void GetEvaluationsResponse::ArenaDtor(void* object) {
  GetEvaluationsResponse* _this = reinterpret_cast< GetEvaluationsResponse* >(object);
  (void)_this;
}
void GetEvaluationsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetEvaluationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEvaluationsResponse& GetEvaluationsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetEvaluationsResponse_proto_2ftrainer_2ftrainer_2eproto.base);
  return *internal_default_instance();
}


void GetEvaluationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetEvaluationsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  evaluations_.Clear();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEvaluationsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .EvaluationResult> evaluations = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&evaluations_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEvaluationsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetEvaluationsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // map<string, .EvaluationResult> evaluations = 2;
  if (!this->_internal_evaluations().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::EvaluationResult >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "GetEvaluationsResponse.EvaluationsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_evaluations().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_evaluations().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::EvaluationResult >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::EvaluationResult >::const_iterator
          it = this->_internal_evaluations().begin();
          it != this->_internal_evaluations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetEvaluationsResponse_EvaluationsEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::EvaluationResult >::const_iterator
          it = this->_internal_evaluations().begin();
          it != this->_internal_evaluations().end(); ++it) {
        target = GetEvaluationsResponse_EvaluationsEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetEvaluationsResponse)
  return target;
}

size_t GetEvaluationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetEvaluationsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .EvaluationResult> evaluations = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_evaluations_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::EvaluationResult >::const_iterator
      it = this->_internal_evaluations().begin();
      it != this->_internal_evaluations().end(); ++it) {
    total_size += GetEvaluationsResponse_EvaluationsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEvaluationsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetEvaluationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEvaluationsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEvaluationsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetEvaluationsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetEvaluationsResponse)
    MergeFrom(*source);
  }
}

void GetEvaluationsResponse::MergeFrom(const GetEvaluationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetEvaluationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  evaluations_.MergeFrom(from.evaluations_);
  if (from.has_status()) {
    _internal_mutable_status()->::ResponseStatus::MergeFrom(from._internal_status());
  }
}

void GetEvaluationsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetEvaluationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEvaluationsResponse::CopyFrom(const GetEvaluationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetEvaluationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEvaluationsResponse::IsInitialized() const {
  return true;
}

void GetEvaluationsResponse::InternalSwap(GetEvaluationsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  evaluations_.Swap(&other->evaluations_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEvaluationsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TrainingTemplate::InitAsDefaultInstance() {
}
class TrainingTemplate::_Internal {
 public:
};

TrainingTemplate::TrainingTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TrainingTemplate)
}
TrainingTemplate::TrainingTemplate(const TrainingTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  default_args_json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_default_args_json().empty()) {
    default_args_json_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_default_args_json(),
      GetArena());
  }
  doc_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_doc_string().empty()) {
    doc_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_doc_string(),
      GetArena());
  }
  model_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_model_type().empty()) {
    model_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_model_type(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:TrainingTemplate)
}

void TrainingTemplate::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TrainingTemplate_proto_2ftrainer_2ftrainer_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  default_args_json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  doc_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TrainingTemplate::~TrainingTemplate() {
  // @@protoc_insertion_point(destructor:TrainingTemplate)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TrainingTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  default_args_json_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  doc_string_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TrainingTemplate::ArenaDtor(void* object) {
  TrainingTemplate* _this = reinterpret_cast< TrainingTemplate* >(object);
  (void)_this;
}
void TrainingTemplate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TrainingTemplate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TrainingTemplate& TrainingTemplate::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TrainingTemplate_proto_2ftrainer_2ftrainer_2eproto.base);
  return *internal_default_instance();
}


void TrainingTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:TrainingTemplate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  default_args_json_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  doc_string_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  model_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TrainingTemplate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TrainingTemplate.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string default_args_json = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_default_args_json();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TrainingTemplate.default_args_json"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string doc_string = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_doc_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TrainingTemplate.doc_string"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string model_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_model_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TrainingTemplate.model_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TrainingTemplate::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TrainingTemplate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TrainingTemplate.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string default_args_json = 2;
  if (this->default_args_json().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_default_args_json().data(), static_cast<int>(this->_internal_default_args_json().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TrainingTemplate.default_args_json");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_default_args_json(), target);
  }

  // string doc_string = 3;
  if (this->doc_string().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_doc_string().data(), static_cast<int>(this->_internal_doc_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TrainingTemplate.doc_string");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_doc_string(), target);
  }

  // string model_type = 4;
  if (this->model_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_type().data(), static_cast<int>(this->_internal_model_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TrainingTemplate.model_type");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_model_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TrainingTemplate)
  return target;
}

size_t TrainingTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TrainingTemplate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string default_args_json = 2;
  if (this->default_args_json().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_default_args_json());
  }

  // string doc_string = 3;
  if (this->doc_string().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_doc_string());
  }

  // string model_type = 4;
  if (this->model_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrainingTemplate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TrainingTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  const TrainingTemplate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TrainingTemplate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TrainingTemplate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TrainingTemplate)
    MergeFrom(*source);
  }
}

void TrainingTemplate::MergeFrom(const TrainingTemplate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TrainingTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.default_args_json().size() > 0) {
    _internal_set_default_args_json(from._internal_default_args_json());
  }
  if (from.doc_string().size() > 0) {
    _internal_set_doc_string(from._internal_doc_string());
  }
  if (from.model_type().size() > 0) {
    _internal_set_model_type(from._internal_model_type());
  }
}

void TrainingTemplate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TrainingTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainingTemplate::CopyFrom(const TrainingTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TrainingTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainingTemplate::IsInitialized() const {
  return true;
}

void TrainingTemplate::InternalSwap(TrainingTemplate* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  default_args_json_.Swap(&other->default_args_json_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  doc_string_.Swap(&other->doc_string_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  model_type_.Swap(&other->model_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata TrainingTemplate::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListTemplatesRequest::InitAsDefaultInstance() {
  ::_ListTemplatesRequest_default_instance_._instance.get_mutable()->meta_ = const_cast< ::RequestMeta*>(
      ::RequestMeta::internal_default_instance());
}
class ListTemplatesRequest::_Internal {
 public:
  static const ::RequestMeta& meta(const ListTemplatesRequest* msg);
};

const ::RequestMeta&
ListTemplatesRequest::_Internal::meta(const ListTemplatesRequest* msg) {
  return *msg->meta_;
}
void ListTemplatesRequest::clear_meta() {
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
}
ListTemplatesRequest::ListTemplatesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ListTemplatesRequest)
}
ListTemplatesRequest::ListTemplatesRequest(const ListTemplatesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_meta()) {
    meta_ = new ::RequestMeta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ListTemplatesRequest)
}

void ListTemplatesRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListTemplatesRequest_proto_2ftrainer_2ftrainer_2eproto.base);
  meta_ = nullptr;
}

ListTemplatesRequest::~ListTemplatesRequest() {
  // @@protoc_insertion_point(destructor:ListTemplatesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListTemplatesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete meta_;
}

void ListTemplatesRequest::ArenaDtor(void* object) {
  ListTemplatesRequest* _this = reinterpret_cast< ListTemplatesRequest* >(object);
  (void)_this;
}
void ListTemplatesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListTemplatesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListTemplatesRequest& ListTemplatesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListTemplatesRequest_proto_2ftrainer_2ftrainer_2eproto.base);
  return *internal_default_instance();
}


void ListTemplatesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ListTemplatesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListTemplatesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .RequestMeta meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListTemplatesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ListTemplatesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::meta(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ListTemplatesRequest)
  return target;
}

size_t ListTemplatesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ListTemplatesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListTemplatesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ListTemplatesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTemplatesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListTemplatesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ListTemplatesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ListTemplatesRequest)
    MergeFrom(*source);
  }
}

void ListTemplatesRequest::MergeFrom(const ListTemplatesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ListTemplatesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_meta()) {
    _internal_mutable_meta()->::RequestMeta::MergeFrom(from._internal_meta());
  }
}

void ListTemplatesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ListTemplatesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTemplatesRequest::CopyFrom(const ListTemplatesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ListTemplatesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTemplatesRequest::IsInitialized() const {
  return true;
}

void ListTemplatesRequest::InternalSwap(ListTemplatesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(meta_, other->meta_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListTemplatesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListTemplatesResponse::InitAsDefaultInstance() {
  ::_ListTemplatesResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class ListTemplatesResponse::_Internal {
 public:
  static const ::ResponseStatus& status(const ListTemplatesResponse* msg);
};

const ::ResponseStatus&
ListTemplatesResponse::_Internal::status(const ListTemplatesResponse* msg) {
  return *msg->status_;
}
void ListTemplatesResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
ListTemplatesResponse::ListTemplatesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  templates_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ListTemplatesResponse)
}
ListTemplatesResponse::ListTemplatesResponse(const ListTemplatesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      templates_(from.templates_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ListTemplatesResponse)
}

void ListTemplatesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListTemplatesResponse_proto_2ftrainer_2ftrainer_2eproto.base);
  status_ = nullptr;
}

ListTemplatesResponse::~ListTemplatesResponse() {
  // @@protoc_insertion_point(destructor:ListTemplatesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListTemplatesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ListTemplatesResponse::ArenaDtor(void* object) {
  ListTemplatesResponse* _this = reinterpret_cast< ListTemplatesResponse* >(object);
  (void)_this;
}
void ListTemplatesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListTemplatesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListTemplatesResponse& ListTemplatesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListTemplatesResponse_proto_2ftrainer_2ftrainer_2eproto.base);
  return *internal_default_instance();
}


void ListTemplatesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ListTemplatesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  templates_.Clear();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListTemplatesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .TrainingTemplate templates = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_templates(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListTemplatesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ListTemplatesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // repeated .TrainingTemplate templates = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_templates_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_templates(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ListTemplatesResponse)
  return target;
}

size_t ListTemplatesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ListTemplatesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TrainingTemplate templates = 2;
  total_size += 1UL * this->_internal_templates_size();
  for (const auto& msg : this->templates_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListTemplatesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ListTemplatesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTemplatesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListTemplatesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ListTemplatesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ListTemplatesResponse)
    MergeFrom(*source);
  }
}

void ListTemplatesResponse::MergeFrom(const ListTemplatesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ListTemplatesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  templates_.MergeFrom(from.templates_);
  if (from.has_status()) {
    _internal_mutable_status()->::ResponseStatus::MergeFrom(from._internal_status());
  }
}

void ListTemplatesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ListTemplatesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTemplatesResponse::CopyFrom(const ListTemplatesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ListTemplatesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTemplatesResponse::IsInitialized() const {
  return true;
}

void ListTemplatesResponse::InternalSwap(ListTemplatesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  templates_.InternalSwap(&other->templates_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListTemplatesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSpireConfigRequest::InitAsDefaultInstance() {
  ::_GetSpireConfigRequest_default_instance_._instance.get_mutable()->meta_ = const_cast< ::RequestMeta*>(
      ::RequestMeta::internal_default_instance());
}
class GetSpireConfigRequest::_Internal {
 public:
  static const ::RequestMeta& meta(const GetSpireConfigRequest* msg);
};

const ::RequestMeta&
GetSpireConfigRequest::_Internal::meta(const GetSpireConfigRequest* msg) {
  return *msg->meta_;
}
void GetSpireConfigRequest::clear_meta() {
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
}
GetSpireConfigRequest::GetSpireConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetSpireConfigRequest)
}
GetSpireConfigRequest::GetSpireConfigRequest(const GetSpireConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  eid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_eid().empty()) {
    eid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_eid(),
      GetArena());
  }
  if (from._internal_has_meta()) {
    meta_ = new ::RequestMeta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:GetSpireConfigRequest)
}

void GetSpireConfigRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSpireConfigRequest_proto_2ftrainer_2ftrainer_2eproto.base);
  eid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  meta_ = nullptr;
}

GetSpireConfigRequest::~GetSpireConfigRequest() {
  // @@protoc_insertion_point(destructor:GetSpireConfigRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSpireConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  eid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete meta_;
}

void GetSpireConfigRequest::ArenaDtor(void* object) {
  GetSpireConfigRequest* _this = reinterpret_cast< GetSpireConfigRequest* >(object);
  (void)_this;
}
void GetSpireConfigRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSpireConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSpireConfigRequest& GetSpireConfigRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSpireConfigRequest_proto_2ftrainer_2ftrainer_2eproto.base);
  return *internal_default_instance();
}


void GetSpireConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetSpireConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSpireConfigRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .RequestMeta meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string eid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_eid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GetSpireConfigRequest.eid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSpireConfigRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetSpireConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::meta(this), target, stream);
  }

  // string eid = 2;
  if (this->eid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_eid().data(), static_cast<int>(this->_internal_eid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetSpireConfigRequest.eid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_eid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetSpireConfigRequest)
  return target;
}

size_t GetSpireConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetSpireConfigRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string eid = 2;
  if (this->eid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_eid());
  }

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSpireConfigRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetSpireConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSpireConfigRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSpireConfigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetSpireConfigRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetSpireConfigRequest)
    MergeFrom(*source);
  }
}

void GetSpireConfigRequest::MergeFrom(const GetSpireConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetSpireConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.eid().size() > 0) {
    _internal_set_eid(from._internal_eid());
  }
  if (from.has_meta()) {
    _internal_mutable_meta()->::RequestMeta::MergeFrom(from._internal_meta());
  }
}

void GetSpireConfigRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetSpireConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSpireConfigRequest::CopyFrom(const GetSpireConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetSpireConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSpireConfigRequest::IsInitialized() const {
  return true;
}

void GetSpireConfigRequest::InternalSwap(GetSpireConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  eid_.Swap(&other->eid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(meta_, other->meta_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSpireConfigRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSpireConfigResponse::InitAsDefaultInstance() {
  ::_GetSpireConfigResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class GetSpireConfigResponse::_Internal {
 public:
  static const ::ResponseStatus& status(const GetSpireConfigResponse* msg);
};

const ::ResponseStatus&
GetSpireConfigResponse::_Internal::status(const GetSpireConfigResponse* msg) {
  return *msg->status_;
}
void GetSpireConfigResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
GetSpireConfigResponse::GetSpireConfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetSpireConfigResponse)
}
GetSpireConfigResponse::GetSpireConfigResponse(const GetSpireConfigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  spire_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_spire_name().empty()) {
    spire_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_spire_name(),
      GetArena());
  }
  spire_config_location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_spire_config_location().empty()) {
    spire_config_location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_spire_config_location(),
      GetArena());
  }
  checkpoint_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_checkpoint_root().empty()) {
    checkpoint_root_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_checkpoint_root(),
      GetArena());
  }
  if (from._internal_has_status()) {
    status_ = new ::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:GetSpireConfigResponse)
}

void GetSpireConfigResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSpireConfigResponse_proto_2ftrainer_2ftrainer_2eproto.base);
  spire_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  spire_config_location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  checkpoint_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = nullptr;
}

GetSpireConfigResponse::~GetSpireConfigResponse() {
  // @@protoc_insertion_point(destructor:GetSpireConfigResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSpireConfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  spire_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  spire_config_location_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  checkpoint_root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void GetSpireConfigResponse::ArenaDtor(void* object) {
  GetSpireConfigResponse* _this = reinterpret_cast< GetSpireConfigResponse* >(object);
  (void)_this;
}
void GetSpireConfigResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSpireConfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSpireConfigResponse& GetSpireConfigResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSpireConfigResponse_proto_2ftrainer_2ftrainer_2eproto.base);
  return *internal_default_instance();
}


void GetSpireConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetSpireConfigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spire_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  spire_config_location_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  checkpoint_root_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSpireConfigResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string spire_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_spire_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GetSpireConfigResponse.spire_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string spire_config_location = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_spire_config_location();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GetSpireConfigResponse.spire_config_location"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string checkpoint_root = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_checkpoint_root();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GetSpireConfigResponse.checkpoint_root"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSpireConfigResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetSpireConfigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // string spire_name = 2;
  if (this->spire_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_spire_name().data(), static_cast<int>(this->_internal_spire_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetSpireConfigResponse.spire_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_spire_name(), target);
  }

  // string spire_config_location = 3;
  if (this->spire_config_location().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_spire_config_location().data(), static_cast<int>(this->_internal_spire_config_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetSpireConfigResponse.spire_config_location");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_spire_config_location(), target);
  }

  // string checkpoint_root = 4;
  if (this->checkpoint_root().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_checkpoint_root().data(), static_cast<int>(this->_internal_checkpoint_root().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetSpireConfigResponse.checkpoint_root");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_checkpoint_root(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetSpireConfigResponse)
  return target;
}

size_t GetSpireConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetSpireConfigResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string spire_name = 2;
  if (this->spire_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_spire_name());
  }

  // string spire_config_location = 3;
  if (this->spire_config_location().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_spire_config_location());
  }

  // string checkpoint_root = 4;
  if (this->checkpoint_root().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_checkpoint_root());
  }

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSpireConfigResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetSpireConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSpireConfigResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSpireConfigResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetSpireConfigResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetSpireConfigResponse)
    MergeFrom(*source);
  }
}

void GetSpireConfigResponse::MergeFrom(const GetSpireConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetSpireConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.spire_name().size() > 0) {
    _internal_set_spire_name(from._internal_spire_name());
  }
  if (from.spire_config_location().size() > 0) {
    _internal_set_spire_config_location(from._internal_spire_config_location());
  }
  if (from.checkpoint_root().size() > 0) {
    _internal_set_checkpoint_root(from._internal_checkpoint_root());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::ResponseStatus::MergeFrom(from._internal_status());
  }
}

void GetSpireConfigResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetSpireConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSpireConfigResponse::CopyFrom(const GetSpireConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetSpireConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSpireConfigResponse::IsInitialized() const {
  return true;
}

void GetSpireConfigResponse::InternalSwap(GetSpireConfigResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  spire_name_.Swap(&other->spire_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  spire_config_location_.Swap(&other->spire_config_location_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  checkpoint_root_.Swap(&other->checkpoint_root_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSpireConfigResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EidCleanUpRequest::InitAsDefaultInstance() {
  ::_EidCleanUpRequest_default_instance_._instance.get_mutable()->meta_ = const_cast< ::RequestMeta*>(
      ::RequestMeta::internal_default_instance());
}
class EidCleanUpRequest::_Internal {
 public:
  static const ::RequestMeta& meta(const EidCleanUpRequest* msg);
};

const ::RequestMeta&
EidCleanUpRequest::_Internal::meta(const EidCleanUpRequest* msg) {
  return *msg->meta_;
}
void EidCleanUpRequest::clear_meta() {
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
}
EidCleanUpRequest::EidCleanUpRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:EidCleanUpRequest)
}
EidCleanUpRequest::EidCleanUpRequest(const EidCleanUpRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  eid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_eid().empty()) {
    eid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_eid(),
      GetArena());
  }
  if (from._internal_has_meta()) {
    meta_ = new ::RequestMeta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  ::memcpy(&delete_checkpoint_folder_, &from.delete_checkpoint_folder_,
    static_cast<size_t>(reinterpret_cast<char*>(&delete_cached_data_) -
    reinterpret_cast<char*>(&delete_checkpoint_folder_)) + sizeof(delete_cached_data_));
  // @@protoc_insertion_point(copy_constructor:EidCleanUpRequest)
}

void EidCleanUpRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EidCleanUpRequest_proto_2ftrainer_2ftrainer_2eproto.base);
  eid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&meta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delete_cached_data_) -
      reinterpret_cast<char*>(&meta_)) + sizeof(delete_cached_data_));
}

EidCleanUpRequest::~EidCleanUpRequest() {
  // @@protoc_insertion_point(destructor:EidCleanUpRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EidCleanUpRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  eid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete meta_;
}

void EidCleanUpRequest::ArenaDtor(void* object) {
  EidCleanUpRequest* _this = reinterpret_cast< EidCleanUpRequest* >(object);
  (void)_this;
}
void EidCleanUpRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EidCleanUpRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EidCleanUpRequest& EidCleanUpRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EidCleanUpRequest_proto_2ftrainer_2ftrainer_2eproto.base);
  return *internal_default_instance();
}


void EidCleanUpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:EidCleanUpRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  ::memset(&delete_checkpoint_folder_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delete_cached_data_) -
      reinterpret_cast<char*>(&delete_checkpoint_folder_)) + sizeof(delete_cached_data_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EidCleanUpRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .RequestMeta meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string eid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_eid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "EidCleanUpRequest.eid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool delete_checkpoint_folder = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          delete_checkpoint_folder_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool delete_cached_data = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          delete_cached_data_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EidCleanUpRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:EidCleanUpRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::meta(this), target, stream);
  }

  // string eid = 2;
  if (this->eid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_eid().data(), static_cast<int>(this->_internal_eid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "EidCleanUpRequest.eid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_eid(), target);
  }

  // bool delete_checkpoint_folder = 3;
  if (this->delete_checkpoint_folder() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_delete_checkpoint_folder(), target);
  }

  // bool delete_cached_data = 4;
  if (this->delete_cached_data() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_delete_cached_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EidCleanUpRequest)
  return target;
}

size_t EidCleanUpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EidCleanUpRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string eid = 2;
  if (this->eid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_eid());
  }

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // bool delete_checkpoint_folder = 3;
  if (this->delete_checkpoint_folder() != 0) {
    total_size += 1 + 1;
  }

  // bool delete_cached_data = 4;
  if (this->delete_cached_data() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EidCleanUpRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EidCleanUpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EidCleanUpRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EidCleanUpRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EidCleanUpRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EidCleanUpRequest)
    MergeFrom(*source);
  }
}

void EidCleanUpRequest::MergeFrom(const EidCleanUpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EidCleanUpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.eid().size() > 0) {
    _internal_set_eid(from._internal_eid());
  }
  if (from.has_meta()) {
    _internal_mutable_meta()->::RequestMeta::MergeFrom(from._internal_meta());
  }
  if (from.delete_checkpoint_folder() != 0) {
    _internal_set_delete_checkpoint_folder(from._internal_delete_checkpoint_folder());
  }
  if (from.delete_cached_data() != 0) {
    _internal_set_delete_cached_data(from._internal_delete_cached_data());
  }
}

void EidCleanUpRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EidCleanUpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EidCleanUpRequest::CopyFrom(const EidCleanUpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EidCleanUpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EidCleanUpRequest::IsInitialized() const {
  return true;
}

void EidCleanUpRequest::InternalSwap(EidCleanUpRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  eid_.Swap(&other->eid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EidCleanUpRequest, delete_cached_data_)
      + sizeof(EidCleanUpRequest::delete_cached_data_)
      - PROTOBUF_FIELD_OFFSET(EidCleanUpRequest, meta_)>(
          reinterpret_cast<char*>(&meta_),
          reinterpret_cast<char*>(&other->meta_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EidCleanUpRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EidCleanUpResponse::InitAsDefaultInstance() {
  ::_EidCleanUpResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class EidCleanUpResponse::_Internal {
 public:
  static const ::ResponseStatus& status(const EidCleanUpResponse* msg);
};

const ::ResponseStatus&
EidCleanUpResponse::_Internal::status(const EidCleanUpResponse* msg) {
  return *msg->status_;
}
void EidCleanUpResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
EidCleanUpResponse::EidCleanUpResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:EidCleanUpResponse)
}
EidCleanUpResponse::EidCleanUpResponse(const EidCleanUpResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:EidCleanUpResponse)
}

void EidCleanUpResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EidCleanUpResponse_proto_2ftrainer_2ftrainer_2eproto.base);
  status_ = nullptr;
}

EidCleanUpResponse::~EidCleanUpResponse() {
  // @@protoc_insertion_point(destructor:EidCleanUpResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EidCleanUpResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void EidCleanUpResponse::ArenaDtor(void* object) {
  EidCleanUpResponse* _this = reinterpret_cast< EidCleanUpResponse* >(object);
  (void)_this;
}
void EidCleanUpResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EidCleanUpResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EidCleanUpResponse& EidCleanUpResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EidCleanUpResponse_proto_2ftrainer_2ftrainer_2eproto.base);
  return *internal_default_instance();
}


void EidCleanUpResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:EidCleanUpResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EidCleanUpResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EidCleanUpResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:EidCleanUpResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EidCleanUpResponse)
  return target;
}

size_t EidCleanUpResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EidCleanUpResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EidCleanUpResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EidCleanUpResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EidCleanUpResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EidCleanUpResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EidCleanUpResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EidCleanUpResponse)
    MergeFrom(*source);
  }
}

void EidCleanUpResponse::MergeFrom(const EidCleanUpResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EidCleanUpResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::ResponseStatus::MergeFrom(from._internal_status());
  }
}

void EidCleanUpResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EidCleanUpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EidCleanUpResponse::CopyFrom(const EidCleanUpResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EidCleanUpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EidCleanUpResponse::IsInitialized() const {
  return true;
}

void EidCleanUpResponse::InternalSwap(EidCleanUpResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EidCleanUpResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::DatasetLocation* Arena::CreateMaybeMessage< ::DatasetLocation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DatasetLocation >(arena);
}
template<> PROTOBUF_NOINLINE ::TrainRequest* Arena::CreateMaybeMessage< ::TrainRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TrainRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TrainResponse* Arena::CreateMaybeMessage< ::TrainResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TrainResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::GetStatusRequest* Arena::CreateMaybeMessage< ::GetStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GetStatusResponse* Arena::CreateMaybeMessage< ::GetStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::GetEvaluationsRequest* Arena::CreateMaybeMessage< ::GetEvaluationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetEvaluationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GetEvaluationsResponse_EvaluationsEntry_DoNotUse* Arena::CreateMaybeMessage< ::GetEvaluationsResponse_EvaluationsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetEvaluationsResponse_EvaluationsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::GetEvaluationsResponse* Arena::CreateMaybeMessage< ::GetEvaluationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetEvaluationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::TrainingTemplate* Arena::CreateMaybeMessage< ::TrainingTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TrainingTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::ListTemplatesRequest* Arena::CreateMaybeMessage< ::ListTemplatesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ListTemplatesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ListTemplatesResponse* Arena::CreateMaybeMessage< ::ListTemplatesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ListTemplatesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::GetSpireConfigRequest* Arena::CreateMaybeMessage< ::GetSpireConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetSpireConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GetSpireConfigResponse* Arena::CreateMaybeMessage< ::GetSpireConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetSpireConfigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::EidCleanUpRequest* Arena::CreateMaybeMessage< ::EidCleanUpRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::EidCleanUpRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::EidCleanUpResponse* Arena::CreateMaybeMessage< ::EidCleanUpResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::EidCleanUpResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
