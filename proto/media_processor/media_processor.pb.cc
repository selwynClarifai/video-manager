// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/media_processor/media_processor.proto

#include "proto/media_processor/media_processor.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fdatabatch_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_DataBatch_proto_2futils_2fdatabatch_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fmedia_5fprocessor_2fmedia_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImageOutputFormats_proto_2fmedia_5fprocessor_2fmedia_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fmedia_5fprocessor_2fmedia_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MultipleImageOutputFormat_proto_2fmedia_5fprocessor_2fmedia_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2frequest_5fmeta_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2frequest_5fmeta_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fmedia_5fprocessor_2fmedia_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VideoOutputFormats_proto_2fmedia_5fprocessor_2fmedia_2eproto;
class MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse> _instance;
} _MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse_default_instance_;
class MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse> _instance;
} _MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse_default_instance_;
class MediaProcessorProcessImageRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MediaProcessorProcessImageRequest> _instance;
} _MediaProcessorProcessImageRequest_default_instance_;
class MediaProcessorProcessImageResponse_ResultsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse> _instance;
} _MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse_default_instance_;
class MediaProcessorProcessImageResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MediaProcessorProcessImageResponse> _instance;
} _MediaProcessorProcessImageResponse_default_instance_;
class MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse> _instance;
} _MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse_default_instance_;
class MediaProcessorProcessVideoRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MediaProcessorProcessVideoRequest> _instance;
} _MediaProcessorProcessVideoRequest_default_instance_;
class MediaProcessorProcessVideoResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MediaProcessorProcessVideoResponse> _instance;
} _MediaProcessorProcessVideoResponse_default_instance_;
class MediaProcessorGetStateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MediaProcessorGetStateRequest> _instance;
} _MediaProcessorGetStateRequest_default_instance_;
class MediaProcessorGetStateResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MediaProcessorGetStateResponse> _instance;
} _MediaProcessorGetStateResponse_default_instance_;
static void InitDefaultsscc_info_MediaProcessorGetStateRequest_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MediaProcessorGetStateRequest_default_instance_;
    new (ptr) ::MediaProcessorGetStateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MediaProcessorGetStateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MediaProcessorGetStateRequest_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MediaProcessorGetStateRequest_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto}, {
      &scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto.base,}};

static void InitDefaultsscc_info_MediaProcessorGetStateResponse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MediaProcessorGetStateResponse_default_instance_;
    new (ptr) ::MediaProcessorGetStateResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MediaProcessorGetStateResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MediaProcessorGetStateResponse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MediaProcessorGetStateResponse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto}, {
      &scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto.base,}};

static void InitDefaultsscc_info_MediaProcessorProcessImageRequest_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MediaProcessorProcessImageRequest_default_instance_;
    new (ptr) ::MediaProcessorProcessImageRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MediaProcessorProcessImageRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_MediaProcessorProcessImageRequest_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_MediaProcessorProcessImageRequest_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto}, {
      &scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto.base,
      &scc_info_DataBatch_proto_2futils_2fdatabatch_2eproto.base,
      &scc_info_MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base,
      &scc_info_MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base,}};

static void InitDefaultsscc_info_MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse_default_instance_;
    new (ptr) ::MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse();
  }
  ::MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto}, {
      &scc_info_MultipleImageOutputFormat_proto_2fmedia_5fprocessor_2fmedia_2eproto.base,}};

static void InitDefaultsscc_info_MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse_default_instance_;
    new (ptr) ::MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse();
  }
  ::MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto}, {
      &scc_info_ImageOutputFormats_proto_2fmedia_5fprocessor_2fmedia_2eproto.base,}};

static void InitDefaultsscc_info_MediaProcessorProcessImageResponse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MediaProcessorProcessImageResponse_default_instance_;
    new (ptr) ::MediaProcessorProcessImageResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MediaProcessorProcessImageResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_MediaProcessorProcessImageResponse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_MediaProcessorProcessImageResponse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto}, {
      &scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto.base,
      &scc_info_MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base,}};

static void InitDefaultsscc_info_MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse_default_instance_;
    new (ptr) ::MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse();
  }
  ::MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto}, {
      &scc_info_DataBatch_proto_2futils_2fdatabatch_2eproto.base,}};

static void InitDefaultsscc_info_MediaProcessorProcessVideoRequest_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MediaProcessorProcessVideoRequest_default_instance_;
    new (ptr) ::MediaProcessorProcessVideoRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MediaProcessorProcessVideoRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_MediaProcessorProcessVideoRequest_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_MediaProcessorProcessVideoRequest_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto}, {
      &scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto.base,
      &scc_info_DataBatch_proto_2futils_2fdatabatch_2eproto.base,
      &scc_info_MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base,}};

static void InitDefaultsscc_info_MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse_default_instance_;
    new (ptr) ::MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse();
  }
  ::MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto}, {
      &scc_info_VideoOutputFormats_proto_2fmedia_5fprocessor_2fmedia_2eproto.base,}};

static void InitDefaultsscc_info_MediaProcessorProcessVideoResponse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MediaProcessorProcessVideoResponse_default_instance_;
    new (ptr) ::MediaProcessorProcessVideoResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MediaProcessorProcessVideoResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_MediaProcessorProcessVideoResponse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_MediaProcessorProcessVideoResponse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto}, {
      &scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto.base,
      &scc_info_DataBatch_proto_2futils_2fdatabatch_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessImageRequest, meta_),
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessImageRequest, data_),
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessImageRequest, output_formats_),
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessImageRequest, multi_output_formats_),
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessImageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessImageResponse, status_),
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessImageResponse, results_),
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessVideoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessVideoRequest, meta_),
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessVideoRequest, data_),
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessVideoRequest, output_formats_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessVideoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessVideoResponse, status_),
  PROTOBUF_FIELD_OFFSET(::MediaProcessorProcessVideoResponse, results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MediaProcessorGetStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MediaProcessorGetStateRequest, meta_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MediaProcessorGetStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MediaProcessorGetStateResponse, status_),
  PROTOBUF_FIELD_OFFSET(::MediaProcessorGetStateResponse, state_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse)},
  { 9, 16, sizeof(::MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse)},
  { 18, -1, sizeof(::MediaProcessorProcessImageRequest)},
  { 27, 34, sizeof(::MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse)},
  { 36, -1, sizeof(::MediaProcessorProcessImageResponse)},
  { 43, 50, sizeof(::MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse)},
  { 52, -1, sizeof(::MediaProcessorProcessVideoRequest)},
  { 60, -1, sizeof(::MediaProcessorProcessVideoResponse)},
  { 67, -1, sizeof(::MediaProcessorGetStateRequest)},
  { 73, -1, sizeof(::MediaProcessorGetStateResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MediaProcessorProcessImageRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MediaProcessorProcessImageResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MediaProcessorProcessVideoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MediaProcessorProcessVideoResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MediaProcessorGetStateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MediaProcessorGetStateResponse_default_instance_),
};

const char descriptor_table_protodef_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n+proto/media_processor/media_processor."
  "proto\032!proto/media_processor/media.proto"
  "\032\033proto/utils/databatch.proto\032\036proto/uti"
  "ls/request_meta.proto\"\244\003\n!MediaProcessor"
  "ProcessImageRequest\022\032\n\004meta\030\001 \001(\0132\014.Requ"
  "estMeta\022\030\n\004data\030\002 \001(\0132\n.DataBatch\022M\n\016out"
  "put_formats\030\003 \003(\01325.MediaProcessorProces"
  "sImageRequest.OutputFormatsEntry\022X\n\024mult"
  "i_output_formats\030\004 \003(\0132:.MediaProcessorP"
  "rocessImageRequest.MultiOutputFormatsEnt"
  "ry\032I\n\022OutputFormatsEntry\022\013\n\003key\030\001 \001(\t\022\"\n"
  "\005value\030\002 \001(\0132\023.ImageOutputFormats:\0028\001\032U\n"
  "\027MultiOutputFormatsEntry\022\013\n\003key\030\001 \001(\t\022)\n"
  "\005value\030\002 \001(\0132\032.MultipleImageOutputFormat"
  ":\0028\001\"\304\001\n\"MediaProcessorProcessImageRespo"
  "nse\022\037\n\006status\030\001 \001(\0132\017.ResponseStatus\022A\n\007"
  "results\030\002 \003(\01320.MediaProcessorProcessIma"
  "geResponse.ResultsEntry\032:\n\014ResultsEntry\022"
  "\013\n\003key\030\001 \001(\t\022\031\n\005value\030\002 \001(\0132\n.DataBatch:"
  "\0028\001\"\363\001\n!MediaProcessorProcessVideoReques"
  "t\022\032\n\004meta\030\001 \001(\0132\014.RequestMeta\022\030\n\004data\030\002 "
  "\001(\0132\n.DataBatch\022M\n\016output_formats\030\003 \003(\0132"
  "5.MediaProcessorProcessVideoRequest.Outp"
  "utFormatsEntry\032I\n\022OutputFormatsEntry\022\013\n\003"
  "key\030\001 \001(\t\022\"\n\005value\030\002 \001(\0132\023.VideoOutputFo"
  "rmats:\0028\001\"b\n\"MediaProcessorProcessVideoR"
  "esponse\022\037\n\006status\030\001 \001(\0132\017.ResponseStatus"
  "\022\033\n\007results\030\002 \001(\0132\n.DataBatch\";\n\035MediaPr"
  "ocessorGetStateRequest\022\032\n\004meta\030\001 \001(\0132\014.R"
  "equestMeta\"P\n\036MediaProcessorGetStateResp"
  "onse\022\037\n\006status\030\001 \001(\0132\017.ResponseStatus\022\r\n"
  "\005state\030\002 \001(\t2\234\004\n\016MediaProcessor\022i\n\032Media"
  "ProcessorProcessImage\022\".MediaProcessorPr"
  "ocessImageRequest\032#.MediaProcessorProces"
  "sImageResponse\"\0000\001\022k\n\036MediaProcessorProc"
  "essImageSync\022\".MediaProcessorProcessImag"
  "eRequest\032#.MediaProcessorProcessImageRes"
  "ponse\"\000\022g\n\032MediaProcessorProcessVideo\022\"."
  "MediaProcessorProcessVideoRequest\032#.Medi"
  "aProcessorProcessVideoResponse\"\000\022l\n\037Medi"
  "aProcessorGetVideoThumbnail\022\".MediaProce"
  "ssorProcessVideoRequest\032#.MediaProcessor"
  "ProcessVideoResponse\"\000\022[\n\026MediaProcessor"
  "GetState\022\036.MediaProcessorGetStateRequest"
  "\032\037.MediaProcessorGetStateResponse\"\000B\021Z\017m"
  "edia_processorb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto_deps[3] = {
  &::descriptor_table_proto_2fmedia_5fprocessor_2fmedia_2eproto,
  &::descriptor_table_proto_2futils_2fdatabatch_2eproto,
  &::descriptor_table_proto_2futils_2frequest_5fmeta_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto_sccs[10] = {
  &scc_info_MediaProcessorGetStateRequest_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base,
  &scc_info_MediaProcessorGetStateResponse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base,
  &scc_info_MediaProcessorProcessImageRequest_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base,
  &scc_info_MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base,
  &scc_info_MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base,
  &scc_info_MediaProcessorProcessImageResponse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base,
  &scc_info_MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base,
  &scc_info_MediaProcessorProcessVideoRequest_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base,
  &scc_info_MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base,
  &scc_info_MediaProcessorProcessVideoResponse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto = {
  false, false, descriptor_table_protodef_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto, "proto/media_processor/media_processor.proto", 1822,
  &descriptor_table_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto_once, descriptor_table_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto_sccs, descriptor_table_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto_deps, 10, 3,
  schemas, file_default_instances, TableStruct_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto::offsets,
  file_level_metadata_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto, 10, file_level_enum_descriptors_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto, file_level_service_descriptors_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto)), true);

// ===================================================================

MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse::MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse() {}
MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse::MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse::MergeFrom(const MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse::MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse() {}
MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse::MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse::MergeFrom(const MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void MediaProcessorProcessImageRequest::InitAsDefaultInstance() {
  ::_MediaProcessorProcessImageRequest_default_instance_._instance.get_mutable()->meta_ = const_cast< ::RequestMeta*>(
      ::RequestMeta::internal_default_instance());
  ::_MediaProcessorProcessImageRequest_default_instance_._instance.get_mutable()->data_ = const_cast< ::DataBatch*>(
      ::DataBatch::internal_default_instance());
}
class MediaProcessorProcessImageRequest::_Internal {
 public:
  static const ::RequestMeta& meta(const MediaProcessorProcessImageRequest* msg);
  static const ::DataBatch& data(const MediaProcessorProcessImageRequest* msg);
};

const ::RequestMeta&
MediaProcessorProcessImageRequest::_Internal::meta(const MediaProcessorProcessImageRequest* msg) {
  return *msg->meta_;
}
const ::DataBatch&
MediaProcessorProcessImageRequest::_Internal::data(const MediaProcessorProcessImageRequest* msg) {
  return *msg->data_;
}
void MediaProcessorProcessImageRequest::clear_meta() {
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
}
void MediaProcessorProcessImageRequest::clear_data() {
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
void MediaProcessorProcessImageRequest::clear_output_formats() {
  output_formats_.Clear();
}
void MediaProcessorProcessImageRequest::clear_multi_output_formats() {
  multi_output_formats_.Clear();
}
MediaProcessorProcessImageRequest::MediaProcessorProcessImageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  output_formats_(arena),
  multi_output_formats_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MediaProcessorProcessImageRequest)
}
MediaProcessorProcessImageRequest::MediaProcessorProcessImageRequest(const MediaProcessorProcessImageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  output_formats_.MergeFrom(from.output_formats_);
  multi_output_formats_.MergeFrom(from.multi_output_formats_);
  if (from._internal_has_meta()) {
    meta_ = new ::RequestMeta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::DataBatch(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MediaProcessorProcessImageRequest)
}

void MediaProcessorProcessImageRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MediaProcessorProcessImageRequest_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base);
  ::memset(&meta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&meta_)) + sizeof(data_));
}

MediaProcessorProcessImageRequest::~MediaProcessorProcessImageRequest() {
  // @@protoc_insertion_point(destructor:MediaProcessorProcessImageRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MediaProcessorProcessImageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete data_;
}

void MediaProcessorProcessImageRequest::ArenaDtor(void* object) {
  MediaProcessorProcessImageRequest* _this = reinterpret_cast< MediaProcessorProcessImageRequest* >(object);
  (void)_this;
}
void MediaProcessorProcessImageRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MediaProcessorProcessImageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MediaProcessorProcessImageRequest& MediaProcessorProcessImageRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MediaProcessorProcessImageRequest_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base);
  return *internal_default_instance();
}


void MediaProcessorProcessImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MediaProcessorProcessImageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_formats_.Clear();
  multi_output_formats_.Clear();
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MediaProcessorProcessImageRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .RequestMeta meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .DataBatch data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .ImageOutputFormats> output_formats = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&output_formats_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, .MultipleImageOutputFormat> multi_output_formats = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&multi_output_formats_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MediaProcessorProcessImageRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MediaProcessorProcessImageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::meta(this), target, stream);
  }

  // .DataBatch data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  // map<string, .ImageOutputFormats> output_formats = 3;
  if (!this->_internal_output_formats().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ImageOutputFormats >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "MediaProcessorProcessImageRequest.OutputFormatsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_output_formats().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_output_formats().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ImageOutputFormats >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ImageOutputFormats >::const_iterator
          it = this->_internal_output_formats().begin();
          it != this->_internal_output_formats().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ImageOutputFormats >::const_iterator
          it = this->_internal_output_formats().begin();
          it != this->_internal_output_formats().end(); ++it) {
        target = MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, .MultipleImageOutputFormat> multi_output_formats = 4;
  if (!this->_internal_multi_output_formats().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::MultipleImageOutputFormat >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "MediaProcessorProcessImageRequest.MultiOutputFormatsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_multi_output_formats().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_multi_output_formats().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::MultipleImageOutputFormat >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::MultipleImageOutputFormat >::const_iterator
          it = this->_internal_multi_output_formats().begin();
          it != this->_internal_multi_output_formats().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::MultipleImageOutputFormat >::const_iterator
          it = this->_internal_multi_output_formats().begin();
          it != this->_internal_multi_output_formats().end(); ++it) {
        target = MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MediaProcessorProcessImageRequest)
  return target;
}

size_t MediaProcessorProcessImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MediaProcessorProcessImageRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .ImageOutputFormats> output_formats = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_output_formats_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ImageOutputFormats >::const_iterator
      it = this->_internal_output_formats().begin();
      it != this->_internal_output_formats().end(); ++it) {
    total_size += MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, .MultipleImageOutputFormat> multi_output_formats = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_multi_output_formats_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::MultipleImageOutputFormat >::const_iterator
      it = this->_internal_multi_output_formats().begin();
      it != this->_internal_multi_output_formats().end(); ++it) {
    total_size += MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .DataBatch data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MediaProcessorProcessImageRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MediaProcessorProcessImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MediaProcessorProcessImageRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MediaProcessorProcessImageRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MediaProcessorProcessImageRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MediaProcessorProcessImageRequest)
    MergeFrom(*source);
  }
}

void MediaProcessorProcessImageRequest::MergeFrom(const MediaProcessorProcessImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MediaProcessorProcessImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output_formats_.MergeFrom(from.output_formats_);
  multi_output_formats_.MergeFrom(from.multi_output_formats_);
  if (from.has_meta()) {
    _internal_mutable_meta()->::RequestMeta::MergeFrom(from._internal_meta());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::DataBatch::MergeFrom(from._internal_data());
  }
}

void MediaProcessorProcessImageRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MediaProcessorProcessImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MediaProcessorProcessImageRequest::CopyFrom(const MediaProcessorProcessImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MediaProcessorProcessImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MediaProcessorProcessImageRequest::IsInitialized() const {
  return true;
}

void MediaProcessorProcessImageRequest::InternalSwap(MediaProcessorProcessImageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  output_formats_.Swap(&other->output_formats_);
  multi_output_formats_.Swap(&other->multi_output_formats_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MediaProcessorProcessImageRequest, data_)
      + sizeof(MediaProcessorProcessImageRequest::data_)
      - PROTOBUF_FIELD_OFFSET(MediaProcessorProcessImageRequest, meta_)>(
          reinterpret_cast<char*>(&meta_),
          reinterpret_cast<char*>(&other->meta_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MediaProcessorProcessImageRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse::MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse() {}
MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse::MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse::MergeFrom(const MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void MediaProcessorProcessImageResponse::InitAsDefaultInstance() {
  ::_MediaProcessorProcessImageResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class MediaProcessorProcessImageResponse::_Internal {
 public:
  static const ::ResponseStatus& status(const MediaProcessorProcessImageResponse* msg);
};

const ::ResponseStatus&
MediaProcessorProcessImageResponse::_Internal::status(const MediaProcessorProcessImageResponse* msg) {
  return *msg->status_;
}
void MediaProcessorProcessImageResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void MediaProcessorProcessImageResponse::clear_results() {
  results_.Clear();
}
MediaProcessorProcessImageResponse::MediaProcessorProcessImageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MediaProcessorProcessImageResponse)
}
MediaProcessorProcessImageResponse::MediaProcessorProcessImageResponse(const MediaProcessorProcessImageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  results_.MergeFrom(from.results_);
  if (from._internal_has_status()) {
    status_ = new ::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MediaProcessorProcessImageResponse)
}

void MediaProcessorProcessImageResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MediaProcessorProcessImageResponse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base);
  status_ = nullptr;
}

MediaProcessorProcessImageResponse::~MediaProcessorProcessImageResponse() {
  // @@protoc_insertion_point(destructor:MediaProcessorProcessImageResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MediaProcessorProcessImageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void MediaProcessorProcessImageResponse::ArenaDtor(void* object) {
  MediaProcessorProcessImageResponse* _this = reinterpret_cast< MediaProcessorProcessImageResponse* >(object);
  (void)_this;
}
void MediaProcessorProcessImageResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MediaProcessorProcessImageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MediaProcessorProcessImageResponse& MediaProcessorProcessImageResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MediaProcessorProcessImageResponse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base);
  return *internal_default_instance();
}


void MediaProcessorProcessImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MediaProcessorProcessImageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MediaProcessorProcessImageResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .DataBatch> results = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&results_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MediaProcessorProcessImageResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MediaProcessorProcessImageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // map<string, .DataBatch> results = 2;
  if (!this->_internal_results().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::DataBatch >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "MediaProcessorProcessImageResponse.ResultsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_results().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_results().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::DataBatch >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::DataBatch >::const_iterator
          it = this->_internal_results().begin();
          it != this->_internal_results().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::DataBatch >::const_iterator
          it = this->_internal_results().begin();
          it != this->_internal_results().end(); ++it) {
        target = MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MediaProcessorProcessImageResponse)
  return target;
}

size_t MediaProcessorProcessImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MediaProcessorProcessImageResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .DataBatch> results = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_results_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::DataBatch >::const_iterator
      it = this->_internal_results().begin();
      it != this->_internal_results().end(); ++it) {
    total_size += MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MediaProcessorProcessImageResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MediaProcessorProcessImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MediaProcessorProcessImageResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MediaProcessorProcessImageResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MediaProcessorProcessImageResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MediaProcessorProcessImageResponse)
    MergeFrom(*source);
  }
}

void MediaProcessorProcessImageResponse::MergeFrom(const MediaProcessorProcessImageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MediaProcessorProcessImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  if (from.has_status()) {
    _internal_mutable_status()->::ResponseStatus::MergeFrom(from._internal_status());
  }
}

void MediaProcessorProcessImageResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MediaProcessorProcessImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MediaProcessorProcessImageResponse::CopyFrom(const MediaProcessorProcessImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MediaProcessorProcessImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MediaProcessorProcessImageResponse::IsInitialized() const {
  return true;
}

void MediaProcessorProcessImageResponse::InternalSwap(MediaProcessorProcessImageResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  results_.Swap(&other->results_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MediaProcessorProcessImageResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse::MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse() {}
MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse::MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse::MergeFrom(const MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void MediaProcessorProcessVideoRequest::InitAsDefaultInstance() {
  ::_MediaProcessorProcessVideoRequest_default_instance_._instance.get_mutable()->meta_ = const_cast< ::RequestMeta*>(
      ::RequestMeta::internal_default_instance());
  ::_MediaProcessorProcessVideoRequest_default_instance_._instance.get_mutable()->data_ = const_cast< ::DataBatch*>(
      ::DataBatch::internal_default_instance());
}
class MediaProcessorProcessVideoRequest::_Internal {
 public:
  static const ::RequestMeta& meta(const MediaProcessorProcessVideoRequest* msg);
  static const ::DataBatch& data(const MediaProcessorProcessVideoRequest* msg);
};

const ::RequestMeta&
MediaProcessorProcessVideoRequest::_Internal::meta(const MediaProcessorProcessVideoRequest* msg) {
  return *msg->meta_;
}
const ::DataBatch&
MediaProcessorProcessVideoRequest::_Internal::data(const MediaProcessorProcessVideoRequest* msg) {
  return *msg->data_;
}
void MediaProcessorProcessVideoRequest::clear_meta() {
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
}
void MediaProcessorProcessVideoRequest::clear_data() {
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
void MediaProcessorProcessVideoRequest::clear_output_formats() {
  output_formats_.Clear();
}
MediaProcessorProcessVideoRequest::MediaProcessorProcessVideoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  output_formats_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MediaProcessorProcessVideoRequest)
}
MediaProcessorProcessVideoRequest::MediaProcessorProcessVideoRequest(const MediaProcessorProcessVideoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  output_formats_.MergeFrom(from.output_formats_);
  if (from._internal_has_meta()) {
    meta_ = new ::RequestMeta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::DataBatch(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MediaProcessorProcessVideoRequest)
}

void MediaProcessorProcessVideoRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MediaProcessorProcessVideoRequest_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base);
  ::memset(&meta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&meta_)) + sizeof(data_));
}

MediaProcessorProcessVideoRequest::~MediaProcessorProcessVideoRequest() {
  // @@protoc_insertion_point(destructor:MediaProcessorProcessVideoRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MediaProcessorProcessVideoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete data_;
}

void MediaProcessorProcessVideoRequest::ArenaDtor(void* object) {
  MediaProcessorProcessVideoRequest* _this = reinterpret_cast< MediaProcessorProcessVideoRequest* >(object);
  (void)_this;
}
void MediaProcessorProcessVideoRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MediaProcessorProcessVideoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MediaProcessorProcessVideoRequest& MediaProcessorProcessVideoRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MediaProcessorProcessVideoRequest_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base);
  return *internal_default_instance();
}


void MediaProcessorProcessVideoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MediaProcessorProcessVideoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_formats_.Clear();
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MediaProcessorProcessVideoRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .RequestMeta meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .DataBatch data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .VideoOutputFormats> output_formats = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&output_formats_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MediaProcessorProcessVideoRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MediaProcessorProcessVideoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::meta(this), target, stream);
  }

  // .DataBatch data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  // map<string, .VideoOutputFormats> output_formats = 3;
  if (!this->_internal_output_formats().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::VideoOutputFormats >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "MediaProcessorProcessVideoRequest.OutputFormatsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_output_formats().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_output_formats().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::VideoOutputFormats >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::VideoOutputFormats >::const_iterator
          it = this->_internal_output_formats().begin();
          it != this->_internal_output_formats().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::VideoOutputFormats >::const_iterator
          it = this->_internal_output_formats().begin();
          it != this->_internal_output_formats().end(); ++it) {
        target = MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MediaProcessorProcessVideoRequest)
  return target;
}

size_t MediaProcessorProcessVideoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MediaProcessorProcessVideoRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .VideoOutputFormats> output_formats = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_output_formats_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::VideoOutputFormats >::const_iterator
      it = this->_internal_output_formats().begin();
      it != this->_internal_output_formats().end(); ++it) {
    total_size += MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .DataBatch data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MediaProcessorProcessVideoRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MediaProcessorProcessVideoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MediaProcessorProcessVideoRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MediaProcessorProcessVideoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MediaProcessorProcessVideoRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MediaProcessorProcessVideoRequest)
    MergeFrom(*source);
  }
}

void MediaProcessorProcessVideoRequest::MergeFrom(const MediaProcessorProcessVideoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MediaProcessorProcessVideoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output_formats_.MergeFrom(from.output_formats_);
  if (from.has_meta()) {
    _internal_mutable_meta()->::RequestMeta::MergeFrom(from._internal_meta());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::DataBatch::MergeFrom(from._internal_data());
  }
}

void MediaProcessorProcessVideoRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MediaProcessorProcessVideoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MediaProcessorProcessVideoRequest::CopyFrom(const MediaProcessorProcessVideoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MediaProcessorProcessVideoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MediaProcessorProcessVideoRequest::IsInitialized() const {
  return true;
}

void MediaProcessorProcessVideoRequest::InternalSwap(MediaProcessorProcessVideoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  output_formats_.Swap(&other->output_formats_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MediaProcessorProcessVideoRequest, data_)
      + sizeof(MediaProcessorProcessVideoRequest::data_)
      - PROTOBUF_FIELD_OFFSET(MediaProcessorProcessVideoRequest, meta_)>(
          reinterpret_cast<char*>(&meta_),
          reinterpret_cast<char*>(&other->meta_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MediaProcessorProcessVideoRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MediaProcessorProcessVideoResponse::InitAsDefaultInstance() {
  ::_MediaProcessorProcessVideoResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
  ::_MediaProcessorProcessVideoResponse_default_instance_._instance.get_mutable()->results_ = const_cast< ::DataBatch*>(
      ::DataBatch::internal_default_instance());
}
class MediaProcessorProcessVideoResponse::_Internal {
 public:
  static const ::ResponseStatus& status(const MediaProcessorProcessVideoResponse* msg);
  static const ::DataBatch& results(const MediaProcessorProcessVideoResponse* msg);
};

const ::ResponseStatus&
MediaProcessorProcessVideoResponse::_Internal::status(const MediaProcessorProcessVideoResponse* msg) {
  return *msg->status_;
}
const ::DataBatch&
MediaProcessorProcessVideoResponse::_Internal::results(const MediaProcessorProcessVideoResponse* msg) {
  return *msg->results_;
}
void MediaProcessorProcessVideoResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void MediaProcessorProcessVideoResponse::clear_results() {
  if (GetArena() == nullptr && results_ != nullptr) {
    delete results_;
  }
  results_ = nullptr;
}
MediaProcessorProcessVideoResponse::MediaProcessorProcessVideoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MediaProcessorProcessVideoResponse)
}
MediaProcessorProcessVideoResponse::MediaProcessorProcessVideoResponse(const MediaProcessorProcessVideoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_results()) {
    results_ = new ::DataBatch(*from.results_);
  } else {
    results_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MediaProcessorProcessVideoResponse)
}

void MediaProcessorProcessVideoResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MediaProcessorProcessVideoResponse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base);
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&results_) -
      reinterpret_cast<char*>(&status_)) + sizeof(results_));
}

MediaProcessorProcessVideoResponse::~MediaProcessorProcessVideoResponse() {
  // @@protoc_insertion_point(destructor:MediaProcessorProcessVideoResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MediaProcessorProcessVideoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete results_;
}

void MediaProcessorProcessVideoResponse::ArenaDtor(void* object) {
  MediaProcessorProcessVideoResponse* _this = reinterpret_cast< MediaProcessorProcessVideoResponse* >(object);
  (void)_this;
}
void MediaProcessorProcessVideoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MediaProcessorProcessVideoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MediaProcessorProcessVideoResponse& MediaProcessorProcessVideoResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MediaProcessorProcessVideoResponse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base);
  return *internal_default_instance();
}


void MediaProcessorProcessVideoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MediaProcessorProcessVideoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && results_ != nullptr) {
    delete results_;
  }
  results_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MediaProcessorProcessVideoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .DataBatch results = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_results(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MediaProcessorProcessVideoResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MediaProcessorProcessVideoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .DataBatch results = 2;
  if (this->has_results()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::results(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MediaProcessorProcessVideoResponse)
  return target;
}

size_t MediaProcessorProcessVideoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MediaProcessorProcessVideoResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .DataBatch results = 2;
  if (this->has_results()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *results_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MediaProcessorProcessVideoResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MediaProcessorProcessVideoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MediaProcessorProcessVideoResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MediaProcessorProcessVideoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MediaProcessorProcessVideoResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MediaProcessorProcessVideoResponse)
    MergeFrom(*source);
  }
}

void MediaProcessorProcessVideoResponse::MergeFrom(const MediaProcessorProcessVideoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MediaProcessorProcessVideoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::ResponseStatus::MergeFrom(from._internal_status());
  }
  if (from.has_results()) {
    _internal_mutable_results()->::DataBatch::MergeFrom(from._internal_results());
  }
}

void MediaProcessorProcessVideoResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MediaProcessorProcessVideoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MediaProcessorProcessVideoResponse::CopyFrom(const MediaProcessorProcessVideoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MediaProcessorProcessVideoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MediaProcessorProcessVideoResponse::IsInitialized() const {
  return true;
}

void MediaProcessorProcessVideoResponse::InternalSwap(MediaProcessorProcessVideoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MediaProcessorProcessVideoResponse, results_)
      + sizeof(MediaProcessorProcessVideoResponse::results_)
      - PROTOBUF_FIELD_OFFSET(MediaProcessorProcessVideoResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MediaProcessorProcessVideoResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MediaProcessorGetStateRequest::InitAsDefaultInstance() {
  ::_MediaProcessorGetStateRequest_default_instance_._instance.get_mutable()->meta_ = const_cast< ::RequestMeta*>(
      ::RequestMeta::internal_default_instance());
}
class MediaProcessorGetStateRequest::_Internal {
 public:
  static const ::RequestMeta& meta(const MediaProcessorGetStateRequest* msg);
};

const ::RequestMeta&
MediaProcessorGetStateRequest::_Internal::meta(const MediaProcessorGetStateRequest* msg) {
  return *msg->meta_;
}
void MediaProcessorGetStateRequest::clear_meta() {
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
}
MediaProcessorGetStateRequest::MediaProcessorGetStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MediaProcessorGetStateRequest)
}
MediaProcessorGetStateRequest::MediaProcessorGetStateRequest(const MediaProcessorGetStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_meta()) {
    meta_ = new ::RequestMeta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MediaProcessorGetStateRequest)
}

void MediaProcessorGetStateRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MediaProcessorGetStateRequest_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base);
  meta_ = nullptr;
}

MediaProcessorGetStateRequest::~MediaProcessorGetStateRequest() {
  // @@protoc_insertion_point(destructor:MediaProcessorGetStateRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MediaProcessorGetStateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete meta_;
}

void MediaProcessorGetStateRequest::ArenaDtor(void* object) {
  MediaProcessorGetStateRequest* _this = reinterpret_cast< MediaProcessorGetStateRequest* >(object);
  (void)_this;
}
void MediaProcessorGetStateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MediaProcessorGetStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MediaProcessorGetStateRequest& MediaProcessorGetStateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MediaProcessorGetStateRequest_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base);
  return *internal_default_instance();
}


void MediaProcessorGetStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MediaProcessorGetStateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MediaProcessorGetStateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .RequestMeta meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MediaProcessorGetStateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MediaProcessorGetStateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::meta(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MediaProcessorGetStateRequest)
  return target;
}

size_t MediaProcessorGetStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MediaProcessorGetStateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MediaProcessorGetStateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MediaProcessorGetStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MediaProcessorGetStateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MediaProcessorGetStateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MediaProcessorGetStateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MediaProcessorGetStateRequest)
    MergeFrom(*source);
  }
}

void MediaProcessorGetStateRequest::MergeFrom(const MediaProcessorGetStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MediaProcessorGetStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_meta()) {
    _internal_mutable_meta()->::RequestMeta::MergeFrom(from._internal_meta());
  }
}

void MediaProcessorGetStateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MediaProcessorGetStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MediaProcessorGetStateRequest::CopyFrom(const MediaProcessorGetStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MediaProcessorGetStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MediaProcessorGetStateRequest::IsInitialized() const {
  return true;
}

void MediaProcessorGetStateRequest::InternalSwap(MediaProcessorGetStateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(meta_, other->meta_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MediaProcessorGetStateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MediaProcessorGetStateResponse::InitAsDefaultInstance() {
  ::_MediaProcessorGetStateResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class MediaProcessorGetStateResponse::_Internal {
 public:
  static const ::ResponseStatus& status(const MediaProcessorGetStateResponse* msg);
};

const ::ResponseStatus&
MediaProcessorGetStateResponse::_Internal::status(const MediaProcessorGetStateResponse* msg) {
  return *msg->status_;
}
void MediaProcessorGetStateResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
MediaProcessorGetStateResponse::MediaProcessorGetStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MediaProcessorGetStateResponse)
}
MediaProcessorGetStateResponse::MediaProcessorGetStateResponse(const MediaProcessorGetStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_state().empty()) {
    state_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_state(),
      GetArena());
  }
  if (from._internal_has_status()) {
    status_ = new ::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MediaProcessorGetStateResponse)
}

void MediaProcessorGetStateResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MediaProcessorGetStateResponse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base);
  state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = nullptr;
}

MediaProcessorGetStateResponse::~MediaProcessorGetStateResponse() {
  // @@protoc_insertion_point(destructor:MediaProcessorGetStateResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MediaProcessorGetStateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  state_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void MediaProcessorGetStateResponse::ArenaDtor(void* object) {
  MediaProcessorGetStateResponse* _this = reinterpret_cast< MediaProcessorGetStateResponse* >(object);
  (void)_this;
}
void MediaProcessorGetStateResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MediaProcessorGetStateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MediaProcessorGetStateResponse& MediaProcessorGetStateResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MediaProcessorGetStateResponse_proto_2fmedia_5fprocessor_2fmedia_5fprocessor_2eproto.base);
  return *internal_default_instance();
}


void MediaProcessorGetStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MediaProcessorGetStateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MediaProcessorGetStateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_state();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "MediaProcessorGetStateResponse.state"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MediaProcessorGetStateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MediaProcessorGetStateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // string state = 2;
  if (this->state().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_state().data(), static_cast<int>(this->_internal_state().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "MediaProcessorGetStateResponse.state");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MediaProcessorGetStateResponse)
  return target;
}

size_t MediaProcessorGetStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MediaProcessorGetStateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string state = 2;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_state());
  }

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MediaProcessorGetStateResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MediaProcessorGetStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MediaProcessorGetStateResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MediaProcessorGetStateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MediaProcessorGetStateResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MediaProcessorGetStateResponse)
    MergeFrom(*source);
  }
}

void MediaProcessorGetStateResponse::MergeFrom(const MediaProcessorGetStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MediaProcessorGetStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {
    _internal_set_state(from._internal_state());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::ResponseStatus::MergeFrom(from._internal_status());
  }
}

void MediaProcessorGetStateResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MediaProcessorGetStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MediaProcessorGetStateResponse::CopyFrom(const MediaProcessorGetStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MediaProcessorGetStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MediaProcessorGetStateResponse::IsInitialized() const {
  return true;
}

void MediaProcessorGetStateResponse::InternalSwap(MediaProcessorGetStateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MediaProcessorGetStateResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse* Arena::CreateMaybeMessage< ::MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MediaProcessorProcessImageRequest_OutputFormatsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse* Arena::CreateMaybeMessage< ::MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MediaProcessorProcessImageRequest_MultiOutputFormatsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::MediaProcessorProcessImageRequest* Arena::CreateMaybeMessage< ::MediaProcessorProcessImageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MediaProcessorProcessImageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse* Arena::CreateMaybeMessage< ::MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MediaProcessorProcessImageResponse_ResultsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::MediaProcessorProcessImageResponse* Arena::CreateMaybeMessage< ::MediaProcessorProcessImageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MediaProcessorProcessImageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse* Arena::CreateMaybeMessage< ::MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MediaProcessorProcessVideoRequest_OutputFormatsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::MediaProcessorProcessVideoRequest* Arena::CreateMaybeMessage< ::MediaProcessorProcessVideoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MediaProcessorProcessVideoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::MediaProcessorProcessVideoResponse* Arena::CreateMaybeMessage< ::MediaProcessorProcessVideoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MediaProcessorProcessVideoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::MediaProcessorGetStateRequest* Arena::CreateMaybeMessage< ::MediaProcessorGetStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MediaProcessorGetStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::MediaProcessorGetStateResponse* Arena::CreateMaybeMessage< ::MediaProcessorGetStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MediaProcessorGetStateResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
