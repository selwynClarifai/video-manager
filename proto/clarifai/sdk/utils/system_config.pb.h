// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/clarifai/sdk/utils/system_config.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fclarifai_2fsdk_2futils_2fsystem_5fconfig_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fclarifai_2fsdk_2futils_2fsystem_5fconfig_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_proto_2fclarifai_2fsdk_2futils_2fsystem_5fconfig_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fclarifai_2fsdk_2futils_2fsystem_5fconfig_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fclarifai_2fsdk_2futils_2fsystem_5fconfig_2eproto;
namespace clarifai {
namespace sdk {
namespace utils {
class SystemConfig;
class SystemConfigDefaultTypeInternal;
extern SystemConfigDefaultTypeInternal _SystemConfig_default_instance_;
}  // namespace utils
}  // namespace sdk
}  // namespace clarifai
PROTOBUF_NAMESPACE_OPEN
template<> ::clarifai::sdk::utils::SystemConfig* Arena::CreateMaybeMessage<::clarifai::sdk::utils::SystemConfig>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace clarifai {
namespace sdk {
namespace utils {

enum NetworkConstraint : int {
  NONE = 0,
  WIFI_ONLY = 1,
  NetworkConstraint_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  NetworkConstraint_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool NetworkConstraint_IsValid(int value);
constexpr NetworkConstraint NetworkConstraint_MIN = NONE;
constexpr NetworkConstraint NetworkConstraint_MAX = WIFI_ONLY;
constexpr int NetworkConstraint_ARRAYSIZE = NetworkConstraint_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* NetworkConstraint_descriptor();
template<typename T>
inline const std::string& NetworkConstraint_Name(T enum_t_value) {
  static_assert(::std::is_same<T, NetworkConstraint>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function NetworkConstraint_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    NetworkConstraint_descriptor(), enum_t_value);
}
inline bool NetworkConstraint_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, NetworkConstraint* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<NetworkConstraint>(
    NetworkConstraint_descriptor(), name, value);
}
// ===================================================================

class SystemConfig PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:clarifai.sdk.utils.SystemConfig) */ {
 public:
  inline SystemConfig() : SystemConfig(nullptr) {}
  virtual ~SystemConfig();

  SystemConfig(const SystemConfig& from);
  SystemConfig(SystemConfig&& from) noexcept
    : SystemConfig() {
    *this = ::std::move(from);
  }

  inline SystemConfig& operator=(const SystemConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemConfig& operator=(SystemConfig&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SystemConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemConfig* internal_default_instance() {
    return reinterpret_cast<const SystemConfig*>(
               &_SystemConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SystemConfig& a, SystemConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemConfig* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SystemConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemConfig* New() const final {
    return CreateMaybeMessage<SystemConfig>(nullptr);
  }

  SystemConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SystemConfig& from);
  void MergeFrom(const SystemConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SystemConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "clarifai.sdk.utils.SystemConfig";
  }
  protected:
  explicit SystemConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2fclarifai_2fsdk_2futils_2fsystem_5fconfig_2eproto);
    return ::descriptor_table_proto_2fclarifai_2fsdk_2futils_2fsystem_5fconfig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSystemUuidFieldNumber = 6,
    kDiscardDataTimestampFieldNumber = 1,
    kDoNotSyncUntilFieldNumber = 2,
    kAuthenticationIntervalFieldNumber = 3,
    kBatchUploadIntervalFieldNumber = 4,
    kLastAuthenticationTimeFieldNumber = 8,
    kLastBatchUploadTimeFieldNumber = 9,
    kBillingIntervalFieldNumber = 10,
    kLastBillingTimeFieldNumber = 11,
    kNetworkConstraintFieldNumber = 5,
    kLaunchCountFieldNumber = 7,
  };
  // string system_uuid = 6;
  void clear_system_uuid();
  const std::string& system_uuid() const;
  void set_system_uuid(const std::string& value);
  void set_system_uuid(std::string&& value);
  void set_system_uuid(const char* value);
  void set_system_uuid(const char* value, size_t size);
  std::string* mutable_system_uuid();
  std::string* release_system_uuid();
  void set_allocated_system_uuid(std::string* system_uuid);
  private:
  const std::string& _internal_system_uuid() const;
  void _internal_set_system_uuid(const std::string& value);
  std::string* _internal_mutable_system_uuid();
  public:

  // .google.protobuf.Timestamp discard_data_timestamp = 1;
  bool has_discard_data_timestamp() const;
  private:
  bool _internal_has_discard_data_timestamp() const;
  public:
  void clear_discard_data_timestamp();
  const PROTOBUF_NAMESPACE_ID::Timestamp& discard_data_timestamp() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_discard_data_timestamp();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_discard_data_timestamp();
  void set_allocated_discard_data_timestamp(PROTOBUF_NAMESPACE_ID::Timestamp* discard_data_timestamp);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_discard_data_timestamp() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_discard_data_timestamp();
  public:
  void unsafe_arena_set_allocated_discard_data_timestamp(
      PROTOBUF_NAMESPACE_ID::Timestamp* discard_data_timestamp);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_discard_data_timestamp();

  // .google.protobuf.Timestamp do_not_sync_until = 2;
  bool has_do_not_sync_until() const;
  private:
  bool _internal_has_do_not_sync_until() const;
  public:
  void clear_do_not_sync_until();
  const PROTOBUF_NAMESPACE_ID::Timestamp& do_not_sync_until() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_do_not_sync_until();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_do_not_sync_until();
  void set_allocated_do_not_sync_until(PROTOBUF_NAMESPACE_ID::Timestamp* do_not_sync_until);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_do_not_sync_until() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_do_not_sync_until();
  public:
  void unsafe_arena_set_allocated_do_not_sync_until(
      PROTOBUF_NAMESPACE_ID::Timestamp* do_not_sync_until);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_do_not_sync_until();

  // .google.protobuf.Duration authentication_interval = 3;
  bool has_authentication_interval() const;
  private:
  bool _internal_has_authentication_interval() const;
  public:
  void clear_authentication_interval();
  const PROTOBUF_NAMESPACE_ID::Duration& authentication_interval() const;
  PROTOBUF_NAMESPACE_ID::Duration* release_authentication_interval();
  PROTOBUF_NAMESPACE_ID::Duration* mutable_authentication_interval();
  void set_allocated_authentication_interval(PROTOBUF_NAMESPACE_ID::Duration* authentication_interval);
  private:
  const PROTOBUF_NAMESPACE_ID::Duration& _internal_authentication_interval() const;
  PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_authentication_interval();
  public:
  void unsafe_arena_set_allocated_authentication_interval(
      PROTOBUF_NAMESPACE_ID::Duration* authentication_interval);
  PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_authentication_interval();

  // .google.protobuf.Duration batch_upload_interval = 4;
  bool has_batch_upload_interval() const;
  private:
  bool _internal_has_batch_upload_interval() const;
  public:
  void clear_batch_upload_interval();
  const PROTOBUF_NAMESPACE_ID::Duration& batch_upload_interval() const;
  PROTOBUF_NAMESPACE_ID::Duration* release_batch_upload_interval();
  PROTOBUF_NAMESPACE_ID::Duration* mutable_batch_upload_interval();
  void set_allocated_batch_upload_interval(PROTOBUF_NAMESPACE_ID::Duration* batch_upload_interval);
  private:
  const PROTOBUF_NAMESPACE_ID::Duration& _internal_batch_upload_interval() const;
  PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_batch_upload_interval();
  public:
  void unsafe_arena_set_allocated_batch_upload_interval(
      PROTOBUF_NAMESPACE_ID::Duration* batch_upload_interval);
  PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_batch_upload_interval();

  // .google.protobuf.Timestamp last_authentication_time = 8;
  bool has_last_authentication_time() const;
  private:
  bool _internal_has_last_authentication_time() const;
  public:
  void clear_last_authentication_time();
  const PROTOBUF_NAMESPACE_ID::Timestamp& last_authentication_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_last_authentication_time();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_last_authentication_time();
  void set_allocated_last_authentication_time(PROTOBUF_NAMESPACE_ID::Timestamp* last_authentication_time);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_last_authentication_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_last_authentication_time();
  public:
  void unsafe_arena_set_allocated_last_authentication_time(
      PROTOBUF_NAMESPACE_ID::Timestamp* last_authentication_time);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_last_authentication_time();

  // .google.protobuf.Timestamp last_batch_upload_time = 9;
  bool has_last_batch_upload_time() const;
  private:
  bool _internal_has_last_batch_upload_time() const;
  public:
  void clear_last_batch_upload_time();
  const PROTOBUF_NAMESPACE_ID::Timestamp& last_batch_upload_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_last_batch_upload_time();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_last_batch_upload_time();
  void set_allocated_last_batch_upload_time(PROTOBUF_NAMESPACE_ID::Timestamp* last_batch_upload_time);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_last_batch_upload_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_last_batch_upload_time();
  public:
  void unsafe_arena_set_allocated_last_batch_upload_time(
      PROTOBUF_NAMESPACE_ID::Timestamp* last_batch_upload_time);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_last_batch_upload_time();

  // .google.protobuf.Duration billing_interval = 10;
  bool has_billing_interval() const;
  private:
  bool _internal_has_billing_interval() const;
  public:
  void clear_billing_interval();
  const PROTOBUF_NAMESPACE_ID::Duration& billing_interval() const;
  PROTOBUF_NAMESPACE_ID::Duration* release_billing_interval();
  PROTOBUF_NAMESPACE_ID::Duration* mutable_billing_interval();
  void set_allocated_billing_interval(PROTOBUF_NAMESPACE_ID::Duration* billing_interval);
  private:
  const PROTOBUF_NAMESPACE_ID::Duration& _internal_billing_interval() const;
  PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_billing_interval();
  public:
  void unsafe_arena_set_allocated_billing_interval(
      PROTOBUF_NAMESPACE_ID::Duration* billing_interval);
  PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_billing_interval();

  // .google.protobuf.Timestamp last_billing_time = 11;
  bool has_last_billing_time() const;
  private:
  bool _internal_has_last_billing_time() const;
  public:
  void clear_last_billing_time();
  const PROTOBUF_NAMESPACE_ID::Timestamp& last_billing_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_last_billing_time();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_last_billing_time();
  void set_allocated_last_billing_time(PROTOBUF_NAMESPACE_ID::Timestamp* last_billing_time);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_last_billing_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_last_billing_time();
  public:
  void unsafe_arena_set_allocated_last_billing_time(
      PROTOBUF_NAMESPACE_ID::Timestamp* last_billing_time);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_last_billing_time();

  // .clarifai.sdk.utils.NetworkConstraint network_constraint = 5;
  void clear_network_constraint();
  ::clarifai::sdk::utils::NetworkConstraint network_constraint() const;
  void set_network_constraint(::clarifai::sdk::utils::NetworkConstraint value);
  private:
  ::clarifai::sdk::utils::NetworkConstraint _internal_network_constraint() const;
  void _internal_set_network_constraint(::clarifai::sdk::utils::NetworkConstraint value);
  public:

  // uint32 launch_count = 7;
  void clear_launch_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 launch_count() const;
  void set_launch_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_launch_count() const;
  void _internal_set_launch_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:clarifai.sdk.utils.SystemConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr system_uuid_;
  PROTOBUF_NAMESPACE_ID::Timestamp* discard_data_timestamp_;
  PROTOBUF_NAMESPACE_ID::Timestamp* do_not_sync_until_;
  PROTOBUF_NAMESPACE_ID::Duration* authentication_interval_;
  PROTOBUF_NAMESPACE_ID::Duration* batch_upload_interval_;
  PROTOBUF_NAMESPACE_ID::Timestamp* last_authentication_time_;
  PROTOBUF_NAMESPACE_ID::Timestamp* last_batch_upload_time_;
  PROTOBUF_NAMESPACE_ID::Duration* billing_interval_;
  PROTOBUF_NAMESPACE_ID::Timestamp* last_billing_time_;
  int network_constraint_;
  ::PROTOBUF_NAMESPACE_ID::uint32 launch_count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2fclarifai_2fsdk_2futils_2fsystem_5fconfig_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SystemConfig

// .google.protobuf.Timestamp discard_data_timestamp = 1;
inline bool SystemConfig::_internal_has_discard_data_timestamp() const {
  return this != internal_default_instance() && discard_data_timestamp_ != nullptr;
}
inline bool SystemConfig::has_discard_data_timestamp() const {
  return _internal_has_discard_data_timestamp();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& SystemConfig::_internal_discard_data_timestamp() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = discard_data_timestamp_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& SystemConfig::discard_data_timestamp() const {
  // @@protoc_insertion_point(field_get:clarifai.sdk.utils.SystemConfig.discard_data_timestamp)
  return _internal_discard_data_timestamp();
}
inline void SystemConfig::unsafe_arena_set_allocated_discard_data_timestamp(
    PROTOBUF_NAMESPACE_ID::Timestamp* discard_data_timestamp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(discard_data_timestamp_);
  }
  discard_data_timestamp_ = discard_data_timestamp;
  if (discard_data_timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:clarifai.sdk.utils.SystemConfig.discard_data_timestamp)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SystemConfig::release_discard_data_timestamp() {
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = discard_data_timestamp_;
  discard_data_timestamp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SystemConfig::unsafe_arena_release_discard_data_timestamp() {
  // @@protoc_insertion_point(field_release:clarifai.sdk.utils.SystemConfig.discard_data_timestamp)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = discard_data_timestamp_;
  discard_data_timestamp_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SystemConfig::_internal_mutable_discard_data_timestamp() {
  
  if (discard_data_timestamp_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    discard_data_timestamp_ = p;
  }
  return discard_data_timestamp_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SystemConfig::mutable_discard_data_timestamp() {
  // @@protoc_insertion_point(field_mutable:clarifai.sdk.utils.SystemConfig.discard_data_timestamp)
  return _internal_mutable_discard_data_timestamp();
}
inline void SystemConfig::set_allocated_discard_data_timestamp(PROTOBUF_NAMESPACE_ID::Timestamp* discard_data_timestamp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(discard_data_timestamp_);
  }
  if (discard_data_timestamp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(discard_data_timestamp)->GetArena();
    if (message_arena != submessage_arena) {
      discard_data_timestamp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, discard_data_timestamp, submessage_arena);
    }
    
  } else {
    
  }
  discard_data_timestamp_ = discard_data_timestamp;
  // @@protoc_insertion_point(field_set_allocated:clarifai.sdk.utils.SystemConfig.discard_data_timestamp)
}

// .google.protobuf.Timestamp do_not_sync_until = 2;
inline bool SystemConfig::_internal_has_do_not_sync_until() const {
  return this != internal_default_instance() && do_not_sync_until_ != nullptr;
}
inline bool SystemConfig::has_do_not_sync_until() const {
  return _internal_has_do_not_sync_until();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& SystemConfig::_internal_do_not_sync_until() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = do_not_sync_until_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& SystemConfig::do_not_sync_until() const {
  // @@protoc_insertion_point(field_get:clarifai.sdk.utils.SystemConfig.do_not_sync_until)
  return _internal_do_not_sync_until();
}
inline void SystemConfig::unsafe_arena_set_allocated_do_not_sync_until(
    PROTOBUF_NAMESPACE_ID::Timestamp* do_not_sync_until) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(do_not_sync_until_);
  }
  do_not_sync_until_ = do_not_sync_until;
  if (do_not_sync_until) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:clarifai.sdk.utils.SystemConfig.do_not_sync_until)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SystemConfig::release_do_not_sync_until() {
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = do_not_sync_until_;
  do_not_sync_until_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SystemConfig::unsafe_arena_release_do_not_sync_until() {
  // @@protoc_insertion_point(field_release:clarifai.sdk.utils.SystemConfig.do_not_sync_until)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = do_not_sync_until_;
  do_not_sync_until_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SystemConfig::_internal_mutable_do_not_sync_until() {
  
  if (do_not_sync_until_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    do_not_sync_until_ = p;
  }
  return do_not_sync_until_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SystemConfig::mutable_do_not_sync_until() {
  // @@protoc_insertion_point(field_mutable:clarifai.sdk.utils.SystemConfig.do_not_sync_until)
  return _internal_mutable_do_not_sync_until();
}
inline void SystemConfig::set_allocated_do_not_sync_until(PROTOBUF_NAMESPACE_ID::Timestamp* do_not_sync_until) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(do_not_sync_until_);
  }
  if (do_not_sync_until) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(do_not_sync_until)->GetArena();
    if (message_arena != submessage_arena) {
      do_not_sync_until = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, do_not_sync_until, submessage_arena);
    }
    
  } else {
    
  }
  do_not_sync_until_ = do_not_sync_until;
  // @@protoc_insertion_point(field_set_allocated:clarifai.sdk.utils.SystemConfig.do_not_sync_until)
}

// .google.protobuf.Duration authentication_interval = 3;
inline bool SystemConfig::_internal_has_authentication_interval() const {
  return this != internal_default_instance() && authentication_interval_ != nullptr;
}
inline bool SystemConfig::has_authentication_interval() const {
  return _internal_has_authentication_interval();
}
inline const PROTOBUF_NAMESPACE_ID::Duration& SystemConfig::_internal_authentication_interval() const {
  const PROTOBUF_NAMESPACE_ID::Duration* p = authentication_interval_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Duration*>(
      &PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Duration& SystemConfig::authentication_interval() const {
  // @@protoc_insertion_point(field_get:clarifai.sdk.utils.SystemConfig.authentication_interval)
  return _internal_authentication_interval();
}
inline void SystemConfig::unsafe_arena_set_allocated_authentication_interval(
    PROTOBUF_NAMESPACE_ID::Duration* authentication_interval) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(authentication_interval_);
  }
  authentication_interval_ = authentication_interval;
  if (authentication_interval) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:clarifai.sdk.utils.SystemConfig.authentication_interval)
}
inline PROTOBUF_NAMESPACE_ID::Duration* SystemConfig::release_authentication_interval() {
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = authentication_interval_;
  authentication_interval_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* SystemConfig::unsafe_arena_release_authentication_interval() {
  // @@protoc_insertion_point(field_release:clarifai.sdk.utils.SystemConfig.authentication_interval)
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = authentication_interval_;
  authentication_interval_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* SystemConfig::_internal_mutable_authentication_interval() {
  
  if (authentication_interval_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Duration>(GetArena());
    authentication_interval_ = p;
  }
  return authentication_interval_;
}
inline PROTOBUF_NAMESPACE_ID::Duration* SystemConfig::mutable_authentication_interval() {
  // @@protoc_insertion_point(field_mutable:clarifai.sdk.utils.SystemConfig.authentication_interval)
  return _internal_mutable_authentication_interval();
}
inline void SystemConfig::set_allocated_authentication_interval(PROTOBUF_NAMESPACE_ID::Duration* authentication_interval) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(authentication_interval_);
  }
  if (authentication_interval) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(authentication_interval)->GetArena();
    if (message_arena != submessage_arena) {
      authentication_interval = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, authentication_interval, submessage_arena);
    }
    
  } else {
    
  }
  authentication_interval_ = authentication_interval;
  // @@protoc_insertion_point(field_set_allocated:clarifai.sdk.utils.SystemConfig.authentication_interval)
}

// .google.protobuf.Duration batch_upload_interval = 4;
inline bool SystemConfig::_internal_has_batch_upload_interval() const {
  return this != internal_default_instance() && batch_upload_interval_ != nullptr;
}
inline bool SystemConfig::has_batch_upload_interval() const {
  return _internal_has_batch_upload_interval();
}
inline const PROTOBUF_NAMESPACE_ID::Duration& SystemConfig::_internal_batch_upload_interval() const {
  const PROTOBUF_NAMESPACE_ID::Duration* p = batch_upload_interval_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Duration*>(
      &PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Duration& SystemConfig::batch_upload_interval() const {
  // @@protoc_insertion_point(field_get:clarifai.sdk.utils.SystemConfig.batch_upload_interval)
  return _internal_batch_upload_interval();
}
inline void SystemConfig::unsafe_arena_set_allocated_batch_upload_interval(
    PROTOBUF_NAMESPACE_ID::Duration* batch_upload_interval) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(batch_upload_interval_);
  }
  batch_upload_interval_ = batch_upload_interval;
  if (batch_upload_interval) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:clarifai.sdk.utils.SystemConfig.batch_upload_interval)
}
inline PROTOBUF_NAMESPACE_ID::Duration* SystemConfig::release_batch_upload_interval() {
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = batch_upload_interval_;
  batch_upload_interval_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* SystemConfig::unsafe_arena_release_batch_upload_interval() {
  // @@protoc_insertion_point(field_release:clarifai.sdk.utils.SystemConfig.batch_upload_interval)
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = batch_upload_interval_;
  batch_upload_interval_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* SystemConfig::_internal_mutable_batch_upload_interval() {
  
  if (batch_upload_interval_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Duration>(GetArena());
    batch_upload_interval_ = p;
  }
  return batch_upload_interval_;
}
inline PROTOBUF_NAMESPACE_ID::Duration* SystemConfig::mutable_batch_upload_interval() {
  // @@protoc_insertion_point(field_mutable:clarifai.sdk.utils.SystemConfig.batch_upload_interval)
  return _internal_mutable_batch_upload_interval();
}
inline void SystemConfig::set_allocated_batch_upload_interval(PROTOBUF_NAMESPACE_ID::Duration* batch_upload_interval) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(batch_upload_interval_);
  }
  if (batch_upload_interval) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(batch_upload_interval)->GetArena();
    if (message_arena != submessage_arena) {
      batch_upload_interval = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, batch_upload_interval, submessage_arena);
    }
    
  } else {
    
  }
  batch_upload_interval_ = batch_upload_interval;
  // @@protoc_insertion_point(field_set_allocated:clarifai.sdk.utils.SystemConfig.batch_upload_interval)
}

// .clarifai.sdk.utils.NetworkConstraint network_constraint = 5;
inline void SystemConfig::clear_network_constraint() {
  network_constraint_ = 0;
}
inline ::clarifai::sdk::utils::NetworkConstraint SystemConfig::_internal_network_constraint() const {
  return static_cast< ::clarifai::sdk::utils::NetworkConstraint >(network_constraint_);
}
inline ::clarifai::sdk::utils::NetworkConstraint SystemConfig::network_constraint() const {
  // @@protoc_insertion_point(field_get:clarifai.sdk.utils.SystemConfig.network_constraint)
  return _internal_network_constraint();
}
inline void SystemConfig::_internal_set_network_constraint(::clarifai::sdk::utils::NetworkConstraint value) {
  
  network_constraint_ = value;
}
inline void SystemConfig::set_network_constraint(::clarifai::sdk::utils::NetworkConstraint value) {
  _internal_set_network_constraint(value);
  // @@protoc_insertion_point(field_set:clarifai.sdk.utils.SystemConfig.network_constraint)
}

// string system_uuid = 6;
inline void SystemConfig::clear_system_uuid() {
  system_uuid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& SystemConfig::system_uuid() const {
  // @@protoc_insertion_point(field_get:clarifai.sdk.utils.SystemConfig.system_uuid)
  return _internal_system_uuid();
}
inline void SystemConfig::set_system_uuid(const std::string& value) {
  _internal_set_system_uuid(value);
  // @@protoc_insertion_point(field_set:clarifai.sdk.utils.SystemConfig.system_uuid)
}
inline std::string* SystemConfig::mutable_system_uuid() {
  // @@protoc_insertion_point(field_mutable:clarifai.sdk.utils.SystemConfig.system_uuid)
  return _internal_mutable_system_uuid();
}
inline const std::string& SystemConfig::_internal_system_uuid() const {
  return system_uuid_.Get();
}
inline void SystemConfig::_internal_set_system_uuid(const std::string& value) {
  
  system_uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void SystemConfig::set_system_uuid(std::string&& value) {
  
  system_uuid_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:clarifai.sdk.utils.SystemConfig.system_uuid)
}
inline void SystemConfig::set_system_uuid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  system_uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:clarifai.sdk.utils.SystemConfig.system_uuid)
}
inline void SystemConfig::set_system_uuid(const char* value,
    size_t size) {
  
  system_uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:clarifai.sdk.utils.SystemConfig.system_uuid)
}
inline std::string* SystemConfig::_internal_mutable_system_uuid() {
  
  return system_uuid_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* SystemConfig::release_system_uuid() {
  // @@protoc_insertion_point(field_release:clarifai.sdk.utils.SystemConfig.system_uuid)
  return system_uuid_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SystemConfig::set_allocated_system_uuid(std::string* system_uuid) {
  if (system_uuid != nullptr) {
    
  } else {
    
  }
  system_uuid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), system_uuid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:clarifai.sdk.utils.SystemConfig.system_uuid)
}

// uint32 launch_count = 7;
inline void SystemConfig::clear_launch_count() {
  launch_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SystemConfig::_internal_launch_count() const {
  return launch_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SystemConfig::launch_count() const {
  // @@protoc_insertion_point(field_get:clarifai.sdk.utils.SystemConfig.launch_count)
  return _internal_launch_count();
}
inline void SystemConfig::_internal_set_launch_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  launch_count_ = value;
}
inline void SystemConfig::set_launch_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_launch_count(value);
  // @@protoc_insertion_point(field_set:clarifai.sdk.utils.SystemConfig.launch_count)
}

// .google.protobuf.Timestamp last_authentication_time = 8;
inline bool SystemConfig::_internal_has_last_authentication_time() const {
  return this != internal_default_instance() && last_authentication_time_ != nullptr;
}
inline bool SystemConfig::has_last_authentication_time() const {
  return _internal_has_last_authentication_time();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& SystemConfig::_internal_last_authentication_time() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = last_authentication_time_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& SystemConfig::last_authentication_time() const {
  // @@protoc_insertion_point(field_get:clarifai.sdk.utils.SystemConfig.last_authentication_time)
  return _internal_last_authentication_time();
}
inline void SystemConfig::unsafe_arena_set_allocated_last_authentication_time(
    PROTOBUF_NAMESPACE_ID::Timestamp* last_authentication_time) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(last_authentication_time_);
  }
  last_authentication_time_ = last_authentication_time;
  if (last_authentication_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:clarifai.sdk.utils.SystemConfig.last_authentication_time)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SystemConfig::release_last_authentication_time() {
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = last_authentication_time_;
  last_authentication_time_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SystemConfig::unsafe_arena_release_last_authentication_time() {
  // @@protoc_insertion_point(field_release:clarifai.sdk.utils.SystemConfig.last_authentication_time)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = last_authentication_time_;
  last_authentication_time_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SystemConfig::_internal_mutable_last_authentication_time() {
  
  if (last_authentication_time_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    last_authentication_time_ = p;
  }
  return last_authentication_time_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SystemConfig::mutable_last_authentication_time() {
  // @@protoc_insertion_point(field_mutable:clarifai.sdk.utils.SystemConfig.last_authentication_time)
  return _internal_mutable_last_authentication_time();
}
inline void SystemConfig::set_allocated_last_authentication_time(PROTOBUF_NAMESPACE_ID::Timestamp* last_authentication_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(last_authentication_time_);
  }
  if (last_authentication_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(last_authentication_time)->GetArena();
    if (message_arena != submessage_arena) {
      last_authentication_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, last_authentication_time, submessage_arena);
    }
    
  } else {
    
  }
  last_authentication_time_ = last_authentication_time;
  // @@protoc_insertion_point(field_set_allocated:clarifai.sdk.utils.SystemConfig.last_authentication_time)
}

// .google.protobuf.Timestamp last_batch_upload_time = 9;
inline bool SystemConfig::_internal_has_last_batch_upload_time() const {
  return this != internal_default_instance() && last_batch_upload_time_ != nullptr;
}
inline bool SystemConfig::has_last_batch_upload_time() const {
  return _internal_has_last_batch_upload_time();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& SystemConfig::_internal_last_batch_upload_time() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = last_batch_upload_time_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& SystemConfig::last_batch_upload_time() const {
  // @@protoc_insertion_point(field_get:clarifai.sdk.utils.SystemConfig.last_batch_upload_time)
  return _internal_last_batch_upload_time();
}
inline void SystemConfig::unsafe_arena_set_allocated_last_batch_upload_time(
    PROTOBUF_NAMESPACE_ID::Timestamp* last_batch_upload_time) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(last_batch_upload_time_);
  }
  last_batch_upload_time_ = last_batch_upload_time;
  if (last_batch_upload_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:clarifai.sdk.utils.SystemConfig.last_batch_upload_time)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SystemConfig::release_last_batch_upload_time() {
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = last_batch_upload_time_;
  last_batch_upload_time_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SystemConfig::unsafe_arena_release_last_batch_upload_time() {
  // @@protoc_insertion_point(field_release:clarifai.sdk.utils.SystemConfig.last_batch_upload_time)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = last_batch_upload_time_;
  last_batch_upload_time_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SystemConfig::_internal_mutable_last_batch_upload_time() {
  
  if (last_batch_upload_time_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    last_batch_upload_time_ = p;
  }
  return last_batch_upload_time_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SystemConfig::mutable_last_batch_upload_time() {
  // @@protoc_insertion_point(field_mutable:clarifai.sdk.utils.SystemConfig.last_batch_upload_time)
  return _internal_mutable_last_batch_upload_time();
}
inline void SystemConfig::set_allocated_last_batch_upload_time(PROTOBUF_NAMESPACE_ID::Timestamp* last_batch_upload_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(last_batch_upload_time_);
  }
  if (last_batch_upload_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(last_batch_upload_time)->GetArena();
    if (message_arena != submessage_arena) {
      last_batch_upload_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, last_batch_upload_time, submessage_arena);
    }
    
  } else {
    
  }
  last_batch_upload_time_ = last_batch_upload_time;
  // @@protoc_insertion_point(field_set_allocated:clarifai.sdk.utils.SystemConfig.last_batch_upload_time)
}

// .google.protobuf.Duration billing_interval = 10;
inline bool SystemConfig::_internal_has_billing_interval() const {
  return this != internal_default_instance() && billing_interval_ != nullptr;
}
inline bool SystemConfig::has_billing_interval() const {
  return _internal_has_billing_interval();
}
inline const PROTOBUF_NAMESPACE_ID::Duration& SystemConfig::_internal_billing_interval() const {
  const PROTOBUF_NAMESPACE_ID::Duration* p = billing_interval_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Duration*>(
      &PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Duration& SystemConfig::billing_interval() const {
  // @@protoc_insertion_point(field_get:clarifai.sdk.utils.SystemConfig.billing_interval)
  return _internal_billing_interval();
}
inline void SystemConfig::unsafe_arena_set_allocated_billing_interval(
    PROTOBUF_NAMESPACE_ID::Duration* billing_interval) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(billing_interval_);
  }
  billing_interval_ = billing_interval;
  if (billing_interval) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:clarifai.sdk.utils.SystemConfig.billing_interval)
}
inline PROTOBUF_NAMESPACE_ID::Duration* SystemConfig::release_billing_interval() {
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = billing_interval_;
  billing_interval_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* SystemConfig::unsafe_arena_release_billing_interval() {
  // @@protoc_insertion_point(field_release:clarifai.sdk.utils.SystemConfig.billing_interval)
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = billing_interval_;
  billing_interval_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* SystemConfig::_internal_mutable_billing_interval() {
  
  if (billing_interval_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Duration>(GetArena());
    billing_interval_ = p;
  }
  return billing_interval_;
}
inline PROTOBUF_NAMESPACE_ID::Duration* SystemConfig::mutable_billing_interval() {
  // @@protoc_insertion_point(field_mutable:clarifai.sdk.utils.SystemConfig.billing_interval)
  return _internal_mutable_billing_interval();
}
inline void SystemConfig::set_allocated_billing_interval(PROTOBUF_NAMESPACE_ID::Duration* billing_interval) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(billing_interval_);
  }
  if (billing_interval) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(billing_interval)->GetArena();
    if (message_arena != submessage_arena) {
      billing_interval = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, billing_interval, submessage_arena);
    }
    
  } else {
    
  }
  billing_interval_ = billing_interval;
  // @@protoc_insertion_point(field_set_allocated:clarifai.sdk.utils.SystemConfig.billing_interval)
}

// .google.protobuf.Timestamp last_billing_time = 11;
inline bool SystemConfig::_internal_has_last_billing_time() const {
  return this != internal_default_instance() && last_billing_time_ != nullptr;
}
inline bool SystemConfig::has_last_billing_time() const {
  return _internal_has_last_billing_time();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& SystemConfig::_internal_last_billing_time() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = last_billing_time_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& SystemConfig::last_billing_time() const {
  // @@protoc_insertion_point(field_get:clarifai.sdk.utils.SystemConfig.last_billing_time)
  return _internal_last_billing_time();
}
inline void SystemConfig::unsafe_arena_set_allocated_last_billing_time(
    PROTOBUF_NAMESPACE_ID::Timestamp* last_billing_time) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(last_billing_time_);
  }
  last_billing_time_ = last_billing_time;
  if (last_billing_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:clarifai.sdk.utils.SystemConfig.last_billing_time)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SystemConfig::release_last_billing_time() {
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = last_billing_time_;
  last_billing_time_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SystemConfig::unsafe_arena_release_last_billing_time() {
  // @@protoc_insertion_point(field_release:clarifai.sdk.utils.SystemConfig.last_billing_time)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = last_billing_time_;
  last_billing_time_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SystemConfig::_internal_mutable_last_billing_time() {
  
  if (last_billing_time_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    last_billing_time_ = p;
  }
  return last_billing_time_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* SystemConfig::mutable_last_billing_time() {
  // @@protoc_insertion_point(field_mutable:clarifai.sdk.utils.SystemConfig.last_billing_time)
  return _internal_mutable_last_billing_time();
}
inline void SystemConfig::set_allocated_last_billing_time(PROTOBUF_NAMESPACE_ID::Timestamp* last_billing_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(last_billing_time_);
  }
  if (last_billing_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(last_billing_time)->GetArena();
    if (message_arena != submessage_arena) {
      last_billing_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, last_billing_time, submessage_arena);
    }
    
  } else {
    
  }
  last_billing_time_ = last_billing_time;
  // @@protoc_insertion_point(field_set_allocated:clarifai.sdk.utils.SystemConfig.last_billing_time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace utils
}  // namespace sdk
}  // namespace clarifai

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::clarifai::sdk::utils::NetworkConstraint> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::clarifai::sdk::utils::NetworkConstraint>() {
  return ::clarifai::sdk::utils::NetworkConstraint_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_proto_2fclarifai_2fsdk_2futils_2fsystem_5fconfig_2eproto
