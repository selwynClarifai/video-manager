// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/utils/data_example.proto

#include "proto/utils/data_example.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2faudio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Audio_proto_2futils_2faudio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fbbox_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BBox_proto_2futils_2fbbox_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fblur_5fresult_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_BlurResult_proto_2futils_2fblur_5fresult_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fboundingbox_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_BoundingBox_proto_2futils_2fboundingbox_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fcaption_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Caption_proto_2futils_2fcaption_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fcolor_5fresult_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ColorResult_proto_2futils_2fcolor_5fresult_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fdata_5fexample_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<18> scc_info_DataExample_proto_2futils_2fdata_5fexample_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fdata_5fexample_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DataExample_SavedOutputEntry_DoNotUse_proto_2futils_2fdata_5fexample_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fembedding_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Embedding_proto_2futils_2fembedding_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fface_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Face_proto_2futils_2fface_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fgeo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Geo_proto_2futils_2fgeo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fimage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Image_proto_2futils_2fimage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2flopq_5fcode_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LOPQCode_proto_2futils_2flopq_5fcode_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fpoint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Point_proto_2futils_2fpoint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fdata_5fexample_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Region_RegionInfo_proto_2futils_2fdata_5fexample_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2frequest_5fmeta_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fsaved_5foutput_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SavedOutput_proto_2futils_2fsaved_5foutput_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2ftag_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Tag_proto_2futils_2ftag_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2ftext_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Text_proto_2futils_2ftext_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fdata_5fexample_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TimeFrame_FrameInfo_proto_2futils_2fdata_5fexample_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fvideo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Video_proto_2futils_2fvideo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fstruct_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
class DataExample_SavedOutputEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DataExample_SavedOutputEntry_DoNotUse> _instance;
} _DataExample_SavedOutputEntry_DoNotUse_default_instance_;
class DataExampleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DataExample> _instance;
} _DataExample_default_instance_;
class Region_RegionInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Region_RegionInfo> _instance;
} _Region_RegionInfo_default_instance_;
class RegionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Region> _instance;
} _Region_default_instance_;
class TimeFrame_FrameInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TimeFrame_FrameInfo> _instance;
} _TimeFrame_FrameInfo_default_instance_;
class TimeFrameDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TimeFrame> _instance;
} _TimeFrame_default_instance_;
static void InitDefaultsscc_info_DataExample_proto_2futils_2fdata_5fexample_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DataExample_default_instance_;
    new (ptr) ::DataExample();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::_Region_default_instance_;
    new (ptr) ::Region();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::_TimeFrame_default_instance_;
    new (ptr) ::TimeFrame();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataExample::InitAsDefaultInstance();
  ::Region::InitAsDefaultInstance();
  ::TimeFrame::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<18> scc_info_DataExample_proto_2futils_2fdata_5fexample_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 18, 0, InitDefaultsscc_info_DataExample_proto_2futils_2fdata_5fexample_2eproto}, {
      &scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto.base,
      &scc_info_Image_proto_2futils_2fimage_2eproto.base,
      &scc_info_Video_proto_2futils_2fvideo_2eproto.base,
      &scc_info_DataExample_SavedOutputEntry_DoNotUse_proto_2futils_2fdata_5fexample_2eproto.base,
      &scc_info_Embedding_proto_2futils_2fembedding_2eproto.base,
      &scc_info_Tag_proto_2futils_2ftag_2eproto.base,
      &scc_info_BoundingBox_proto_2futils_2fboundingbox_2eproto.base,
      &scc_info_Geo_proto_2futils_2fgeo_2eproto.base,
      &scc_info_Caption_proto_2futils_2fcaption_2eproto.base,
      &scc_info_Face_proto_2futils_2fface_2eproto.base,
      &scc_info_LOPQCode_proto_2futils_2flopq_5fcode_2eproto.base,
      &scc_info_BlurResult_proto_2futils_2fblur_5fresult_2eproto.base,
      &scc_info_ColorResult_proto_2futils_2fcolor_5fresult_2eproto.base,
      &scc_info_Text_proto_2futils_2ftext_2eproto.base,
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,
      &scc_info_Audio_proto_2futils_2faudio_2eproto.base,
      &scc_info_Region_RegionInfo_proto_2futils_2fdata_5fexample_2eproto.base,
      &scc_info_TimeFrame_FrameInfo_proto_2futils_2fdata_5fexample_2eproto.base,}};

static void InitDefaultsscc_info_DataExample_SavedOutputEntry_DoNotUse_proto_2futils_2fdata_5fexample_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DataExample_SavedOutputEntry_DoNotUse_default_instance_;
    new (ptr) ::DataExample_SavedOutputEntry_DoNotUse();
  }
  ::DataExample_SavedOutputEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DataExample_SavedOutputEntry_DoNotUse_proto_2futils_2fdata_5fexample_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DataExample_SavedOutputEntry_DoNotUse_proto_2futils_2fdata_5fexample_2eproto}, {
      &scc_info_SavedOutput_proto_2futils_2fsaved_5foutput_2eproto.base,}};

static void InitDefaultsscc_info_Region_RegionInfo_proto_2futils_2fdata_5fexample_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Region_RegionInfo_default_instance_;
    new (ptr) ::Region_RegionInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Region_RegionInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Region_RegionInfo_proto_2futils_2fdata_5fexample_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Region_RegionInfo_proto_2futils_2fdata_5fexample_2eproto}, {
      &scc_info_BBox_proto_2futils_2fbbox_2eproto.base,
      &scc_info_Point_proto_2futils_2fpoint_2eproto.base,}};

static void InitDefaultsscc_info_TimeFrame_FrameInfo_proto_2futils_2fdata_5fexample_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TimeFrame_FrameInfo_default_instance_;
    new (ptr) ::TimeFrame_FrameInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TimeFrame_FrameInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TimeFrame_FrameInfo_proto_2futils_2fdata_5fexample_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TimeFrame_FrameInfo_proto_2futils_2fdata_5fexample_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2futils_2fdata_5fexample_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_2futils_2fdata_5fexample_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2futils_2fdata_5fexample_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2futils_2fdata_5fexample_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::DataExample_SavedOutputEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::DataExample_SavedOutputEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::DataExample_SavedOutputEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::DataExample_SavedOutputEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DataExample, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::DataExample, id_),
  PROTOBUF_FIELD_OFFSET(::DataExample, status_),
  PROTOBUF_FIELD_OFFSET(::DataExample, image_),
  PROTOBUF_FIELD_OFFSET(::DataExample, video_),
  PROTOBUF_FIELD_OFFSET(::DataExample, saved_output_),
  PROTOBUF_FIELD_OFFSET(::DataExample, embedding_),
  PROTOBUF_FIELD_OFFSET(::DataExample, image_segment_),
  PROTOBUF_FIELD_OFFSET(::DataExample, tag_),
  PROTOBUF_FIELD_OFFSET(::DataExample, bbox_),
  PROTOBUF_FIELD_OFFSET(::DataExample, json_metadata_),
  PROTOBUF_FIELD_OFFSET(::DataExample, geo_),
  PROTOBUF_FIELD_OFFSET(::DataExample, caption_),
  PROTOBUF_FIELD_OFFSET(::DataExample, region_),
  PROTOBUF_FIELD_OFFSET(::DataExample, face_),
  PROTOBUF_FIELD_OFFSET(::DataExample, lopq_code_),
  PROTOBUF_FIELD_OFFSET(::DataExample, blur_result_),
  PROTOBUF_FIELD_OFFSET(::DataExample, color_result_),
  PROTOBUF_FIELD_OFFSET(::DataExample, frame_),
  PROTOBUF_FIELD_OFFSET(::DataExample, text_),
  PROTOBUF_FIELD_OFFSET(::DataExample, metadata_),
  PROTOBUF_FIELD_OFFSET(::DataExample, audio_),
  PROTOBUF_FIELD_OFFSET(::DataExample, cfid_),
  PROTOBUF_FIELD_OFFSET(::DataExample, hash_),
  PROTOBUF_FIELD_OFFSET(::DataExample, asset_id_),
  PROTOBUF_FIELD_OFFSET(::DataExample, asset_cfid_),
  PROTOBUF_FIELD_OFFSET(::DataExample, annotation_info_),
  PROTOBUF_FIELD_OFFSET(::DataExample, dataset_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Region_RegionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Region_RegionInfo, bounding_box_),
  PROTOBUF_FIELD_OFFSET(::Region_RegionInfo, mask_),
  PROTOBUF_FIELD_OFFSET(::Region_RegionInfo, point_),
  PROTOBUF_FIELD_OFFSET(::Region_RegionInfo, relative_to_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Region, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Region, id_),
  PROTOBUF_FIELD_OFFSET(::Region, region_info_),
  PROTOBUF_FIELD_OFFSET(::Region, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TimeFrame_FrameInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TimeFrame_FrameInfo, num_),
  PROTOBUF_FIELD_OFFSET(::TimeFrame_FrameInfo, time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TimeFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TimeFrame, id_),
  PROTOBUF_FIELD_OFFSET(::TimeFrame, frame_info_),
  PROTOBUF_FIELD_OFFSET(::TimeFrame, data_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::DataExample_SavedOutputEntry_DoNotUse)},
  { 9, -1, sizeof(::DataExample)},
  { 41, -1, sizeof(::Region_RegionInfo)},
  { 50, -1, sizeof(::Region)},
  { 58, -1, sizeof(::TimeFrame_FrameInfo)},
  { 65, -1, sizeof(::TimeFrame)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_DataExample_SavedOutputEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_DataExample_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Region_RegionInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Region_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_TimeFrame_FrameInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_TimeFrame_default_instance_),
};

const char descriptor_table_protodef_proto_2futils_2fdata_5fexample_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036proto/utils/data_example.proto\032\027proto/"
  "utils/audio.proto\032\026proto/utils/bbox.prot"
  "o\032\035proto/utils/boundingbox.proto\032\035proto/"
  "utils/blur_result.proto\032\031proto/utils/cap"
  "tion.proto\032\036proto/utils/color_result.pro"
  "to\032\033proto/utils/embedding.proto\032\026proto/u"
  "tils/face.proto\032\025proto/utils/geo.proto\032\027"
  "proto/utils/image.proto\032\033proto/utils/lop"
  "q_code.proto\032\027proto/utils/point.proto\032\036p"
  "roto/utils/request_meta.proto\032\036proto/uti"
  "ls/saved_output.proto\032\025proto/utils/tag.p"
  "roto\032\026proto/utils/text.proto\032\027proto/util"
  "s/video.proto\032)proto/clarifai/api/utils/"
  "extensions.proto\032 google/protobuf/descri"
  "ptor.proto\032\037google/protobuf/timestamp.pr"
  "oto\032\034google/protobuf/struct.proto\"\330\007\n\013Da"
  "taExample\022\020\n\002id\030\001 \001(\tB\004\220\265\030\000\022&\n\006status\030\347\007"
  " \001(\0132\017.ResponseStatusB\004\220\265\030\000\022\033\n\005image\030\002 \001"
  "(\0132\006.ImageB\004\220\265\030\001\022\033\n\005video\030\003 \001(\0132\006.VideoB"
  "\004\220\265\030\001\0229\n\014saved_output\030\005 \003(\0132\035.DataExampl"
  "e.SavedOutputEntryB\004\220\265\030\001\022#\n\tembedding\030\006 "
  "\003(\0132\n.EmbeddingB\004\220\265\030\001\022#\n\rimage_segment\030\007"
  " \001(\0132\006.ImageB\004\220\265\030\001\022\030\n\003tag\030\350\007 \003(\0132\004.TagB\004"
  "\220\265\030\000\022!\n\004bbox\030\352\007 \003(\0132\014.BoundingBoxB\004\220\265\030\000\022"
  "\036\n\rjson_metadata\030\353\007 \001(\tB\006\030\001\220\265\030\000\022\030\n\003geo\030\355"
  "\007 \001(\0132\004.GeoB\004\220\265\030\000\022 \n\007caption\030\357\007 \003(\0132\010.Ca"
  "ptionB\004\220\265\030\000\022\036\n\006region\030\360\007 \003(\0132\007.RegionB\004\220"
  "\265\030\000\022\032\n\004face\030\361\007 \003(\0132\005.FaceB\004\220\265\030\000\022#\n\tlopq_"
  "code\030\362\007 \003(\0132\t.LOPQCodeB\004\220\265\030\000\022\'\n\013blur_res"
  "ult\030\363\007 \001(\0132\013.BlurResultB\004\220\265\030\000\022)\n\014color_r"
  "esult\030\364\007 \001(\0132\014.ColorResultB\004\220\265\030\000\022 \n\005fram"
  "e\030\365\007 \003(\0132\n.TimeFrameB\004\220\265\030\000\022\032\n\004text\030\367\007 \001("
  "\0132\005.TextB\004\220\265\030\001\0220\n\010metadata\030\370\007 \001(\0132\027.goog"
  "le.protobuf.StructB\004\220\265\030\000\022\034\n\005audio\030\371\007 \001(\013"
  "2\006.AudioB\004\220\265\030\001\022\023\n\004cfid\030\314\010 \001(\tB\004\220\265\030\000\022\023\n\004h"
  "ash\030\315\010 \001(\tB\004\220\265\030\000\022\027\n\010asset_id\030\316\010 \001(\tB\004\220\265\030"
  "\000\022\031\n\nasset_cfid\030\317\010 \001(\tB\004\220\265\030\000\0227\n\017annotati"
  "on_info\030\320\010 \001(\0132\027.google.protobuf.StructB"
  "\004\220\265\030\000\022\033\n\014dataset_name\030\321\010 \001(\tB\004\220\265\030\000\032@\n\020Sa"
  "vedOutputEntry\022\013\n\003key\030\001 \001(\t\022\033\n\005value\030\002 \001"
  "(\0132\014.SavedOutput:\0028\001\"\312\001\n\006Region\022\020\n\002id\030\001 "
  "\001(\tB\004\220\265\030\000\022\'\n\013region_info\030\013 \001(\0132\022.Region."
  "RegionInfo\022\032\n\004data\030\014 \001(\0132\014.DataExample\032i"
  "\n\nRegionInfo\022\033\n\014bounding_box\030\001 \001(\0132\005.BBo"
  "x\022\014\n\004mask\030\002 \001(\014\022\033\n\005point\030\003 \001(\0132\006.PointB\004"
  "\220\265\030\000\022\023\n\013relative_to\030\004 \001(\005\"\255\001\n\tTimeFrame\022"
  "\020\n\002id\030\001 \001(\tB\004\220\265\030\000\022(\n\nframe_info\030\013 \001(\0132\024."
  "TimeFrame.FrameInfo\022\032\n\004data\030\014 \001(\0132\014.Data"
  "Example\032H\n\tFrameInfo\022\021\n\003num\030\001 \001(\005B\004\200\265\030\001\022"
  "(\n\004time\030\002 \001(\0132\032.google.protobuf.Timestam"
  "p:.\n\005heavy\022\035.google.protobuf.FieldOption"
  "s\030\322\206\003 \001(\010B\016\n\005utilsZ\005utilsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2futils_2fdata_5fexample_2eproto_deps[21] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto,
  &::descriptor_table_proto_2futils_2faudio_2eproto,
  &::descriptor_table_proto_2futils_2fbbox_2eproto,
  &::descriptor_table_proto_2futils_2fblur_5fresult_2eproto,
  &::descriptor_table_proto_2futils_2fboundingbox_2eproto,
  &::descriptor_table_proto_2futils_2fcaption_2eproto,
  &::descriptor_table_proto_2futils_2fcolor_5fresult_2eproto,
  &::descriptor_table_proto_2futils_2fembedding_2eproto,
  &::descriptor_table_proto_2futils_2fface_2eproto,
  &::descriptor_table_proto_2futils_2fgeo_2eproto,
  &::descriptor_table_proto_2futils_2fimage_2eproto,
  &::descriptor_table_proto_2futils_2flopq_5fcode_2eproto,
  &::descriptor_table_proto_2futils_2fpoint_2eproto,
  &::descriptor_table_proto_2futils_2frequest_5fmeta_2eproto,
  &::descriptor_table_proto_2futils_2fsaved_5foutput_2eproto,
  &::descriptor_table_proto_2futils_2ftag_2eproto,
  &::descriptor_table_proto_2futils_2ftext_2eproto,
  &::descriptor_table_proto_2futils_2fvideo_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2futils_2fdata_5fexample_2eproto_sccs[4] = {
  &scc_info_DataExample_proto_2futils_2fdata_5fexample_2eproto.base,
  &scc_info_DataExample_SavedOutputEntry_DoNotUse_proto_2futils_2fdata_5fexample_2eproto.base,
  &scc_info_Region_RegionInfo_proto_2futils_2fdata_5fexample_2eproto.base,
  &scc_info_TimeFrame_FrameInfo_proto_2futils_2fdata_5fexample_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2futils_2fdata_5fexample_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2futils_2fdata_5fexample_2eproto = {
  false, false, descriptor_table_protodef_proto_2futils_2fdata_5fexample_2eproto, "proto/utils/data_example.proto", 2073,
  &descriptor_table_proto_2futils_2fdata_5fexample_2eproto_once, descriptor_table_proto_2futils_2fdata_5fexample_2eproto_sccs, descriptor_table_proto_2futils_2fdata_5fexample_2eproto_deps, 4, 21,
  schemas, file_default_instances, TableStruct_proto_2futils_2fdata_5fexample_2eproto::offsets,
  file_level_metadata_proto_2futils_2fdata_5fexample_2eproto, 6, file_level_enum_descriptors_proto_2futils_2fdata_5fexample_2eproto, file_level_service_descriptors_proto_2futils_2fdata_5fexample_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2futils_2fdata_5fexample_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2futils_2fdata_5fexample_2eproto)), true);

// ===================================================================

DataExample_SavedOutputEntry_DoNotUse::DataExample_SavedOutputEntry_DoNotUse() {}
DataExample_SavedOutputEntry_DoNotUse::DataExample_SavedOutputEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DataExample_SavedOutputEntry_DoNotUse::MergeFrom(const DataExample_SavedOutputEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DataExample_SavedOutputEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void DataExample_SavedOutputEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void DataExample::InitAsDefaultInstance() {
  ::_DataExample_default_instance_._instance.get_mutable()->status_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
  ::_DataExample_default_instance_._instance.get_mutable()->image_ = const_cast< ::Image*>(
      ::Image::internal_default_instance());
  ::_DataExample_default_instance_._instance.get_mutable()->video_ = const_cast< ::Video*>(
      ::Video::internal_default_instance());
  ::_DataExample_default_instance_._instance.get_mutable()->image_segment_ = const_cast< ::Image*>(
      ::Image::internal_default_instance());
  ::_DataExample_default_instance_._instance.get_mutable()->geo_ = const_cast< ::Geo*>(
      ::Geo::internal_default_instance());
  ::_DataExample_default_instance_._instance.get_mutable()->blur_result_ = const_cast< ::BlurResult*>(
      ::BlurResult::internal_default_instance());
  ::_DataExample_default_instance_._instance.get_mutable()->color_result_ = const_cast< ::ColorResult*>(
      ::ColorResult::internal_default_instance());
  ::_DataExample_default_instance_._instance.get_mutable()->text_ = const_cast< ::Text*>(
      ::Text::internal_default_instance());
  ::_DataExample_default_instance_._instance.get_mutable()->metadata_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
  ::_DataExample_default_instance_._instance.get_mutable()->audio_ = const_cast< ::Audio*>(
      ::Audio::internal_default_instance());
  ::_DataExample_default_instance_._instance.get_mutable()->annotation_info_ = const_cast< PROTOBUF_NAMESPACE_ID::Struct*>(
      PROTOBUF_NAMESPACE_ID::Struct::internal_default_instance());
}
class DataExample::_Internal {
 public:
  static const ::ResponseStatus& status(const DataExample* msg);
  static const ::Image& image(const DataExample* msg);
  static const ::Video& video(const DataExample* msg);
  static const ::Image& image_segment(const DataExample* msg);
  static const ::Geo& geo(const DataExample* msg);
  static const ::BlurResult& blur_result(const DataExample* msg);
  static const ::ColorResult& color_result(const DataExample* msg);
  static const ::Text& text(const DataExample* msg);
  static const PROTOBUF_NAMESPACE_ID::Struct& metadata(const DataExample* msg);
  static const ::Audio& audio(const DataExample* msg);
  static const PROTOBUF_NAMESPACE_ID::Struct& annotation_info(const DataExample* msg);
};

const ::ResponseStatus&
DataExample::_Internal::status(const DataExample* msg) {
  return *msg->status_;
}
const ::Image&
DataExample::_Internal::image(const DataExample* msg) {
  return *msg->image_;
}
const ::Video&
DataExample::_Internal::video(const DataExample* msg) {
  return *msg->video_;
}
const ::Image&
DataExample::_Internal::image_segment(const DataExample* msg) {
  return *msg->image_segment_;
}
const ::Geo&
DataExample::_Internal::geo(const DataExample* msg) {
  return *msg->geo_;
}
const ::BlurResult&
DataExample::_Internal::blur_result(const DataExample* msg) {
  return *msg->blur_result_;
}
const ::ColorResult&
DataExample::_Internal::color_result(const DataExample* msg) {
  return *msg->color_result_;
}
const ::Text&
DataExample::_Internal::text(const DataExample* msg) {
  return *msg->text_;
}
const PROTOBUF_NAMESPACE_ID::Struct&
DataExample::_Internal::metadata(const DataExample* msg) {
  return *msg->metadata_;
}
const ::Audio&
DataExample::_Internal::audio(const DataExample* msg) {
  return *msg->audio_;
}
const PROTOBUF_NAMESPACE_ID::Struct&
DataExample::_Internal::annotation_info(const DataExample* msg) {
  return *msg->annotation_info_;
}
void DataExample::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void DataExample::clear_image() {
  if (GetArena() == nullptr && image_ != nullptr) {
    delete image_;
  }
  image_ = nullptr;
}
void DataExample::clear_video() {
  if (GetArena() == nullptr && video_ != nullptr) {
    delete video_;
  }
  video_ = nullptr;
}
void DataExample::clear_saved_output() {
  saved_output_.Clear();
}
void DataExample::clear_embedding() {
  embedding_.Clear();
}
void DataExample::clear_image_segment() {
  if (GetArena() == nullptr && image_segment_ != nullptr) {
    delete image_segment_;
  }
  image_segment_ = nullptr;
}
void DataExample::clear_tag() {
  tag_.Clear();
}
void DataExample::clear_bbox() {
  bbox_.Clear();
}
void DataExample::clear_geo() {
  if (GetArena() == nullptr && geo_ != nullptr) {
    delete geo_;
  }
  geo_ = nullptr;
}
void DataExample::clear_caption() {
  caption_.Clear();
}
void DataExample::clear_face() {
  face_.Clear();
}
void DataExample::clear_lopq_code() {
  lopq_code_.Clear();
}
void DataExample::clear_blur_result() {
  if (GetArena() == nullptr && blur_result_ != nullptr) {
    delete blur_result_;
  }
  blur_result_ = nullptr;
}
void DataExample::clear_color_result() {
  if (GetArena() == nullptr && color_result_ != nullptr) {
    delete color_result_;
  }
  color_result_ = nullptr;
}
void DataExample::clear_text() {
  if (GetArena() == nullptr && text_ != nullptr) {
    delete text_;
  }
  text_ = nullptr;
}
void DataExample::clear_metadata() {
  if (GetArena() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
}
void DataExample::clear_audio() {
  if (GetArena() == nullptr && audio_ != nullptr) {
    delete audio_;
  }
  audio_ = nullptr;
}
void DataExample::clear_annotation_info() {
  if (GetArena() == nullptr && annotation_info_ != nullptr) {
    delete annotation_info_;
  }
  annotation_info_ = nullptr;
}
DataExample::DataExample(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  saved_output_(arena),
  embedding_(arena),
  tag_(arena),
  bbox_(arena),
  caption_(arena),
  region_(arena),
  face_(arena),
  lopq_code_(arena),
  frame_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:DataExample)
}
DataExample::DataExample(const DataExample& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      embedding_(from.embedding_),
      tag_(from.tag_),
      bbox_(from.bbox_),
      caption_(from.caption_),
      region_(from.region_),
      face_(from.face_),
      lopq_code_(from.lopq_code_),
      frame_(from.frame_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  saved_output_.MergeFrom(from.saved_output_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  json_metadata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_json_metadata().empty()) {
    json_metadata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_json_metadata(),
      GetArena());
  }
  cfid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cfid().empty()) {
    cfid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_cfid(),
      GetArena());
  }
  hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_hash().empty()) {
    hash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_hash(),
      GetArena());
  }
  asset_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_asset_id().empty()) {
    asset_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_asset_id(),
      GetArena());
  }
  asset_cfid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_asset_cfid().empty()) {
    asset_cfid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_asset_cfid(),
      GetArena());
  }
  dataset_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dataset_name().empty()) {
    dataset_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_dataset_name(),
      GetArena());
  }
  if (from._internal_has_image()) {
    image_ = new ::Image(*from.image_);
  } else {
    image_ = nullptr;
  }
  if (from._internal_has_video()) {
    video_ = new ::Video(*from.video_);
  } else {
    video_ = nullptr;
  }
  if (from._internal_has_image_segment()) {
    image_segment_ = new ::Image(*from.image_segment_);
  } else {
    image_segment_ = nullptr;
  }
  if (from._internal_has_status()) {
    status_ = new ::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_geo()) {
    geo_ = new ::Geo(*from.geo_);
  } else {
    geo_ = nullptr;
  }
  if (from._internal_has_blur_result()) {
    blur_result_ = new ::BlurResult(*from.blur_result_);
  } else {
    blur_result_ = nullptr;
  }
  if (from._internal_has_color_result()) {
    color_result_ = new ::ColorResult(*from.color_result_);
  } else {
    color_result_ = nullptr;
  }
  if (from._internal_has_text()) {
    text_ = new ::Text(*from.text_);
  } else {
    text_ = nullptr;
  }
  if (from._internal_has_metadata()) {
    metadata_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  if (from._internal_has_audio()) {
    audio_ = new ::Audio(*from.audio_);
  } else {
    audio_ = nullptr;
  }
  if (from._internal_has_annotation_info()) {
    annotation_info_ = new PROTOBUF_NAMESPACE_ID::Struct(*from.annotation_info_);
  } else {
    annotation_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:DataExample)
}

void DataExample::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DataExample_proto_2futils_2fdata_5fexample_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  json_metadata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cfid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  asset_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  asset_cfid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dataset_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&image_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&annotation_info_) -
      reinterpret_cast<char*>(&image_)) + sizeof(annotation_info_));
}

DataExample::~DataExample() {
  // @@protoc_insertion_point(destructor:DataExample)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DataExample::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  json_metadata_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cfid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  asset_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  asset_cfid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dataset_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete image_;
  if (this != internal_default_instance()) delete video_;
  if (this != internal_default_instance()) delete image_segment_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete geo_;
  if (this != internal_default_instance()) delete blur_result_;
  if (this != internal_default_instance()) delete color_result_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete metadata_;
  if (this != internal_default_instance()) delete audio_;
  if (this != internal_default_instance()) delete annotation_info_;
}

void DataExample::ArenaDtor(void* object) {
  DataExample* _this = reinterpret_cast< DataExample* >(object);
  (void)_this;
}
void DataExample::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DataExample::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DataExample& DataExample::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DataExample_proto_2futils_2fdata_5fexample_2eproto.base);
  return *internal_default_instance();
}


void DataExample::Clear() {
// @@protoc_insertion_point(message_clear_start:DataExample)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  saved_output_.Clear();
  embedding_.Clear();
  tag_.Clear();
  bbox_.Clear();
  caption_.Clear();
  region_.Clear();
  face_.Clear();
  lopq_code_.Clear();
  frame_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  json_metadata_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  cfid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  hash_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  asset_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  asset_cfid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dataset_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && image_ != nullptr) {
    delete image_;
  }
  image_ = nullptr;
  if (GetArena() == nullptr && video_ != nullptr) {
    delete video_;
  }
  video_ = nullptr;
  if (GetArena() == nullptr && image_segment_ != nullptr) {
    delete image_segment_;
  }
  image_segment_ = nullptr;
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && geo_ != nullptr) {
    delete geo_;
  }
  geo_ = nullptr;
  if (GetArena() == nullptr && blur_result_ != nullptr) {
    delete blur_result_;
  }
  blur_result_ = nullptr;
  if (GetArena() == nullptr && color_result_ != nullptr) {
    delete color_result_;
  }
  color_result_ = nullptr;
  if (GetArena() == nullptr && text_ != nullptr) {
    delete text_;
  }
  text_ = nullptr;
  if (GetArena() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  if (GetArena() == nullptr && audio_ != nullptr) {
    delete audio_;
  }
  audio_ = nullptr;
  if (GetArena() == nullptr && annotation_info_ != nullptr) {
    delete annotation_info_;
  }
  annotation_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataExample::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1 [(.heavy) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "DataExample.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Image image = 2 [(.heavy) = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_image(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Video video = 3 [(.heavy) = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_video(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .SavedOutput> saved_output = 5 [(.heavy) = true];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&saved_output_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .Embedding embedding = 6 [(.heavy) = true];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_embedding(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // .Image image_segment = 7 [(.heavy) = true];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_image_segment(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ResponseStatus status = 999 [(.heavy) = false];
      case 999:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .Tag tag = 1000 [(.heavy) = false];
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_tag(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8002>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .BoundingBox bbox = 1002 [(.heavy) = false];
      case 1002:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_bbox(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8018>(ptr));
        } else goto handle_unusual;
        continue;
      // string json_metadata = 1003 [deprecated = true, (.heavy) = false];
      case 1003:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_json_metadata();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "DataExample.json_metadata"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Geo geo = 1005 [(.heavy) = false];
      case 1005:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_geo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .Caption caption = 1007 [(.heavy) = false];
      case 1007:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_caption(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8058>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .Region region = 1008 [(.heavy) = false];
      case 1008:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_region(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8066>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .Face face = 1009 [(.heavy) = false];
      case 1009:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_face(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8074>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .LOPQCode lopq_code = 1010 [(.heavy) = false];
      case 1010:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_lopq_code(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8082>(ptr));
        } else goto handle_unusual;
        continue;
      // .BlurResult blur_result = 1011 [(.heavy) = false];
      case 1011:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_blur_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ColorResult color_result = 1012 [(.heavy) = false];
      case 1012:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_color_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .TimeFrame frame = 1013 [(.heavy) = false];
      case 1013:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_frame(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8106>(ptr));
        } else goto handle_unusual;
        continue;
      // .Text text = 1015 [(.heavy) = true];
      case 1015:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_text(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct metadata = 1016 [(.heavy) = false];
      case 1016:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Audio audio = 1017 [(.heavy) = true];
      case 1017:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_audio(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string cfid = 1100 [(.heavy) = false];
      case 1100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_cfid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "DataExample.cfid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string hash = 1101 [(.heavy) = false];
      case 1101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "DataExample.hash"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string asset_id = 1102 [(.heavy) = false];
      case 1102:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_asset_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "DataExample.asset_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string asset_cfid = 1103 [(.heavy) = false];
      case 1103:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_asset_cfid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "DataExample.asset_cfid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct annotation_info = 1104 [(.heavy) = false];
      case 1104:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_annotation_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string dataset_name = 1105 [(.heavy) = false];
      case 1105:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          auto str = _internal_mutable_dataset_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "DataExample.dataset_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DataExample::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataExample)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.heavy) = false];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DataExample.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .Image image = 2 [(.heavy) = true];
  if (this->has_image()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::image(this), target, stream);
  }

  // .Video video = 3 [(.heavy) = true];
  if (this->has_video()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::video(this), target, stream);
  }

  // map<string, .SavedOutput> saved_output = 5 [(.heavy) = true];
  if (!this->_internal_saved_output().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::SavedOutput >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "DataExample.SavedOutputEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_saved_output().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_saved_output().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::SavedOutput >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::SavedOutput >::const_iterator
          it = this->_internal_saved_output().begin();
          it != this->_internal_saved_output().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = DataExample_SavedOutputEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::SavedOutput >::const_iterator
          it = this->_internal_saved_output().begin();
          it != this->_internal_saved_output().end(); ++it) {
        target = DataExample_SavedOutputEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated .Embedding embedding = 6 [(.heavy) = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_embedding_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_embedding(i), target, stream);
  }

  // .Image image_segment = 7 [(.heavy) = true];
  if (this->has_image_segment()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::image_segment(this), target, stream);
  }

  // .ResponseStatus status = 999 [(.heavy) = false];
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        999, _Internal::status(this), target, stream);
  }

  // repeated .Tag tag = 1000 [(.heavy) = false];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tag_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1000, this->_internal_tag(i), target, stream);
  }

  // repeated .BoundingBox bbox = 1002 [(.heavy) = false];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_bbox_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1002, this->_internal_bbox(i), target, stream);
  }

  // string json_metadata = 1003 [deprecated = true, (.heavy) = false];
  if (this->json_metadata().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_json_metadata().data(), static_cast<int>(this->_internal_json_metadata().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DataExample.json_metadata");
    target = stream->WriteStringMaybeAliased(
        1003, this->_internal_json_metadata(), target);
  }

  // .Geo geo = 1005 [(.heavy) = false];
  if (this->has_geo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1005, _Internal::geo(this), target, stream);
  }

  // repeated .Caption caption = 1007 [(.heavy) = false];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_caption_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1007, this->_internal_caption(i), target, stream);
  }

  // repeated .Region region = 1008 [(.heavy) = false];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_region_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1008, this->_internal_region(i), target, stream);
  }

  // repeated .Face face = 1009 [(.heavy) = false];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_face_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1009, this->_internal_face(i), target, stream);
  }

  // repeated .LOPQCode lopq_code = 1010 [(.heavy) = false];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_lopq_code_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1010, this->_internal_lopq_code(i), target, stream);
  }

  // .BlurResult blur_result = 1011 [(.heavy) = false];
  if (this->has_blur_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1011, _Internal::blur_result(this), target, stream);
  }

  // .ColorResult color_result = 1012 [(.heavy) = false];
  if (this->has_color_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1012, _Internal::color_result(this), target, stream);
  }

  // repeated .TimeFrame frame = 1013 [(.heavy) = false];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_frame_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1013, this->_internal_frame(i), target, stream);
  }

  // .Text text = 1015 [(.heavy) = true];
  if (this->has_text()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1015, _Internal::text(this), target, stream);
  }

  // .google.protobuf.Struct metadata = 1016 [(.heavy) = false];
  if (this->has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1016, _Internal::metadata(this), target, stream);
  }

  // .Audio audio = 1017 [(.heavy) = true];
  if (this->has_audio()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1017, _Internal::audio(this), target, stream);
  }

  // string cfid = 1100 [(.heavy) = false];
  if (this->cfid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cfid().data(), static_cast<int>(this->_internal_cfid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DataExample.cfid");
    target = stream->WriteStringMaybeAliased(
        1100, this->_internal_cfid(), target);
  }

  // string hash = 1101 [(.heavy) = false];
  if (this->hash().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hash().data(), static_cast<int>(this->_internal_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DataExample.hash");
    target = stream->WriteStringMaybeAliased(
        1101, this->_internal_hash(), target);
  }

  // string asset_id = 1102 [(.heavy) = false];
  if (this->asset_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_asset_id().data(), static_cast<int>(this->_internal_asset_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DataExample.asset_id");
    target = stream->WriteStringMaybeAliased(
        1102, this->_internal_asset_id(), target);
  }

  // string asset_cfid = 1103 [(.heavy) = false];
  if (this->asset_cfid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_asset_cfid().data(), static_cast<int>(this->_internal_asset_cfid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DataExample.asset_cfid");
    target = stream->WriteStringMaybeAliased(
        1103, this->_internal_asset_cfid(), target);
  }

  // .google.protobuf.Struct annotation_info = 1104 [(.heavy) = false];
  if (this->has_annotation_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1104, _Internal::annotation_info(this), target, stream);
  }

  // string dataset_name = 1105 [(.heavy) = false];
  if (this->dataset_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dataset_name().data(), static_cast<int>(this->_internal_dataset_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DataExample.dataset_name");
    target = stream->WriteStringMaybeAliased(
        1105, this->_internal_dataset_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataExample)
  return target;
}

size_t DataExample::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataExample)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .SavedOutput> saved_output = 5 [(.heavy) = true];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_saved_output_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::SavedOutput >::const_iterator
      it = this->_internal_saved_output().begin();
      it != this->_internal_saved_output().end(); ++it) {
    total_size += DataExample_SavedOutputEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated .Embedding embedding = 6 [(.heavy) = true];
  total_size += 1UL * this->_internal_embedding_size();
  for (const auto& msg : this->embedding_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .Tag tag = 1000 [(.heavy) = false];
  total_size += 2UL * this->_internal_tag_size();
  for (const auto& msg : this->tag_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .BoundingBox bbox = 1002 [(.heavy) = false];
  total_size += 2UL * this->_internal_bbox_size();
  for (const auto& msg : this->bbox_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .Caption caption = 1007 [(.heavy) = false];
  total_size += 2UL * this->_internal_caption_size();
  for (const auto& msg : this->caption_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .Region region = 1008 [(.heavy) = false];
  total_size += 2UL * this->_internal_region_size();
  for (const auto& msg : this->region_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .Face face = 1009 [(.heavy) = false];
  total_size += 2UL * this->_internal_face_size();
  for (const auto& msg : this->face_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .LOPQCode lopq_code = 1010 [(.heavy) = false];
  total_size += 2UL * this->_internal_lopq_code_size();
  for (const auto& msg : this->lopq_code_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .TimeFrame frame = 1013 [(.heavy) = false];
  total_size += 2UL * this->_internal_frame_size();
  for (const auto& msg : this->frame_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 1 [(.heavy) = false];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string json_metadata = 1003 [deprecated = true, (.heavy) = false];
  if (this->json_metadata().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_json_metadata());
  }

  // string cfid = 1100 [(.heavy) = false];
  if (this->cfid().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cfid());
  }

  // string hash = 1101 [(.heavy) = false];
  if (this->hash().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hash());
  }

  // string asset_id = 1102 [(.heavy) = false];
  if (this->asset_id().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_asset_id());
  }

  // string asset_cfid = 1103 [(.heavy) = false];
  if (this->asset_cfid().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_asset_cfid());
  }

  // string dataset_name = 1105 [(.heavy) = false];
  if (this->dataset_name().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dataset_name());
  }

  // .Image image = 2 [(.heavy) = true];
  if (this->has_image()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *image_);
  }

  // .Video video = 3 [(.heavy) = true];
  if (this->has_video()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *video_);
  }

  // .Image image_segment = 7 [(.heavy) = true];
  if (this->has_image_segment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *image_segment_);
  }

  // .ResponseStatus status = 999 [(.heavy) = false];
  if (this->has_status()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .Geo geo = 1005 [(.heavy) = false];
  if (this->has_geo()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *geo_);
  }

  // .BlurResult blur_result = 1011 [(.heavy) = false];
  if (this->has_blur_result()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *blur_result_);
  }

  // .ColorResult color_result = 1012 [(.heavy) = false];
  if (this->has_color_result()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *color_result_);
  }

  // .Text text = 1015 [(.heavy) = true];
  if (this->has_text()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.protobuf.Struct metadata = 1016 [(.heavy) = false];
  if (this->has_metadata()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  // .Audio audio = 1017 [(.heavy) = true];
  if (this->has_audio()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *audio_);
  }

  // .google.protobuf.Struct annotation_info = 1104 [(.heavy) = false];
  if (this->has_annotation_info()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *annotation_info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataExample::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataExample)
  GOOGLE_DCHECK_NE(&from, this);
  const DataExample* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DataExample>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataExample)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataExample)
    MergeFrom(*source);
  }
}

void DataExample::MergeFrom(const DataExample& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataExample)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  saved_output_.MergeFrom(from.saved_output_);
  embedding_.MergeFrom(from.embedding_);
  tag_.MergeFrom(from.tag_);
  bbox_.MergeFrom(from.bbox_);
  caption_.MergeFrom(from.caption_);
  region_.MergeFrom(from.region_);
  face_.MergeFrom(from.face_);
  lopq_code_.MergeFrom(from.lopq_code_);
  frame_.MergeFrom(from.frame_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.json_metadata().size() > 0) {
    _internal_set_json_metadata(from._internal_json_metadata());
  }
  if (from.cfid().size() > 0) {
    _internal_set_cfid(from._internal_cfid());
  }
  if (from.hash().size() > 0) {
    _internal_set_hash(from._internal_hash());
  }
  if (from.asset_id().size() > 0) {
    _internal_set_asset_id(from._internal_asset_id());
  }
  if (from.asset_cfid().size() > 0) {
    _internal_set_asset_cfid(from._internal_asset_cfid());
  }
  if (from.dataset_name().size() > 0) {
    _internal_set_dataset_name(from._internal_dataset_name());
  }
  if (from.has_image()) {
    _internal_mutable_image()->::Image::MergeFrom(from._internal_image());
  }
  if (from.has_video()) {
    _internal_mutable_video()->::Video::MergeFrom(from._internal_video());
  }
  if (from.has_image_segment()) {
    _internal_mutable_image_segment()->::Image::MergeFrom(from._internal_image_segment());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::ResponseStatus::MergeFrom(from._internal_status());
  }
  if (from.has_geo()) {
    _internal_mutable_geo()->::Geo::MergeFrom(from._internal_geo());
  }
  if (from.has_blur_result()) {
    _internal_mutable_blur_result()->::BlurResult::MergeFrom(from._internal_blur_result());
  }
  if (from.has_color_result()) {
    _internal_mutable_color_result()->::ColorResult::MergeFrom(from._internal_color_result());
  }
  if (from.has_text()) {
    _internal_mutable_text()->::Text::MergeFrom(from._internal_text());
  }
  if (from.has_metadata()) {
    _internal_mutable_metadata()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_metadata());
  }
  if (from.has_audio()) {
    _internal_mutable_audio()->::Audio::MergeFrom(from._internal_audio());
  }
  if (from.has_annotation_info()) {
    _internal_mutable_annotation_info()->PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_annotation_info());
  }
}

void DataExample::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataExample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataExample::CopyFrom(const DataExample& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataExample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataExample::IsInitialized() const {
  return true;
}

void DataExample::InternalSwap(DataExample* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  saved_output_.Swap(&other->saved_output_);
  embedding_.InternalSwap(&other->embedding_);
  tag_.InternalSwap(&other->tag_);
  bbox_.InternalSwap(&other->bbox_);
  caption_.InternalSwap(&other->caption_);
  region_.InternalSwap(&other->region_);
  face_.InternalSwap(&other->face_);
  lopq_code_.InternalSwap(&other->lopq_code_);
  frame_.InternalSwap(&other->frame_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  json_metadata_.Swap(&other->json_metadata_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  cfid_.Swap(&other->cfid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  hash_.Swap(&other->hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  asset_id_.Swap(&other->asset_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  asset_cfid_.Swap(&other->asset_cfid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dataset_name_.Swap(&other->dataset_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DataExample, annotation_info_)
      + sizeof(DataExample::annotation_info_)
      - PROTOBUF_FIELD_OFFSET(DataExample, image_)>(
          reinterpret_cast<char*>(&image_),
          reinterpret_cast<char*>(&other->image_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DataExample::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Region_RegionInfo::InitAsDefaultInstance() {
  ::_Region_RegionInfo_default_instance_._instance.get_mutable()->bounding_box_ = const_cast< ::BBox*>(
      ::BBox::internal_default_instance());
  ::_Region_RegionInfo_default_instance_._instance.get_mutable()->point_ = const_cast< ::Point*>(
      ::Point::internal_default_instance());
}
class Region_RegionInfo::_Internal {
 public:
  static const ::BBox& bounding_box(const Region_RegionInfo* msg);
  static const ::Point& point(const Region_RegionInfo* msg);
};

const ::BBox&
Region_RegionInfo::_Internal::bounding_box(const Region_RegionInfo* msg) {
  return *msg->bounding_box_;
}
const ::Point&
Region_RegionInfo::_Internal::point(const Region_RegionInfo* msg) {
  return *msg->point_;
}
void Region_RegionInfo::clear_bounding_box() {
  if (GetArena() == nullptr && bounding_box_ != nullptr) {
    delete bounding_box_;
  }
  bounding_box_ = nullptr;
}
void Region_RegionInfo::clear_point() {
  if (GetArena() == nullptr && point_ != nullptr) {
    delete point_;
  }
  point_ = nullptr;
}
Region_RegionInfo::Region_RegionInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Region.RegionInfo)
}
Region_RegionInfo::Region_RegionInfo(const Region_RegionInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mask_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mask().empty()) {
    mask_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mask(),
      GetArena());
  }
  if (from._internal_has_bounding_box()) {
    bounding_box_ = new ::BBox(*from.bounding_box_);
  } else {
    bounding_box_ = nullptr;
  }
  if (from._internal_has_point()) {
    point_ = new ::Point(*from.point_);
  } else {
    point_ = nullptr;
  }
  relative_to_ = from.relative_to_;
  // @@protoc_insertion_point(copy_constructor:Region.RegionInfo)
}

void Region_RegionInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Region_RegionInfo_proto_2futils_2fdata_5fexample_2eproto.base);
  mask_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&bounding_box_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&relative_to_) -
      reinterpret_cast<char*>(&bounding_box_)) + sizeof(relative_to_));
}

Region_RegionInfo::~Region_RegionInfo() {
  // @@protoc_insertion_point(destructor:Region.RegionInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Region_RegionInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mask_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete bounding_box_;
  if (this != internal_default_instance()) delete point_;
}

void Region_RegionInfo::ArenaDtor(void* object) {
  Region_RegionInfo* _this = reinterpret_cast< Region_RegionInfo* >(object);
  (void)_this;
}
void Region_RegionInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Region_RegionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Region_RegionInfo& Region_RegionInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Region_RegionInfo_proto_2futils_2fdata_5fexample_2eproto.base);
  return *internal_default_instance();
}


void Region_RegionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Region.RegionInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mask_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && bounding_box_ != nullptr) {
    delete bounding_box_;
  }
  bounding_box_ = nullptr;
  if (GetArena() == nullptr && point_ != nullptr) {
    delete point_;
  }
  point_ = nullptr;
  relative_to_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Region_RegionInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BBox bounding_box = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_bounding_box(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_mask();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Point point = 3 [(.heavy) = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_point(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 relative_to = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          relative_to_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Region_RegionInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Region.RegionInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BBox bounding_box = 1;
  if (this->has_bounding_box()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::bounding_box(this), target, stream);
  }

  // bytes mask = 2;
  if (this->mask().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_mask(), target);
  }

  // .Point point = 3 [(.heavy) = false];
  if (this->has_point()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::point(this), target, stream);
  }

  // int32 relative_to = 4;
  if (this->relative_to() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_relative_to(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Region.RegionInfo)
  return target;
}

size_t Region_RegionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Region.RegionInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes mask = 2;
  if (this->mask().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_mask());
  }

  // .BBox bounding_box = 1;
  if (this->has_bounding_box()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bounding_box_);
  }

  // .Point point = 3 [(.heavy) = false];
  if (this->has_point()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *point_);
  }

  // int32 relative_to = 4;
  if (this->relative_to() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_relative_to());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Region_RegionInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Region.RegionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Region_RegionInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Region_RegionInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Region.RegionInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Region.RegionInfo)
    MergeFrom(*source);
  }
}

void Region_RegionInfo::MergeFrom(const Region_RegionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Region.RegionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mask().size() > 0) {
    _internal_set_mask(from._internal_mask());
  }
  if (from.has_bounding_box()) {
    _internal_mutable_bounding_box()->::BBox::MergeFrom(from._internal_bounding_box());
  }
  if (from.has_point()) {
    _internal_mutable_point()->::Point::MergeFrom(from._internal_point());
  }
  if (from.relative_to() != 0) {
    _internal_set_relative_to(from._internal_relative_to());
  }
}

void Region_RegionInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Region.RegionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Region_RegionInfo::CopyFrom(const Region_RegionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Region.RegionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Region_RegionInfo::IsInitialized() const {
  return true;
}

void Region_RegionInfo::InternalSwap(Region_RegionInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mask_.Swap(&other->mask_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Region_RegionInfo, relative_to_)
      + sizeof(Region_RegionInfo::relative_to_)
      - PROTOBUF_FIELD_OFFSET(Region_RegionInfo, bounding_box_)>(
          reinterpret_cast<char*>(&bounding_box_),
          reinterpret_cast<char*>(&other->bounding_box_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Region_RegionInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Region::InitAsDefaultInstance() {
  ::_Region_default_instance_._instance.get_mutable()->region_info_ = const_cast< ::Region_RegionInfo*>(
      ::Region_RegionInfo::internal_default_instance());
  ::_Region_default_instance_._instance.get_mutable()->data_ = const_cast< ::DataExample*>(
      ::DataExample::internal_default_instance());
}
class Region::_Internal {
 public:
  static const ::Region_RegionInfo& region_info(const Region* msg);
  static const ::DataExample& data(const Region* msg);
};

const ::Region_RegionInfo&
Region::_Internal::region_info(const Region* msg) {
  return *msg->region_info_;
}
const ::DataExample&
Region::_Internal::data(const Region* msg) {
  return *msg->data_;
}
Region::Region(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Region)
}
Region::Region(const Region& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  if (from._internal_has_region_info()) {
    region_info_ = new ::Region_RegionInfo(*from.region_info_);
  } else {
    region_info_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::DataExample(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Region)
}

void Region::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DataExample_proto_2futils_2fdata_5fexample_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&region_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&region_info_)) + sizeof(data_));
}

Region::~Region() {
  // @@protoc_insertion_point(destructor:Region)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Region::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete region_info_;
  if (this != internal_default_instance()) delete data_;
}

void Region::ArenaDtor(void* object) {
  Region* _this = reinterpret_cast< Region* >(object);
  (void)_this;
}
void Region::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Region::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Region& Region::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DataExample_proto_2futils_2fdata_5fexample_2eproto.base);
  return *internal_default_instance();
}


void Region::Clear() {
// @@protoc_insertion_point(message_clear_start:Region)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && region_info_ != nullptr) {
    delete region_info_;
  }
  region_info_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Region::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1 [(.heavy) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Region.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Region.RegionInfo region_info = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_region_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .DataExample data = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Region::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Region)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.heavy) = false];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Region.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .Region.RegionInfo region_info = 11;
  if (this->has_region_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::region_info(this), target, stream);
  }

  // .DataExample data = 12;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Region)
  return target;
}

size_t Region::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Region)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.heavy) = false];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .Region.RegionInfo region_info = 11;
  if (this->has_region_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *region_info_);
  }

  // .DataExample data = 12;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Region::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Region)
  GOOGLE_DCHECK_NE(&from, this);
  const Region* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Region>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Region)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Region)
    MergeFrom(*source);
  }
}

void Region::MergeFrom(const Region& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Region)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.has_region_info()) {
    _internal_mutable_region_info()->::Region_RegionInfo::MergeFrom(from._internal_region_info());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::DataExample::MergeFrom(from._internal_data());
  }
}

void Region::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Region)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Region::CopyFrom(const Region& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Region)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Region::IsInitialized() const {
  return true;
}

void Region::InternalSwap(Region* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Region, data_)
      + sizeof(Region::data_)
      - PROTOBUF_FIELD_OFFSET(Region, region_info_)>(
          reinterpret_cast<char*>(&region_info_),
          reinterpret_cast<char*>(&other->region_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Region::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TimeFrame_FrameInfo::InitAsDefaultInstance() {
  ::_TimeFrame_FrameInfo_default_instance_._instance.get_mutable()->time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class TimeFrame_FrameInfo::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& time(const TimeFrame_FrameInfo* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
TimeFrame_FrameInfo::_Internal::time(const TimeFrame_FrameInfo* msg) {
  return *msg->time_;
}
void TimeFrame_FrameInfo::clear_time() {
  if (GetArena() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
}
TimeFrame_FrameInfo::TimeFrame_FrameInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TimeFrame.FrameInfo)
}
TimeFrame_FrameInfo::TimeFrame_FrameInfo(const TimeFrame_FrameInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_time()) {
    time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.time_);
  } else {
    time_ = nullptr;
  }
  num_ = from.num_;
  // @@protoc_insertion_point(copy_constructor:TimeFrame.FrameInfo)
}

void TimeFrame_FrameInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TimeFrame_FrameInfo_proto_2futils_2fdata_5fexample_2eproto.base);
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&time_)) + sizeof(num_));
}

TimeFrame_FrameInfo::~TimeFrame_FrameInfo() {
  // @@protoc_insertion_point(destructor:TimeFrame.FrameInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TimeFrame_FrameInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete time_;
}

void TimeFrame_FrameInfo::ArenaDtor(void* object) {
  TimeFrame_FrameInfo* _this = reinterpret_cast< TimeFrame_FrameInfo* >(object);
  (void)_this;
}
void TimeFrame_FrameInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TimeFrame_FrameInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TimeFrame_FrameInfo& TimeFrame_FrameInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TimeFrame_FrameInfo_proto_2futils_2fdata_5fexample_2eproto.base);
  return *internal_default_instance();
}


void TimeFrame_FrameInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:TimeFrame.FrameInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
  num_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TimeFrame_FrameInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 num = 1 [(.clarifai.api.utils.cl_show_if_empty) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TimeFrame_FrameInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TimeFrame.FrameInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num = 1 [(.clarifai.api.utils.cl_show_if_empty) = true];
  if (this->num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_num(), target);
  }

  // .google.protobuf.Timestamp time = 2;
  if (this->has_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::time(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TimeFrame.FrameInfo)
  return target;
}

size_t TimeFrame_FrameInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TimeFrame.FrameInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp time = 2;
  if (this->has_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *time_);
  }

  // int32 num = 1 [(.clarifai.api.utils.cl_show_if_empty) = true];
  if (this->num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TimeFrame_FrameInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TimeFrame.FrameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeFrame_FrameInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TimeFrame_FrameInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TimeFrame.FrameInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TimeFrame.FrameInfo)
    MergeFrom(*source);
  }
}

void TimeFrame_FrameInfo::MergeFrom(const TimeFrame_FrameInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TimeFrame.FrameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_time()) {
    _internal_mutable_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_time());
  }
  if (from.num() != 0) {
    _internal_set_num(from._internal_num());
  }
}

void TimeFrame_FrameInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TimeFrame.FrameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeFrame_FrameInfo::CopyFrom(const TimeFrame_FrameInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TimeFrame.FrameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeFrame_FrameInfo::IsInitialized() const {
  return true;
}

void TimeFrame_FrameInfo::InternalSwap(TimeFrame_FrameInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TimeFrame_FrameInfo, num_)
      + sizeof(TimeFrame_FrameInfo::num_)
      - PROTOBUF_FIELD_OFFSET(TimeFrame_FrameInfo, time_)>(
          reinterpret_cast<char*>(&time_),
          reinterpret_cast<char*>(&other->time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TimeFrame_FrameInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TimeFrame::InitAsDefaultInstance() {
  ::_TimeFrame_default_instance_._instance.get_mutable()->frame_info_ = const_cast< ::TimeFrame_FrameInfo*>(
      ::TimeFrame_FrameInfo::internal_default_instance());
  ::_TimeFrame_default_instance_._instance.get_mutable()->data_ = const_cast< ::DataExample*>(
      ::DataExample::internal_default_instance());
}
class TimeFrame::_Internal {
 public:
  static const ::TimeFrame_FrameInfo& frame_info(const TimeFrame* msg);
  static const ::DataExample& data(const TimeFrame* msg);
};

const ::TimeFrame_FrameInfo&
TimeFrame::_Internal::frame_info(const TimeFrame* msg) {
  return *msg->frame_info_;
}
const ::DataExample&
TimeFrame::_Internal::data(const TimeFrame* msg) {
  return *msg->data_;
}
TimeFrame::TimeFrame(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TimeFrame)
}
TimeFrame::TimeFrame(const TimeFrame& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  if (from._internal_has_frame_info()) {
    frame_info_ = new ::TimeFrame_FrameInfo(*from.frame_info_);
  } else {
    frame_info_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::DataExample(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:TimeFrame)
}

void TimeFrame::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DataExample_proto_2futils_2fdata_5fexample_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&frame_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&frame_info_)) + sizeof(data_));
}

TimeFrame::~TimeFrame() {
  // @@protoc_insertion_point(destructor:TimeFrame)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TimeFrame::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete frame_info_;
  if (this != internal_default_instance()) delete data_;
}

void TimeFrame::ArenaDtor(void* object) {
  TimeFrame* _this = reinterpret_cast< TimeFrame* >(object);
  (void)_this;
}
void TimeFrame::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TimeFrame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TimeFrame& TimeFrame::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DataExample_proto_2futils_2fdata_5fexample_2eproto.base);
  return *internal_default_instance();
}


void TimeFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:TimeFrame)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && frame_info_ != nullptr) {
    delete frame_info_;
  }
  frame_info_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TimeFrame::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1 [(.heavy) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TimeFrame.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .TimeFrame.FrameInfo frame_info = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_frame_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .DataExample data = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TimeFrame::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TimeFrame)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.heavy) = false];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TimeFrame.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .TimeFrame.FrameInfo frame_info = 11;
  if (this->has_frame_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::frame_info(this), target, stream);
  }

  // .DataExample data = 12;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TimeFrame)
  return target;
}

size_t TimeFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TimeFrame)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.heavy) = false];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .TimeFrame.FrameInfo frame_info = 11;
  if (this->has_frame_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *frame_info_);
  }

  // .DataExample data = 12;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TimeFrame::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TimeFrame)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeFrame* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TimeFrame>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TimeFrame)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TimeFrame)
    MergeFrom(*source);
  }
}

void TimeFrame::MergeFrom(const TimeFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TimeFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.has_frame_info()) {
    _internal_mutable_frame_info()->::TimeFrame_FrameInfo::MergeFrom(from._internal_frame_info());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::DataExample::MergeFrom(from._internal_data());
  }
}

void TimeFrame::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TimeFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeFrame::CopyFrom(const TimeFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TimeFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeFrame::IsInitialized() const {
  return true;
}

void TimeFrame::InternalSwap(TimeFrame* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TimeFrame, data_)
      + sizeof(TimeFrame::data_)
      - PROTOBUF_FIELD_OFFSET(TimeFrame, frame_info_)>(
          reinterpret_cast<char*>(&frame_info_),
          reinterpret_cast<char*>(&other->frame_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TimeFrame::GetMetadata() const {
  return GetMetadataStatic();
}

::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  heavy(kHeavyFieldNumber, false);

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::DataExample_SavedOutputEntry_DoNotUse* Arena::CreateMaybeMessage< ::DataExample_SavedOutputEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DataExample_SavedOutputEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::DataExample* Arena::CreateMaybeMessage< ::DataExample >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DataExample >(arena);
}
template<> PROTOBUF_NOINLINE ::Region_RegionInfo* Arena::CreateMaybeMessage< ::Region_RegionInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Region_RegionInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Region* Arena::CreateMaybeMessage< ::Region >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Region >(arena);
}
template<> PROTOBUF_NOINLINE ::TimeFrame_FrameInfo* Arena::CreateMaybeMessage< ::TimeFrame_FrameInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TimeFrame_FrameInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::TimeFrame* Arena::CreateMaybeMessage< ::TimeFrame >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TimeFrame >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
