// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/utils/checkpoint.proto

#include "proto/utils/checkpoint.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fcheckpoint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ModelBytes_proto_2futils_2fcheckpoint_2eproto;
class LoadCheckpointScopeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoadCheckpointScope> _instance;
  ::PROTOBUF_NAMESPACE_ID::int64 eid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr checkpoint_;
  const ::ModelBytes* model_bytes_;
} _LoadCheckpointScope_default_instance_;
class ModelBytesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelBytes> _instance;
} _ModelBytes_default_instance_;
static void InitDefaultsscc_info_LoadCheckpointScope_proto_2futils_2fcheckpoint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_LoadCheckpointScope_default_instance_;
    new (ptr) ::LoadCheckpointScope();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LoadCheckpointScope::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LoadCheckpointScope_proto_2futils_2fcheckpoint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LoadCheckpointScope_proto_2futils_2fcheckpoint_2eproto}, {
      &scc_info_ModelBytes_proto_2futils_2fcheckpoint_2eproto.base,}};

static void InitDefaultsscc_info_ModelBytes_proto_2futils_2fcheckpoint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ModelBytes_default_instance_;
    new (ptr) ::ModelBytes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ModelBytes::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ModelBytes_proto_2futils_2fcheckpoint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ModelBytes_proto_2futils_2fcheckpoint_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2futils_2fcheckpoint_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_proto_2futils_2fcheckpoint_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2futils_2fcheckpoint_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2futils_2fcheckpoint_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LoadCheckpointScope, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::LoadCheckpointScope, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::LoadCheckpointScopeDefaultTypeInternal, eid_),
  offsetof(::LoadCheckpointScopeDefaultTypeInternal, checkpoint_),
  offsetof(::LoadCheckpointScopeDefaultTypeInternal, model_bytes_),
  PROTOBUF_FIELD_OFFSET(::LoadCheckpointScope, regex_),
  PROTOBUF_FIELD_OFFSET(::LoadCheckpointScope, checkpoint_regex_),
  PROTOBUF_FIELD_OFFSET(::LoadCheckpointScope, exclude_regex_),
  PROTOBUF_FIELD_OFFSET(::LoadCheckpointScope, skip_missing_),
  PROTOBUF_FIELD_OFFSET(::LoadCheckpointScope, source_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ModelBytes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ModelBytes, frozen_meta_graph_),
  PROTOBUF_FIELD_OFFSET(::ModelBytes, mmapped_graph_def_),
  PROTOBUF_FIELD_OFFSET(::ModelBytes, model_format_),
  PROTOBUF_FIELD_OFFSET(::ModelBytes, serialized_trace_),
  PROTOBUF_FIELD_OFFSET(::ModelBytes, device_type_),
  PROTOBUF_FIELD_OFFSET(::ModelBytes, model_module_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::LoadCheckpointScope)},
  { 13, -1, sizeof(::ModelBytes)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_LoadCheckpointScope_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ModelBytes_default_instance_),
};

const char descriptor_table_protodef_proto_2futils_2fcheckpoint_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034proto/utils/checkpoint.proto\"\276\001\n\023LoadC"
  "heckpointScope\022\r\n\003eid\030\001 \001(\003H\000\022\024\n\ncheckpo"
  "int\030\002 \001(\tH\000\022\"\n\013model_bytes\030\007 \001(\0132\013.Model"
  "BytesH\000\022\r\n\005regex\030\003 \001(\t\022\030\n\020checkpoint_reg"
  "ex\030\004 \001(\t\022\025\n\rexclude_regex\030\005 \001(\t\022\024\n\014skip_"
  "missing\030\006 \001(\010B\010\n\006source\"\253\001\n\nModelBytes\022\031"
  "\n\021frozen_meta_graph\030\001 \001(\014\022\031\n\021mmapped_gra"
  "ph_def\030\002 \001(\014\022\"\n\014model_format\030\003 \001(\0162\014.Mod"
  "elFormat\022\030\n\020serialized_trace\030\004 \001(\014\022\023\n\013de"
  "vice_type\030\005 \001(\t\022\024\n\014model_module\030\006 \001(\t*w\n"
  "\013ModelFormat\022\n\n\006NotSet\020\000\022\016\n\nTensorFlow\020\001"
  "\022\r\n\tAmbarella\020\002\022\014\n\010TensorRT\020\003\022\022\n\016TensorF"
  "lowLite\020\004\022\016\n\nTF_STRAITE\020\005\022\013\n\007PyTorch\020\006B\016"
  "\n\005utilsZ\005utilsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2futils_2fcheckpoint_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2futils_2fcheckpoint_2eproto_sccs[2] = {
  &scc_info_LoadCheckpointScope_proto_2futils_2fcheckpoint_2eproto.base,
  &scc_info_ModelBytes_proto_2futils_2fcheckpoint_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2futils_2fcheckpoint_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2futils_2fcheckpoint_2eproto = {
  false, false, descriptor_table_protodef_proto_2futils_2fcheckpoint_2eproto, "proto/utils/checkpoint.proto", 542,
  &descriptor_table_proto_2futils_2fcheckpoint_2eproto_once, descriptor_table_proto_2futils_2fcheckpoint_2eproto_sccs, descriptor_table_proto_2futils_2fcheckpoint_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_proto_2futils_2fcheckpoint_2eproto::offsets,
  file_level_metadata_proto_2futils_2fcheckpoint_2eproto, 2, file_level_enum_descriptors_proto_2futils_2fcheckpoint_2eproto, file_level_service_descriptors_proto_2futils_2fcheckpoint_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2futils_2fcheckpoint_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2futils_2fcheckpoint_2eproto)), true);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ModelFormat_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proto_2futils_2fcheckpoint_2eproto);
  return file_level_enum_descriptors_proto_2futils_2fcheckpoint_2eproto[0];
}
bool ModelFormat_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void LoadCheckpointScope::InitAsDefaultInstance() {
  ::_LoadCheckpointScope_default_instance_.eid_ = PROTOBUF_LONGLONG(0);
  ::_LoadCheckpointScope_default_instance_.checkpoint_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::_LoadCheckpointScope_default_instance_.model_bytes_ = const_cast< ::ModelBytes*>(
      ::ModelBytes::internal_default_instance());
}
class LoadCheckpointScope::_Internal {
 public:
  static const ::ModelBytes& model_bytes(const LoadCheckpointScope* msg);
};

const ::ModelBytes&
LoadCheckpointScope::_Internal::model_bytes(const LoadCheckpointScope* msg) {
  return *msg->source_.model_bytes_;
}
void LoadCheckpointScope::set_allocated_model_bytes(::ModelBytes* model_bytes) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_source();
  if (model_bytes) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(model_bytes);
    if (message_arena != submessage_arena) {
      model_bytes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, model_bytes, submessage_arena);
    }
    set_has_model_bytes();
    source_.model_bytes_ = model_bytes;
  }
  // @@protoc_insertion_point(field_set_allocated:LoadCheckpointScope.model_bytes)
}
LoadCheckpointScope::LoadCheckpointScope(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:LoadCheckpointScope)
}
LoadCheckpointScope::LoadCheckpointScope(const LoadCheckpointScope& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  regex_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_regex().empty()) {
    regex_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_regex(),
      GetArena());
  }
  checkpoint_regex_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_checkpoint_regex().empty()) {
    checkpoint_regex_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_checkpoint_regex(),
      GetArena());
  }
  exclude_regex_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_exclude_regex().empty()) {
    exclude_regex_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_exclude_regex(),
      GetArena());
  }
  skip_missing_ = from.skip_missing_;
  clear_has_source();
  switch (from.source_case()) {
    case kEid: {
      _internal_set_eid(from._internal_eid());
      break;
    }
    case kCheckpoint: {
      _internal_set_checkpoint(from._internal_checkpoint());
      break;
    }
    case kModelBytes: {
      _internal_mutable_model_bytes()->::ModelBytes::MergeFrom(from._internal_model_bytes());
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:LoadCheckpointScope)
}

void LoadCheckpointScope::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoadCheckpointScope_proto_2futils_2fcheckpoint_2eproto.base);
  regex_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  checkpoint_regex_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  exclude_regex_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  skip_missing_ = false;
  clear_has_source();
}

LoadCheckpointScope::~LoadCheckpointScope() {
  // @@protoc_insertion_point(destructor:LoadCheckpointScope)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoadCheckpointScope::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  regex_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  checkpoint_regex_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  exclude_regex_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_source()) {
    clear_source();
  }
}

void LoadCheckpointScope::ArenaDtor(void* object) {
  LoadCheckpointScope* _this = reinterpret_cast< LoadCheckpointScope* >(object);
  (void)_this;
}
void LoadCheckpointScope::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoadCheckpointScope::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadCheckpointScope& LoadCheckpointScope::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoadCheckpointScope_proto_2futils_2fcheckpoint_2eproto.base);
  return *internal_default_instance();
}


void LoadCheckpointScope::clear_source() {
// @@protoc_insertion_point(one_of_clear_start:LoadCheckpointScope)
  switch (source_case()) {
    case kEid: {
      // No need to clear
      break;
    }
    case kCheckpoint: {
      source_.checkpoint_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kModelBytes: {
      if (GetArena() == nullptr) {
        delete source_.model_bytes_;
      }
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SOURCE_NOT_SET;
}


void LoadCheckpointScope::Clear() {
// @@protoc_insertion_point(message_clear_start:LoadCheckpointScope)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  regex_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  checkpoint_regex_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  exclude_regex_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  skip_missing_ = false;
  clear_source();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadCheckpointScope::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 eid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _internal_set_eid(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string checkpoint = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_checkpoint();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "LoadCheckpointScope.checkpoint"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string regex = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_regex();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "LoadCheckpointScope.regex"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string checkpoint_regex = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_checkpoint_regex();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "LoadCheckpointScope.checkpoint_regex"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string exclude_regex = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_exclude_regex();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "LoadCheckpointScope.exclude_regex"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool skip_missing = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          skip_missing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ModelBytes model_bytes = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_model_bytes(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoadCheckpointScope::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LoadCheckpointScope)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 eid = 1;
  if (_internal_has_eid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_eid(), target);
  }

  // string checkpoint = 2;
  if (_internal_has_checkpoint()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_checkpoint().data(), static_cast<int>(this->_internal_checkpoint().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "LoadCheckpointScope.checkpoint");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_checkpoint(), target);
  }

  // string regex = 3;
  if (this->regex().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_regex().data(), static_cast<int>(this->_internal_regex().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "LoadCheckpointScope.regex");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_regex(), target);
  }

  // string checkpoint_regex = 4;
  if (this->checkpoint_regex().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_checkpoint_regex().data(), static_cast<int>(this->_internal_checkpoint_regex().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "LoadCheckpointScope.checkpoint_regex");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_checkpoint_regex(), target);
  }

  // string exclude_regex = 5;
  if (this->exclude_regex().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_exclude_regex().data(), static_cast<int>(this->_internal_exclude_regex().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "LoadCheckpointScope.exclude_regex");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_exclude_regex(), target);
  }

  // bool skip_missing = 6;
  if (this->skip_missing() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_skip_missing(), target);
  }

  // .ModelBytes model_bytes = 7;
  if (_internal_has_model_bytes()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::model_bytes(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoadCheckpointScope)
  return target;
}

size_t LoadCheckpointScope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoadCheckpointScope)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string regex = 3;
  if (this->regex().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_regex());
  }

  // string checkpoint_regex = 4;
  if (this->checkpoint_regex().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_checkpoint_regex());
  }

  // string exclude_regex = 5;
  if (this->exclude_regex().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_exclude_regex());
  }

  // bool skip_missing = 6;
  if (this->skip_missing() != 0) {
    total_size += 1 + 1;
  }

  switch (source_case()) {
    // int64 eid = 1;
    case kEid: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_eid());
      break;
    }
    // string checkpoint = 2;
    case kCheckpoint: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_checkpoint());
      break;
    }
    // .ModelBytes model_bytes = 7;
    case kModelBytes: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *source_.model_bytes_);
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadCheckpointScope::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoadCheckpointScope)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadCheckpointScope* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoadCheckpointScope>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoadCheckpointScope)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoadCheckpointScope)
    MergeFrom(*source);
  }
}

void LoadCheckpointScope::MergeFrom(const LoadCheckpointScope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoadCheckpointScope)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.regex().size() > 0) {
    _internal_set_regex(from._internal_regex());
  }
  if (from.checkpoint_regex().size() > 0) {
    _internal_set_checkpoint_regex(from._internal_checkpoint_regex());
  }
  if (from.exclude_regex().size() > 0) {
    _internal_set_exclude_regex(from._internal_exclude_regex());
  }
  if (from.skip_missing() != 0) {
    _internal_set_skip_missing(from._internal_skip_missing());
  }
  switch (from.source_case()) {
    case kEid: {
      _internal_set_eid(from._internal_eid());
      break;
    }
    case kCheckpoint: {
      _internal_set_checkpoint(from._internal_checkpoint());
      break;
    }
    case kModelBytes: {
      _internal_mutable_model_bytes()->::ModelBytes::MergeFrom(from._internal_model_bytes());
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
}

void LoadCheckpointScope::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoadCheckpointScope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadCheckpointScope::CopyFrom(const LoadCheckpointScope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoadCheckpointScope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadCheckpointScope::IsInitialized() const {
  return true;
}

void LoadCheckpointScope::InternalSwap(LoadCheckpointScope* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  regex_.Swap(&other->regex_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  checkpoint_regex_.Swap(&other->checkpoint_regex_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  exclude_regex_.Swap(&other->exclude_regex_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(skip_missing_, other->skip_missing_);
  swap(source_, other->source_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadCheckpointScope::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ModelBytes::InitAsDefaultInstance() {
}
class ModelBytes::_Internal {
 public:
};

ModelBytes::ModelBytes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ModelBytes)
}
ModelBytes::ModelBytes(const ModelBytes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  frozen_meta_graph_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_frozen_meta_graph().empty()) {
    frozen_meta_graph_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_frozen_meta_graph(),
      GetArena());
  }
  mmapped_graph_def_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mmapped_graph_def().empty()) {
    mmapped_graph_def_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mmapped_graph_def(),
      GetArena());
  }
  serialized_trace_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_serialized_trace().empty()) {
    serialized_trace_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_serialized_trace(),
      GetArena());
  }
  device_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_device_type().empty()) {
    device_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_device_type(),
      GetArena());
  }
  model_module_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_model_module().empty()) {
    model_module_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_model_module(),
      GetArena());
  }
  model_format_ = from.model_format_;
  // @@protoc_insertion_point(copy_constructor:ModelBytes)
}

void ModelBytes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModelBytes_proto_2futils_2fcheckpoint_2eproto.base);
  frozen_meta_graph_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mmapped_graph_def_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  serialized_trace_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  device_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_module_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_format_ = 0;
}

ModelBytes::~ModelBytes() {
  // @@protoc_insertion_point(destructor:ModelBytes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ModelBytes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  frozen_meta_graph_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mmapped_graph_def_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  serialized_trace_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  device_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_module_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ModelBytes::ArenaDtor(void* object) {
  ModelBytes* _this = reinterpret_cast< ModelBytes* >(object);
  (void)_this;
}
void ModelBytes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelBytes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelBytes& ModelBytes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelBytes_proto_2futils_2fcheckpoint_2eproto.base);
  return *internal_default_instance();
}


void ModelBytes::Clear() {
// @@protoc_insertion_point(message_clear_start:ModelBytes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frozen_meta_graph_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mmapped_graph_def_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  serialized_trace_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  device_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  model_module_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  model_format_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelBytes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes frozen_meta_graph = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_frozen_meta_graph();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes mmapped_graph_def = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_mmapped_graph_def();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ModelFormat model_format = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_model_format(static_cast<::ModelFormat>(val));
        } else goto handle_unusual;
        continue;
      // bytes serialized_trace = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_serialized_trace();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string device_type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_device_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ModelBytes.device_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string model_module = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_model_module();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ModelBytes.model_module"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelBytes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ModelBytes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes frozen_meta_graph = 1;
  if (this->frozen_meta_graph().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_frozen_meta_graph(), target);
  }

  // bytes mmapped_graph_def = 2;
  if (this->mmapped_graph_def().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_mmapped_graph_def(), target);
  }

  // .ModelFormat model_format = 3;
  if (this->model_format() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_model_format(), target);
  }

  // bytes serialized_trace = 4;
  if (this->serialized_trace().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_serialized_trace(), target);
  }

  // string device_type = 5;
  if (this->device_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_device_type().data(), static_cast<int>(this->_internal_device_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ModelBytes.device_type");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_device_type(), target);
  }

  // string model_module = 6;
  if (this->model_module().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_module().data(), static_cast<int>(this->_internal_model_module().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ModelBytes.model_module");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_model_module(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ModelBytes)
  return target;
}

size_t ModelBytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ModelBytes)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes frozen_meta_graph = 1;
  if (this->frozen_meta_graph().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_frozen_meta_graph());
  }

  // bytes mmapped_graph_def = 2;
  if (this->mmapped_graph_def().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_mmapped_graph_def());
  }

  // bytes serialized_trace = 4;
  if (this->serialized_trace().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_serialized_trace());
  }

  // string device_type = 5;
  if (this->device_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_device_type());
  }

  // string model_module = 6;
  if (this->model_module().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_module());
  }

  // .ModelFormat model_format = 3;
  if (this->model_format() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_model_format());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelBytes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ModelBytes)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelBytes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelBytes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ModelBytes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ModelBytes)
    MergeFrom(*source);
  }
}

void ModelBytes::MergeFrom(const ModelBytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ModelBytes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.frozen_meta_graph().size() > 0) {
    _internal_set_frozen_meta_graph(from._internal_frozen_meta_graph());
  }
  if (from.mmapped_graph_def().size() > 0) {
    _internal_set_mmapped_graph_def(from._internal_mmapped_graph_def());
  }
  if (from.serialized_trace().size() > 0) {
    _internal_set_serialized_trace(from._internal_serialized_trace());
  }
  if (from.device_type().size() > 0) {
    _internal_set_device_type(from._internal_device_type());
  }
  if (from.model_module().size() > 0) {
    _internal_set_model_module(from._internal_model_module());
  }
  if (from.model_format() != 0) {
    _internal_set_model_format(from._internal_model_format());
  }
}

void ModelBytes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ModelBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelBytes::CopyFrom(const ModelBytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ModelBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelBytes::IsInitialized() const {
  return true;
}

void ModelBytes::InternalSwap(ModelBytes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  frozen_meta_graph_.Swap(&other->frozen_meta_graph_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mmapped_graph_def_.Swap(&other->mmapped_graph_def_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  serialized_trace_.Swap(&other->serialized_trace_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  device_type_.Swap(&other->device_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  model_module_.Swap(&other->model_module_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(model_format_, other->model_format_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelBytes::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::LoadCheckpointScope* Arena::CreateMaybeMessage< ::LoadCheckpointScope >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LoadCheckpointScope >(arena);
}
template<> PROTOBUF_NOINLINE ::ModelBytes* Arena::CreateMaybeMessage< ::ModelBytes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ModelBytes >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
