// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/utils/workflow.proto

#include "proto/utils/workflow.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fworkflow_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ModelVersion_proto_2futils_2fworkflow_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fworkflow_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WorkflowComputationHint_proto_2futils_2fworkflow_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fworkflow_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WorkflowInput_proto_2futils_2fworkflow_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fworkflow_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_WorkflowNode_proto_2futils_2fworkflow_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fworkflow_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WorkflowRecipe_proto_2futils_2fworkflow_2eproto;
class WorkflowGraphDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkflowGraph> _instance;
} _WorkflowGraph_default_instance_;
class ModelVersionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelVersion> _instance;
} _ModelVersion_default_instance_;
class WorkflowNodeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkflowNode> _instance;
} _WorkflowNode_default_instance_;
class WorkflowInputDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkflowInput> _instance;
} _WorkflowInput_default_instance_;
class WorkflowComputationHintDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkflowComputationHint> _instance;
} _WorkflowComputationHint_default_instance_;
class WorkflowRecipeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkflowRecipe> _instance;
} _WorkflowRecipe_default_instance_;
static void InitDefaultsscc_info_ModelVersion_proto_2futils_2fworkflow_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ModelVersion_default_instance_;
    new (ptr) ::ModelVersion();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ModelVersion::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ModelVersion_proto_2futils_2fworkflow_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ModelVersion_proto_2futils_2fworkflow_2eproto}, {}};

static void InitDefaultsscc_info_WorkflowComputationHint_proto_2futils_2fworkflow_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_WorkflowComputationHint_default_instance_;
    new (ptr) ::WorkflowComputationHint();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WorkflowComputationHint::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WorkflowComputationHint_proto_2futils_2fworkflow_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WorkflowComputationHint_proto_2futils_2fworkflow_2eproto}, {}};

static void InitDefaultsscc_info_WorkflowGraph_proto_2futils_2fworkflow_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_WorkflowGraph_default_instance_;
    new (ptr) ::WorkflowGraph();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WorkflowGraph::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_WorkflowGraph_proto_2futils_2fworkflow_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_WorkflowGraph_proto_2futils_2fworkflow_2eproto}, {
      &scc_info_WorkflowNode_proto_2futils_2fworkflow_2eproto.base,
      &scc_info_WorkflowRecipe_proto_2futils_2fworkflow_2eproto.base,
      &scc_info_WorkflowComputationHint_proto_2futils_2fworkflow_2eproto.base,}};

static void InitDefaultsscc_info_WorkflowInput_proto_2futils_2fworkflow_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_WorkflowInput_default_instance_;
    new (ptr) ::WorkflowInput();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WorkflowInput::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WorkflowInput_proto_2futils_2fworkflow_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WorkflowInput_proto_2futils_2fworkflow_2eproto}, {}};

static void InitDefaultsscc_info_WorkflowNode_proto_2futils_2fworkflow_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_WorkflowNode_default_instance_;
    new (ptr) ::WorkflowNode();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WorkflowNode::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_WorkflowNode_proto_2futils_2fworkflow_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_WorkflowNode_proto_2futils_2fworkflow_2eproto}, {
      &scc_info_ModelVersion_proto_2futils_2fworkflow_2eproto.base,
      &scc_info_WorkflowInput_proto_2futils_2fworkflow_2eproto.base,}};

static void InitDefaultsscc_info_WorkflowRecipe_proto_2futils_2fworkflow_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_WorkflowRecipe_default_instance_;
    new (ptr) ::WorkflowRecipe();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WorkflowRecipe::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WorkflowRecipe_proto_2futils_2fworkflow_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_WorkflowRecipe_proto_2futils_2fworkflow_2eproto}, {
      &scc_info_WorkflowComputationHint_proto_2futils_2fworkflow_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2futils_2fworkflow_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_2futils_2fworkflow_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2futils_2fworkflow_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2futils_2fworkflow_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::WorkflowGraph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::WorkflowGraph, node_),
  PROTOBUF_FIELD_OFFSET(::WorkflowGraph, recipe_),
  PROTOBUF_FIELD_OFFSET(::WorkflowGraph, hint_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ModelVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ModelVersion, model_id_),
  PROTOBUF_FIELD_OFFSET(::ModelVersion, version_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::WorkflowNode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::WorkflowNode, id_),
  PROTOBUF_FIELD_OFFSET(::WorkflowNode, model_version_),
  PROTOBUF_FIELD_OFFSET(::WorkflowNode, input_),
  PROTOBUF_FIELD_OFFSET(::WorkflowNode, display_name_),
  PROTOBUF_FIELD_OFFSET(::WorkflowNode, group_id_),
  PROTOBUF_FIELD_OFFSET(::WorkflowNode, hidden_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::WorkflowInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::WorkflowInput, node_id_),
  PROTOBUF_FIELD_OFFSET(::WorkflowInput, output_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::WorkflowComputationHint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::WorkflowComputationHint, node_id_),
  PROTOBUF_FIELD_OFFSET(::WorkflowComputationHint, already_predicted_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::WorkflowRecipe, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::WorkflowRecipe, id_),
  PROTOBUF_FIELD_OFFSET(::WorkflowRecipe, op_),
  PROTOBUF_FIELD_OFFSET(::WorkflowRecipe, display_name_),
  PROTOBUF_FIELD_OFFSET(::WorkflowRecipe, node_ids_),
  PROTOBUF_FIELD_OFFSET(::WorkflowRecipe, hint_),
  PROTOBUF_FIELD_OFFSET(::WorkflowRecipe, default__),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::WorkflowGraph)},
  { 8, -1, sizeof(::ModelVersion)},
  { 15, -1, sizeof(::WorkflowNode)},
  { 26, -1, sizeof(::WorkflowInput)},
  { 33, -1, sizeof(::WorkflowComputationHint)},
  { 40, -1, sizeof(::WorkflowRecipe)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_WorkflowGraph_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ModelVersion_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_WorkflowNode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_WorkflowInput_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_WorkflowComputationHint_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_WorkflowRecipe_default_instance_),
};

const char descriptor_table_protodef_proto_2futils_2fworkflow_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\032proto/utils/workflow.proto\"y\n\rWorkflow"
  "Graph\022\033\n\004node\030\001 \003(\0132\r.WorkflowNode\022#\n\006re"
  "cipe\030\002 \003(\0132\017.WorkflowRecipeB\002\030\001\022&\n\004hint\030"
  "\005 \003(\0132\030.WorkflowComputationHint\"4\n\014Model"
  "Version\022\020\n\010model_id\030\001 \001(\t\022\022\n\nversion_id\030"
  "\002 \001(\t\"\227\001\n\014WorkflowNode\022\n\n\002id\030\001 \001(\t\022$\n\rmo"
  "del_version\030\002 \001(\0132\r.ModelVersion\022\035\n\005inpu"
  "t\030\003 \003(\0132\016.WorkflowInput\022\024\n\014display_name\030"
  "\004 \001(\t\022\020\n\010group_id\030\005 \001(\t\022\016\n\006hidden\030\006 \001(\010\""
  "0\n\rWorkflowInput\022\017\n\007node_id\030\001 \001(\t\022\016\n\006out"
  "put\030\002 \001(\t\"E\n\027WorkflowComputationHint\022\017\n\007"
  "node_id\030\001 \001(\t\022\031\n\021already_predicted\030\002 \001(\010"
  "\"\211\001\n\016WorkflowRecipe\022\n\n\002id\030\001 \001(\t\022\n\n\002op\030\002 "
  "\001(\t\022\024\n\014display_name\030\003 \001(\t\022\020\n\010node_ids\030\004 "
  "\003(\t\022&\n\004hint\030\005 \003(\0132\030.WorkflowComputationH"
  "int\022\017\n\007default\030\006 \001(\010B\016\n\005utilsZ\005utilsb\006pr"
  "oto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2futils_2fworkflow_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2futils_2fworkflow_2eproto_sccs[6] = {
  &scc_info_ModelVersion_proto_2futils_2fworkflow_2eproto.base,
  &scc_info_WorkflowComputationHint_proto_2futils_2fworkflow_2eproto.base,
  &scc_info_WorkflowGraph_proto_2futils_2fworkflow_2eproto.base,
  &scc_info_WorkflowInput_proto_2futils_2fworkflow_2eproto.base,
  &scc_info_WorkflowNode_proto_2futils_2fworkflow_2eproto.base,
  &scc_info_WorkflowRecipe_proto_2futils_2fworkflow_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2futils_2fworkflow_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2futils_2fworkflow_2eproto = {
  false, false, descriptor_table_protodef_proto_2futils_2fworkflow_2eproto, "proto/utils/workflow.proto", 644,
  &descriptor_table_proto_2futils_2fworkflow_2eproto_once, descriptor_table_proto_2futils_2fworkflow_2eproto_sccs, descriptor_table_proto_2futils_2fworkflow_2eproto_deps, 6, 0,
  schemas, file_default_instances, TableStruct_proto_2futils_2fworkflow_2eproto::offsets,
  file_level_metadata_proto_2futils_2fworkflow_2eproto, 6, file_level_enum_descriptors_proto_2futils_2fworkflow_2eproto, file_level_service_descriptors_proto_2futils_2fworkflow_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2futils_2fworkflow_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2futils_2fworkflow_2eproto)), true);

// ===================================================================

void WorkflowGraph::InitAsDefaultInstance() {
}
class WorkflowGraph::_Internal {
 public:
};

WorkflowGraph::WorkflowGraph(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  node_(arena),
  recipe_(arena),
  hint_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:WorkflowGraph)
}
WorkflowGraph::WorkflowGraph(const WorkflowGraph& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      node_(from.node_),
      recipe_(from.recipe_),
      hint_(from.hint_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:WorkflowGraph)
}

void WorkflowGraph::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WorkflowGraph_proto_2futils_2fworkflow_2eproto.base);
}

WorkflowGraph::~WorkflowGraph() {
  // @@protoc_insertion_point(destructor:WorkflowGraph)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WorkflowGraph::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void WorkflowGraph::ArenaDtor(void* object) {
  WorkflowGraph* _this = reinterpret_cast< WorkflowGraph* >(object);
  (void)_this;
}
void WorkflowGraph::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WorkflowGraph::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WorkflowGraph& WorkflowGraph::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WorkflowGraph_proto_2futils_2fworkflow_2eproto.base);
  return *internal_default_instance();
}


void WorkflowGraph::Clear() {
// @@protoc_insertion_point(message_clear_start:WorkflowGraph)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_.Clear();
  recipe_.Clear();
  hint_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WorkflowGraph::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .WorkflowNode node = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_node(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .WorkflowRecipe recipe = 2 [deprecated = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_recipe(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .WorkflowComputationHint hint = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_hint(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WorkflowGraph::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:WorkflowGraph)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .WorkflowNode node = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_node_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_node(i), target, stream);
  }

  // repeated .WorkflowRecipe recipe = 2 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_recipe_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_recipe(i), target, stream);
  }

  // repeated .WorkflowComputationHint hint = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_hint_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_hint(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WorkflowGraph)
  return target;
}

size_t WorkflowGraph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WorkflowGraph)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .WorkflowNode node = 1;
  total_size += 1UL * this->_internal_node_size();
  for (const auto& msg : this->node_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .WorkflowRecipe recipe = 2 [deprecated = true];
  total_size += 1UL * this->_internal_recipe_size();
  for (const auto& msg : this->recipe_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .WorkflowComputationHint hint = 5;
  total_size += 1UL * this->_internal_hint_size();
  for (const auto& msg : this->hint_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkflowGraph::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WorkflowGraph)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkflowGraph* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WorkflowGraph>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WorkflowGraph)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WorkflowGraph)
    MergeFrom(*source);
  }
}

void WorkflowGraph::MergeFrom(const WorkflowGraph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WorkflowGraph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  node_.MergeFrom(from.node_);
  recipe_.MergeFrom(from.recipe_);
  hint_.MergeFrom(from.hint_);
}

void WorkflowGraph::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WorkflowGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkflowGraph::CopyFrom(const WorkflowGraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WorkflowGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkflowGraph::IsInitialized() const {
  return true;
}

void WorkflowGraph::InternalSwap(WorkflowGraph* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  node_.InternalSwap(&other->node_);
  recipe_.InternalSwap(&other->recipe_);
  hint_.InternalSwap(&other->hint_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkflowGraph::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ModelVersion::InitAsDefaultInstance() {
}
class ModelVersion::_Internal {
 public:
};

ModelVersion::ModelVersion(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ModelVersion)
}
ModelVersion::ModelVersion(const ModelVersion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  model_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_model_id().empty()) {
    model_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_model_id(),
      GetArena());
  }
  version_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version_id().empty()) {
    version_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ModelVersion)
}

void ModelVersion::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModelVersion_proto_2futils_2fworkflow_2eproto.base);
  model_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ModelVersion::~ModelVersion() {
  // @@protoc_insertion_point(destructor:ModelVersion)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ModelVersion::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  model_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ModelVersion::ArenaDtor(void* object) {
  ModelVersion* _this = reinterpret_cast< ModelVersion* >(object);
  (void)_this;
}
void ModelVersion::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelVersion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelVersion& ModelVersion::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelVersion_proto_2futils_2fworkflow_2eproto.base);
  return *internal_default_instance();
}


void ModelVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:ModelVersion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  model_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelVersion::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string model_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_model_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ModelVersion.model_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ModelVersion.version_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelVersion::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ModelVersion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string model_id = 1;
  if (this->model_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_id().data(), static_cast<int>(this->_internal_model_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ModelVersion.model_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_model_id(), target);
  }

  // string version_id = 2;
  if (this->version_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version_id().data(), static_cast<int>(this->_internal_version_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ModelVersion.version_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ModelVersion)
  return target;
}

size_t ModelVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ModelVersion)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string model_id = 1;
  if (this->model_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_id());
  }

  // string version_id = 2;
  if (this->version_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelVersion::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ModelVersion)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelVersion* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelVersion>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ModelVersion)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ModelVersion)
    MergeFrom(*source);
  }
}

void ModelVersion::MergeFrom(const ModelVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ModelVersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.model_id().size() > 0) {
    _internal_set_model_id(from._internal_model_id());
  }
  if (from.version_id().size() > 0) {
    _internal_set_version_id(from._internal_version_id());
  }
}

void ModelVersion::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ModelVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelVersion::CopyFrom(const ModelVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ModelVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelVersion::IsInitialized() const {
  return true;
}

void ModelVersion::InternalSwap(ModelVersion* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  model_id_.Swap(&other->model_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_id_.Swap(&other->version_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelVersion::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WorkflowNode::InitAsDefaultInstance() {
  ::_WorkflowNode_default_instance_._instance.get_mutable()->model_version_ = const_cast< ::ModelVersion*>(
      ::ModelVersion::internal_default_instance());
}
class WorkflowNode::_Internal {
 public:
  static const ::ModelVersion& model_version(const WorkflowNode* msg);
};

const ::ModelVersion&
WorkflowNode::_Internal::model_version(const WorkflowNode* msg) {
  return *msg->model_version_;
}
WorkflowNode::WorkflowNode(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  input_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:WorkflowNode)
}
WorkflowNode::WorkflowNode(const WorkflowNode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      input_(from.input_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  display_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_display_name().empty()) {
    display_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_display_name(),
      GetArena());
  }
  group_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_group_id().empty()) {
    group_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_group_id(),
      GetArena());
  }
  if (from._internal_has_model_version()) {
    model_version_ = new ::ModelVersion(*from.model_version_);
  } else {
    model_version_ = nullptr;
  }
  hidden_ = from.hidden_;
  // @@protoc_insertion_point(copy_constructor:WorkflowNode)
}

void WorkflowNode::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WorkflowNode_proto_2futils_2fworkflow_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  group_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&model_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hidden_) -
      reinterpret_cast<char*>(&model_version_)) + sizeof(hidden_));
}

WorkflowNode::~WorkflowNode() {
  // @@protoc_insertion_point(destructor:WorkflowNode)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WorkflowNode::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  group_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete model_version_;
}

void WorkflowNode::ArenaDtor(void* object) {
  WorkflowNode* _this = reinterpret_cast< WorkflowNode* >(object);
  (void)_this;
}
void WorkflowNode::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WorkflowNode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WorkflowNode& WorkflowNode::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WorkflowNode_proto_2futils_2fworkflow_2eproto.base);
  return *internal_default_instance();
}


void WorkflowNode::Clear() {
// @@protoc_insertion_point(message_clear_start:WorkflowNode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  display_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  group_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && model_version_ != nullptr) {
    delete model_version_;
  }
  model_version_ = nullptr;
  hidden_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WorkflowNode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "WorkflowNode.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ModelVersion model_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_model_version(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .WorkflowInput input = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_input(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // string display_name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_display_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "WorkflowNode.display_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string group_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_group_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "WorkflowNode.group_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool hidden = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          hidden_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WorkflowNode::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:WorkflowNode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "WorkflowNode.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .ModelVersion model_version = 2;
  if (this->has_model_version()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::model_version(this), target, stream);
  }

  // repeated .WorkflowInput input = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_input_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_input(i), target, stream);
  }

  // string display_name = 4;
  if (this->display_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_display_name().data(), static_cast<int>(this->_internal_display_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "WorkflowNode.display_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_display_name(), target);
  }

  // string group_id = 5;
  if (this->group_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_group_id().data(), static_cast<int>(this->_internal_group_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "WorkflowNode.group_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_group_id(), target);
  }

  // bool hidden = 6;
  if (this->hidden() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_hidden(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WorkflowNode)
  return target;
}

size_t WorkflowNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WorkflowNode)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .WorkflowInput input = 3;
  total_size += 1UL * this->_internal_input_size();
  for (const auto& msg : this->input_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string display_name = 4;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_display_name());
  }

  // string group_id = 5;
  if (this->group_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group_id());
  }

  // .ModelVersion model_version = 2;
  if (this->has_model_version()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *model_version_);
  }

  // bool hidden = 6;
  if (this->hidden() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkflowNode::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WorkflowNode)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkflowNode* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WorkflowNode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WorkflowNode)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WorkflowNode)
    MergeFrom(*source);
  }
}

void WorkflowNode::MergeFrom(const WorkflowNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WorkflowNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_.MergeFrom(from.input_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.display_name().size() > 0) {
    _internal_set_display_name(from._internal_display_name());
  }
  if (from.group_id().size() > 0) {
    _internal_set_group_id(from._internal_group_id());
  }
  if (from.has_model_version()) {
    _internal_mutable_model_version()->::ModelVersion::MergeFrom(from._internal_model_version());
  }
  if (from.hidden() != 0) {
    _internal_set_hidden(from._internal_hidden());
  }
}

void WorkflowNode::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WorkflowNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkflowNode::CopyFrom(const WorkflowNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WorkflowNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkflowNode::IsInitialized() const {
  return true;
}

void WorkflowNode::InternalSwap(WorkflowNode* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  input_.InternalSwap(&other->input_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  display_name_.Swap(&other->display_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  group_id_.Swap(&other->group_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WorkflowNode, hidden_)
      + sizeof(WorkflowNode::hidden_)
      - PROTOBUF_FIELD_OFFSET(WorkflowNode, model_version_)>(
          reinterpret_cast<char*>(&model_version_),
          reinterpret_cast<char*>(&other->model_version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkflowNode::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WorkflowInput::InitAsDefaultInstance() {
}
class WorkflowInput::_Internal {
 public:
};

WorkflowInput::WorkflowInput(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:WorkflowInput)
}
WorkflowInput::WorkflowInput(const WorkflowInput& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  node_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_node_id().empty()) {
    node_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_node_id(),
      GetArena());
  }
  output_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_output().empty()) {
    output_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_output(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:WorkflowInput)
}

void WorkflowInput::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WorkflowInput_proto_2futils_2fworkflow_2eproto.base);
  node_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  output_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

WorkflowInput::~WorkflowInput() {
  // @@protoc_insertion_point(destructor:WorkflowInput)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WorkflowInput::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  node_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  output_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WorkflowInput::ArenaDtor(void* object) {
  WorkflowInput* _this = reinterpret_cast< WorkflowInput* >(object);
  (void)_this;
}
void WorkflowInput::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WorkflowInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WorkflowInput& WorkflowInput::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WorkflowInput_proto_2futils_2fworkflow_2eproto.base);
  return *internal_default_instance();
}


void WorkflowInput::Clear() {
// @@protoc_insertion_point(message_clear_start:WorkflowInput)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  output_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WorkflowInput::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string node_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_node_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "WorkflowInput.node_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string output = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_output();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "WorkflowInput.output"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WorkflowInput::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:WorkflowInput)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string node_id = 1;
  if (this->node_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_node_id().data(), static_cast<int>(this->_internal_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "WorkflowInput.node_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_node_id(), target);
  }

  // string output = 2;
  if (this->output().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_output().data(), static_cast<int>(this->_internal_output().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "WorkflowInput.output");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_output(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WorkflowInput)
  return target;
}

size_t WorkflowInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WorkflowInput)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string node_id = 1;
  if (this->node_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_node_id());
  }

  // string output = 2;
  if (this->output().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_output());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkflowInput::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WorkflowInput)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkflowInput* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WorkflowInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WorkflowInput)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WorkflowInput)
    MergeFrom(*source);
  }
}

void WorkflowInput::MergeFrom(const WorkflowInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WorkflowInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.node_id().size() > 0) {
    _internal_set_node_id(from._internal_node_id());
  }
  if (from.output().size() > 0) {
    _internal_set_output(from._internal_output());
  }
}

void WorkflowInput::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WorkflowInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkflowInput::CopyFrom(const WorkflowInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WorkflowInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkflowInput::IsInitialized() const {
  return true;
}

void WorkflowInput::InternalSwap(WorkflowInput* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  node_id_.Swap(&other->node_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  output_.Swap(&other->output_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkflowInput::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WorkflowComputationHint::InitAsDefaultInstance() {
}
class WorkflowComputationHint::_Internal {
 public:
};

WorkflowComputationHint::WorkflowComputationHint(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:WorkflowComputationHint)
}
WorkflowComputationHint::WorkflowComputationHint(const WorkflowComputationHint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  node_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_node_id().empty()) {
    node_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_node_id(),
      GetArena());
  }
  already_predicted_ = from.already_predicted_;
  // @@protoc_insertion_point(copy_constructor:WorkflowComputationHint)
}

void WorkflowComputationHint::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WorkflowComputationHint_proto_2futils_2fworkflow_2eproto.base);
  node_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  already_predicted_ = false;
}

WorkflowComputationHint::~WorkflowComputationHint() {
  // @@protoc_insertion_point(destructor:WorkflowComputationHint)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WorkflowComputationHint::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  node_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WorkflowComputationHint::ArenaDtor(void* object) {
  WorkflowComputationHint* _this = reinterpret_cast< WorkflowComputationHint* >(object);
  (void)_this;
}
void WorkflowComputationHint::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WorkflowComputationHint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WorkflowComputationHint& WorkflowComputationHint::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WorkflowComputationHint_proto_2futils_2fworkflow_2eproto.base);
  return *internal_default_instance();
}


void WorkflowComputationHint::Clear() {
// @@protoc_insertion_point(message_clear_start:WorkflowComputationHint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  already_predicted_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WorkflowComputationHint::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string node_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_node_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "WorkflowComputationHint.node_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool already_predicted = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          already_predicted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WorkflowComputationHint::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:WorkflowComputationHint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string node_id = 1;
  if (this->node_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_node_id().data(), static_cast<int>(this->_internal_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "WorkflowComputationHint.node_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_node_id(), target);
  }

  // bool already_predicted = 2;
  if (this->already_predicted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_already_predicted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WorkflowComputationHint)
  return target;
}

size_t WorkflowComputationHint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WorkflowComputationHint)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string node_id = 1;
  if (this->node_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_node_id());
  }

  // bool already_predicted = 2;
  if (this->already_predicted() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkflowComputationHint::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WorkflowComputationHint)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkflowComputationHint* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WorkflowComputationHint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WorkflowComputationHint)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WorkflowComputationHint)
    MergeFrom(*source);
  }
}

void WorkflowComputationHint::MergeFrom(const WorkflowComputationHint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WorkflowComputationHint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.node_id().size() > 0) {
    _internal_set_node_id(from._internal_node_id());
  }
  if (from.already_predicted() != 0) {
    _internal_set_already_predicted(from._internal_already_predicted());
  }
}

void WorkflowComputationHint::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WorkflowComputationHint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkflowComputationHint::CopyFrom(const WorkflowComputationHint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WorkflowComputationHint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkflowComputationHint::IsInitialized() const {
  return true;
}

void WorkflowComputationHint::InternalSwap(WorkflowComputationHint* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  node_id_.Swap(&other->node_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(already_predicted_, other->already_predicted_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkflowComputationHint::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WorkflowRecipe::InitAsDefaultInstance() {
}
class WorkflowRecipe::_Internal {
 public:
};

WorkflowRecipe::WorkflowRecipe(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  node_ids_(arena),
  hint_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:WorkflowRecipe)
}
WorkflowRecipe::WorkflowRecipe(const WorkflowRecipe& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      node_ids_(from.node_ids_),
      hint_(from.hint_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  op_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_op().empty()) {
    op_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_op(),
      GetArena());
  }
  display_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_display_name().empty()) {
    display_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_display_name(),
      GetArena());
  }
  default__ = from.default__;
  // @@protoc_insertion_point(copy_constructor:WorkflowRecipe)
}

void WorkflowRecipe::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WorkflowRecipe_proto_2futils_2fworkflow_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  op_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  default__ = false;
}

WorkflowRecipe::~WorkflowRecipe() {
  // @@protoc_insertion_point(destructor:WorkflowRecipe)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WorkflowRecipe::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  op_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WorkflowRecipe::ArenaDtor(void* object) {
  WorkflowRecipe* _this = reinterpret_cast< WorkflowRecipe* >(object);
  (void)_this;
}
void WorkflowRecipe::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WorkflowRecipe::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WorkflowRecipe& WorkflowRecipe::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WorkflowRecipe_proto_2futils_2fworkflow_2eproto.base);
  return *internal_default_instance();
}


void WorkflowRecipe::Clear() {
// @@protoc_insertion_point(message_clear_start:WorkflowRecipe)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_ids_.Clear();
  hint_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  op_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  display_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  default__ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WorkflowRecipe::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "WorkflowRecipe.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string op = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_op();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "WorkflowRecipe.op"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string display_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_display_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "WorkflowRecipe.display_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string node_ids = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_node_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "WorkflowRecipe.node_ids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .WorkflowComputationHint hint = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_hint(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // bool default = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          default__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WorkflowRecipe::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:WorkflowRecipe)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "WorkflowRecipe.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string op = 2;
  if (this->op().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_op().data(), static_cast<int>(this->_internal_op().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "WorkflowRecipe.op");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_op(), target);
  }

  // string display_name = 3;
  if (this->display_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_display_name().data(), static_cast<int>(this->_internal_display_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "WorkflowRecipe.display_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_display_name(), target);
  }

  // repeated string node_ids = 4;
  for (int i = 0, n = this->_internal_node_ids_size(); i < n; i++) {
    const auto& s = this->_internal_node_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "WorkflowRecipe.node_ids");
    target = stream->WriteString(4, s, target);
  }

  // repeated .WorkflowComputationHint hint = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_hint_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_hint(i), target, stream);
  }

  // bool default = 6;
  if (this->default_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_default_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WorkflowRecipe)
  return target;
}

size_t WorkflowRecipe::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WorkflowRecipe)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string node_ids = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(node_ids_.size());
  for (int i = 0, n = node_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      node_ids_.Get(i));
  }

  // repeated .WorkflowComputationHint hint = 5;
  total_size += 1UL * this->_internal_hint_size();
  for (const auto& msg : this->hint_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string op = 2;
  if (this->op().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_op());
  }

  // string display_name = 3;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_display_name());
  }

  // bool default = 6;
  if (this->default_() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkflowRecipe::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WorkflowRecipe)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkflowRecipe* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WorkflowRecipe>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WorkflowRecipe)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WorkflowRecipe)
    MergeFrom(*source);
  }
}

void WorkflowRecipe::MergeFrom(const WorkflowRecipe& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WorkflowRecipe)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  node_ids_.MergeFrom(from.node_ids_);
  hint_.MergeFrom(from.hint_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.op().size() > 0) {
    _internal_set_op(from._internal_op());
  }
  if (from.display_name().size() > 0) {
    _internal_set_display_name(from._internal_display_name());
  }
  if (from.default_() != 0) {
    _internal_set_default_(from._internal_default_());
  }
}

void WorkflowRecipe::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WorkflowRecipe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkflowRecipe::CopyFrom(const WorkflowRecipe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WorkflowRecipe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkflowRecipe::IsInitialized() const {
  return true;
}

void WorkflowRecipe::InternalSwap(WorkflowRecipe* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  node_ids_.InternalSwap(&other->node_ids_);
  hint_.InternalSwap(&other->hint_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  op_.Swap(&other->op_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  display_name_.Swap(&other->display_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(default__, other->default__);
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkflowRecipe::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::WorkflowGraph* Arena::CreateMaybeMessage< ::WorkflowGraph >(Arena* arena) {
  return Arena::CreateMessageInternal< ::WorkflowGraph >(arena);
}
template<> PROTOBUF_NOINLINE ::ModelVersion* Arena::CreateMaybeMessage< ::ModelVersion >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ModelVersion >(arena);
}
template<> PROTOBUF_NOINLINE ::WorkflowNode* Arena::CreateMaybeMessage< ::WorkflowNode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::WorkflowNode >(arena);
}
template<> PROTOBUF_NOINLINE ::WorkflowInput* Arena::CreateMaybeMessage< ::WorkflowInput >(Arena* arena) {
  return Arena::CreateMessageInternal< ::WorkflowInput >(arena);
}
template<> PROTOBUF_NOINLINE ::WorkflowComputationHint* Arena::CreateMaybeMessage< ::WorkflowComputationHint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::WorkflowComputationHint >(arena);
}
template<> PROTOBUF_NOINLINE ::WorkflowRecipe* Arena::CreateMaybeMessage< ::WorkflowRecipe >(Arena* arena) {
  return Arena::CreateMessageInternal< ::WorkflowRecipe >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
