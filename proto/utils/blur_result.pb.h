// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/utils/blur_result.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2futils_2fblur_5fresult_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_proto_2futils_2fblur_5fresult_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "proto/utils/boundingbox.pb.h"
#include "proto/utils/request_meta.pb.h"
#include "proto/clarifai/api/utils/extensions.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fblur_5fresult_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2futils_2fblur_5fresult_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2futils_2fblur_5fresult_2eproto;
class BlurResult;
class BlurResultDefaultTypeInternal;
extern BlurResultDefaultTypeInternal _BlurResult_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::BlurResult* Arena::CreateMaybeMessage<::BlurResult>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class BlurResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:BlurResult) */ {
 public:
  inline BlurResult() : BlurResult(nullptr) {}
  virtual ~BlurResult();

  BlurResult(const BlurResult& from);
  BlurResult(BlurResult&& from) noexcept
    : BlurResult() {
    *this = ::std::move(from);
  }

  inline BlurResult& operator=(const BlurResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlurResult& operator=(BlurResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BlurResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BlurResult* internal_default_instance() {
    return reinterpret_cast<const BlurResult*>(
               &_BlurResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BlurResult& a, BlurResult& b) {
    a.Swap(&b);
  }
  inline void Swap(BlurResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlurResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BlurResult* New() const final {
    return CreateMaybeMessage<BlurResult>(nullptr);
  }

  BlurResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BlurResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BlurResult& from);
  void MergeFrom(const BlurResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BlurResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "BlurResult";
  }
  protected:
  explicit BlurResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2futils_2fblur_5fresult_2eproto);
    return ::descriptor_table_proto_2futils_2fblur_5fresult_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBboxesFieldNumber = 3,
    kLocalExtentsFieldNumber = 5,
    kStatusFieldNumber = 1,
    kExtentFieldNumber = 2,
    kGlobalExtentFieldNumber = 4,
  };
  // repeated .BoundingBox bboxes = 3 [deprecated = true];
  PROTOBUF_DEPRECATED int bboxes_size() const;
  private:
  int _internal_bboxes_size() const;
  public:
  PROTOBUF_DEPRECATED void clear_bboxes();
  PROTOBUF_DEPRECATED ::BoundingBox* mutable_bboxes(int index);
  PROTOBUF_DEPRECATED ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::BoundingBox >*
      mutable_bboxes();
  private:
  const ::BoundingBox& _internal_bboxes(int index) const;
  ::BoundingBox* _internal_add_bboxes();
  public:
  PROTOBUF_DEPRECATED const ::BoundingBox& bboxes(int index) const;
  PROTOBUF_DEPRECATED ::BoundingBox* add_bboxes();
  PROTOBUF_DEPRECATED const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::BoundingBox >&
      bboxes() const;

  // repeated float local_extents = 5 [deprecated = true];
  PROTOBUF_DEPRECATED int local_extents_size() const;
  private:
  int _internal_local_extents_size() const;
  public:
  PROTOBUF_DEPRECATED void clear_local_extents();
  private:
  float _internal_local_extents(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_local_extents() const;
  void _internal_add_local_extents(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_local_extents();
  public:
  PROTOBUF_DEPRECATED float local_extents(int index) const;
  PROTOBUF_DEPRECATED void set_local_extents(int index, float value);
  PROTOBUF_DEPRECATED void add_local_extents(float value);
  PROTOBUF_DEPRECATED const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      local_extents() const;
  PROTOBUF_DEPRECATED ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_local_extents();

  // .ResponseStatus status = 1 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  PROTOBUF_DEPRECATED void clear_status();
  PROTOBUF_DEPRECATED const ::ResponseStatus& status() const;
  PROTOBUF_DEPRECATED ::ResponseStatus* release_status();
  PROTOBUF_DEPRECATED ::ResponseStatus* mutable_status();
  PROTOBUF_DEPRECATED void set_allocated_status(::ResponseStatus* status);
  private:
  const ::ResponseStatus& _internal_status() const;
  ::ResponseStatus* _internal_mutable_status();
  public:
  PROTOBUF_DEPRECATED void unsafe_arena_set_allocated_status(
      ::ResponseStatus* status);
  PROTOBUF_DEPRECATED ::ResponseStatus* unsafe_arena_release_status();

  // float extent = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];
  void clear_extent();
  float extent() const;
  void set_extent(float value);
  private:
  float _internal_extent() const;
  void _internal_set_extent(float value);
  public:

  // float global_extent = 4 [deprecated = true];
  PROTOBUF_DEPRECATED void clear_global_extent();
  PROTOBUF_DEPRECATED float global_extent() const;
  PROTOBUF_DEPRECATED void set_global_extent(float value);
  private:
  float _internal_global_extent() const;
  void _internal_set_global_extent(float value);
  public:

  // @@protoc_insertion_point(class_scope:BlurResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::BoundingBox > bboxes_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > local_extents_;
  mutable std::atomic<int> _local_extents_cached_byte_size_;
  ::ResponseStatus* status_;
  float extent_;
  float global_extent_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2futils_2fblur_5fresult_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BlurResult

// .ResponseStatus status = 1 [deprecated = true];
inline bool BlurResult::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool BlurResult::has_status() const {
  return _internal_has_status();
}
inline const ::ResponseStatus& BlurResult::_internal_status() const {
  const ::ResponseStatus* p = status_;
  return p != nullptr ? *p : *reinterpret_cast<const ::ResponseStatus*>(
      &::_ResponseStatus_default_instance_);
}
inline const ::ResponseStatus& BlurResult::status() const {
  // @@protoc_insertion_point(field_get:BlurResult.status)
  return _internal_status();
}
inline void BlurResult::unsafe_arena_set_allocated_status(
    ::ResponseStatus* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:BlurResult.status)
}
inline ::ResponseStatus* BlurResult::release_status() {
  
  ::ResponseStatus* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::ResponseStatus* BlurResult::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:BlurResult.status)
  
  ::ResponseStatus* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::ResponseStatus* BlurResult::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::ResponseStatus>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::ResponseStatus* BlurResult::mutable_status() {
  // @@protoc_insertion_point(field_mutable:BlurResult.status)
  return _internal_mutable_status();
}
inline void BlurResult::set_allocated_status(::ResponseStatus* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:BlurResult.status)
}

// float extent = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];
inline void BlurResult::clear_extent() {
  extent_ = 0;
}
inline float BlurResult::_internal_extent() const {
  return extent_;
}
inline float BlurResult::extent() const {
  // @@protoc_insertion_point(field_get:BlurResult.extent)
  return _internal_extent();
}
inline void BlurResult::_internal_set_extent(float value) {
  
  extent_ = value;
}
inline void BlurResult::set_extent(float value) {
  _internal_set_extent(value);
  // @@protoc_insertion_point(field_set:BlurResult.extent)
}

// repeated .BoundingBox bboxes = 3 [deprecated = true];
inline int BlurResult::_internal_bboxes_size() const {
  return bboxes_.size();
}
inline int BlurResult::bboxes_size() const {
  return _internal_bboxes_size();
}
inline ::BoundingBox* BlurResult::mutable_bboxes(int index) {
  // @@protoc_insertion_point(field_mutable:BlurResult.bboxes)
  return bboxes_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::BoundingBox >*
BlurResult::mutable_bboxes() {
  // @@protoc_insertion_point(field_mutable_list:BlurResult.bboxes)
  return &bboxes_;
}
inline const ::BoundingBox& BlurResult::_internal_bboxes(int index) const {
  return bboxes_.Get(index);
}
inline const ::BoundingBox& BlurResult::bboxes(int index) const {
  // @@protoc_insertion_point(field_get:BlurResult.bboxes)
  return _internal_bboxes(index);
}
inline ::BoundingBox* BlurResult::_internal_add_bboxes() {
  return bboxes_.Add();
}
inline ::BoundingBox* BlurResult::add_bboxes() {
  // @@protoc_insertion_point(field_add:BlurResult.bboxes)
  return _internal_add_bboxes();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::BoundingBox >&
BlurResult::bboxes() const {
  // @@protoc_insertion_point(field_list:BlurResult.bboxes)
  return bboxes_;
}

// float global_extent = 4 [deprecated = true];
inline void BlurResult::clear_global_extent() {
  global_extent_ = 0;
}
inline float BlurResult::_internal_global_extent() const {
  return global_extent_;
}
inline float BlurResult::global_extent() const {
  // @@protoc_insertion_point(field_get:BlurResult.global_extent)
  return _internal_global_extent();
}
inline void BlurResult::_internal_set_global_extent(float value) {
  
  global_extent_ = value;
}
inline void BlurResult::set_global_extent(float value) {
  _internal_set_global_extent(value);
  // @@protoc_insertion_point(field_set:BlurResult.global_extent)
}

// repeated float local_extents = 5 [deprecated = true];
inline int BlurResult::_internal_local_extents_size() const {
  return local_extents_.size();
}
inline int BlurResult::local_extents_size() const {
  return _internal_local_extents_size();
}
inline void BlurResult::clear_local_extents() {
  local_extents_.Clear();
}
inline float BlurResult::_internal_local_extents(int index) const {
  return local_extents_.Get(index);
}
inline float BlurResult::local_extents(int index) const {
  // @@protoc_insertion_point(field_get:BlurResult.local_extents)
  return _internal_local_extents(index);
}
inline void BlurResult::set_local_extents(int index, float value) {
  local_extents_.Set(index, value);
  // @@protoc_insertion_point(field_set:BlurResult.local_extents)
}
inline void BlurResult::_internal_add_local_extents(float value) {
  local_extents_.Add(value);
}
inline void BlurResult::add_local_extents(float value) {
  _internal_add_local_extents(value);
  // @@protoc_insertion_point(field_add:BlurResult.local_extents)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
BlurResult::_internal_local_extents() const {
  return local_extents_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
BlurResult::local_extents() const {
  // @@protoc_insertion_point(field_list:BlurResult.local_extents)
  return _internal_local_extents();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
BlurResult::_internal_mutable_local_extents() {
  return &local_extents_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
BlurResult::mutable_local_extents() {
  // @@protoc_insertion_point(field_mutable_list:BlurResult.local_extents)
  return _internal_mutable_local_extents();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_proto_2futils_2fblur_5fresult_2eproto
