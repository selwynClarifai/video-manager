// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/utils/blur_result.proto

#include "proto/utils/blur_result.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fboundingbox_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_BoundingBox_proto_2futils_2fboundingbox_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2frequest_5fmeta_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto;
class BlurResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BlurResult> _instance;
} _BlurResult_default_instance_;
static void InitDefaultsscc_info_BlurResult_proto_2futils_2fblur_5fresult_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_BlurResult_default_instance_;
    new (ptr) ::BlurResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BlurResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_BlurResult_proto_2futils_2fblur_5fresult_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_BlurResult_proto_2futils_2fblur_5fresult_2eproto}, {
      &scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto.base,
      &scc_info_BoundingBox_proto_2futils_2fboundingbox_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2futils_2fblur_5fresult_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_2futils_2fblur_5fresult_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2futils_2fblur_5fresult_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2futils_2fblur_5fresult_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BlurResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BlurResult, status_),
  PROTOBUF_FIELD_OFFSET(::BlurResult, extent_),
  PROTOBUF_FIELD_OFFSET(::BlurResult, bboxes_),
  PROTOBUF_FIELD_OFFSET(::BlurResult, global_extent_),
  PROTOBUF_FIELD_OFFSET(::BlurResult, local_extents_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::BlurResult)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_BlurResult_default_instance_),
};

const char descriptor_table_protodef_proto_2futils_2fblur_5fresult_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035proto/utils/blur_result.proto\032\035proto/u"
  "tils/boundingbox.proto\032\036proto/utils/requ"
  "est_meta.proto\032)proto/clarifai/api/utils"
  "/extensions.proto\"\237\001\n\nBlurResult\022#\n\006stat"
  "us\030\001 \001(\0132\017.ResponseStatusB\002\030\001\022\024\n\006extent\030"
  "\002 \001(\002B\004\200\265\030\001\022 \n\006bboxes\030\003 \003(\0132\014.BoundingBo"
  "xB\002\030\001\022\031\n\rglobal_extent\030\004 \001(\002B\002\030\001\022\031\n\rloca"
  "l_extents\030\005 \003(\002B\002\030\001B\016\n\005utilsZ\005utilsb\006pro"
  "to3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2futils_2fblur_5fresult_2eproto_deps[3] = {
  &::descriptor_table_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto,
  &::descriptor_table_proto_2futils_2fboundingbox_2eproto,
  &::descriptor_table_proto_2futils_2frequest_5fmeta_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2futils_2fblur_5fresult_2eproto_sccs[1] = {
  &scc_info_BlurResult_proto_2futils_2fblur_5fresult_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2futils_2fblur_5fresult_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2futils_2fblur_5fresult_2eproto = {
  false, false, descriptor_table_protodef_proto_2futils_2fblur_5fresult_2eproto, "proto/utils/blur_result.proto", 323,
  &descriptor_table_proto_2futils_2fblur_5fresult_2eproto_once, descriptor_table_proto_2futils_2fblur_5fresult_2eproto_sccs, descriptor_table_proto_2futils_2fblur_5fresult_2eproto_deps, 1, 3,
  schemas, file_default_instances, TableStruct_proto_2futils_2fblur_5fresult_2eproto::offsets,
  file_level_metadata_proto_2futils_2fblur_5fresult_2eproto, 1, file_level_enum_descriptors_proto_2futils_2fblur_5fresult_2eproto, file_level_service_descriptors_proto_2futils_2fblur_5fresult_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2futils_2fblur_5fresult_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2futils_2fblur_5fresult_2eproto)), true);

// ===================================================================

void BlurResult::InitAsDefaultInstance() {
  ::_BlurResult_default_instance_._instance.get_mutable()->status_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
}
class BlurResult::_Internal {
 public:
  static const ::ResponseStatus& status(const BlurResult* msg);
};

const ::ResponseStatus&
BlurResult::_Internal::status(const BlurResult* msg) {
  return *msg->status_;
}
void BlurResult::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void BlurResult::clear_bboxes() {
  bboxes_.Clear();
}
BlurResult::BlurResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  bboxes_(arena),
  local_extents_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:BlurResult)
}
BlurResult::BlurResult(const BlurResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      bboxes_(from.bboxes_),
      local_extents_(from.local_extents_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  ::memcpy(&extent_, &from.extent_,
    static_cast<size_t>(reinterpret_cast<char*>(&global_extent_) -
    reinterpret_cast<char*>(&extent_)) + sizeof(global_extent_));
  // @@protoc_insertion_point(copy_constructor:BlurResult)
}

void BlurResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BlurResult_proto_2futils_2fblur_5fresult_2eproto.base);
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&global_extent_) -
      reinterpret_cast<char*>(&status_)) + sizeof(global_extent_));
}

BlurResult::~BlurResult() {
  // @@protoc_insertion_point(destructor:BlurResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BlurResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void BlurResult::ArenaDtor(void* object) {
  BlurResult* _this = reinterpret_cast< BlurResult* >(object);
  (void)_this;
}
void BlurResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BlurResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BlurResult& BlurResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BlurResult_proto_2futils_2fblur_5fresult_2eproto.base);
  return *internal_default_instance();
}


void BlurResult::Clear() {
// @@protoc_insertion_point(message_clear_start:BlurResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bboxes_.Clear();
  local_extents_.Clear();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  ::memset(&extent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&global_extent_) -
      reinterpret_cast<char*>(&extent_)) + sizeof(global_extent_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlurResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ResponseStatus status = 1 [deprecated = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float extent = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          extent_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // repeated .BoundingBox bboxes = 3 [deprecated = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_bboxes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // float global_extent = 4 [deprecated = true];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          global_extent_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // repeated float local_extents = 5 [deprecated = true];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_local_extents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45) {
          _internal_add_local_extents(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BlurResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:BlurResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus status = 1 [deprecated = true];
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // float extent = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];
  if (!(this->extent() <= 0 && this->extent() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_extent(), target);
  }

  // repeated .BoundingBox bboxes = 3 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_bboxes_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_bboxes(i), target, stream);
  }

  // float global_extent = 4 [deprecated = true];
  if (!(this->global_extent() <= 0 && this->global_extent() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_global_extent(), target);
  }

  // repeated float local_extents = 5 [deprecated = true];
  if (this->_internal_local_extents_size() > 0) {
    target = stream->WriteFixedPacked(5, _internal_local_extents(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BlurResult)
  return target;
}

size_t BlurResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BlurResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .BoundingBox bboxes = 3 [deprecated = true];
  total_size += 1UL * this->_internal_bboxes_size();
  for (const auto& msg : this->bboxes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated float local_extents = 5 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_local_extents_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _local_extents_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .ResponseStatus status = 1 [deprecated = true];
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // float extent = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];
  if (!(this->extent() <= 0 && this->extent() >= 0)) {
    total_size += 1 + 4;
  }

  // float global_extent = 4 [deprecated = true];
  if (!(this->global_extent() <= 0 && this->global_extent() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlurResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BlurResult)
  GOOGLE_DCHECK_NE(&from, this);
  const BlurResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BlurResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BlurResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BlurResult)
    MergeFrom(*source);
  }
}

void BlurResult::MergeFrom(const BlurResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BlurResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bboxes_.MergeFrom(from.bboxes_);
  local_extents_.MergeFrom(from.local_extents_);
  if (from.has_status()) {
    _internal_mutable_status()->::ResponseStatus::MergeFrom(from._internal_status());
  }
  if (!(from.extent() <= 0 && from.extent() >= 0)) {
    _internal_set_extent(from._internal_extent());
  }
  if (!(from.global_extent() <= 0 && from.global_extent() >= 0)) {
    _internal_set_global_extent(from._internal_global_extent());
  }
}

void BlurResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BlurResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlurResult::CopyFrom(const BlurResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BlurResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlurResult::IsInitialized() const {
  return true;
}

void BlurResult::InternalSwap(BlurResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  bboxes_.InternalSwap(&other->bboxes_);
  local_extents_.InternalSwap(&other->local_extents_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlurResult, global_extent_)
      + sizeof(BlurResult::global_extent_)
      - PROTOBUF_FIELD_OFFSET(BlurResult, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BlurResult::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::BlurResult* Arena::CreateMaybeMessage< ::BlurResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::BlurResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
