# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from proto.kepler import kepler_pb2 as proto_dot_kepler_dot_kepler__pb2
from proto.kepler import kepler_service_pb2 as proto_dot_kepler_dot_kepler__service__pb2


class KeplerServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStatus = channel.unary_unary(
                '/kepler_clarifai.KeplerService/GetStatus',
                request_serializer=proto_dot_kepler_dot_kepler__service__pb2.GetStatusRequest.SerializeToString,
                response_deserializer=proto_dot_kepler_dot_kepler__service__pb2.GetStatusResponse.FromString,
                )
        self.ProcessFrameBundle = channel.unary_unary(
                '/kepler_clarifai.KeplerService/ProcessFrameBundle',
                request_serializer=proto_dot_kepler_dot_kepler__pb2.FrameBundle.SerializeToString,
                response_deserializer=proto_dot_kepler_dot_kepler__service__pb2.Response.FromString,
                )


class KeplerServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GetStatus(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessFrameBundle(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KeplerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatus,
                    request_deserializer=proto_dot_kepler_dot_kepler__service__pb2.GetStatusRequest.FromString,
                    response_serializer=proto_dot_kepler_dot_kepler__service__pb2.GetStatusResponse.SerializeToString,
            ),
            'ProcessFrameBundle': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessFrameBundle,
                    request_deserializer=proto_dot_kepler_dot_kepler__pb2.FrameBundle.FromString,
                    response_serializer=proto_dot_kepler_dot_kepler__service__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kepler_clarifai.KeplerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class KeplerService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kepler_clarifai.KeplerService/GetStatus',
            proto_dot_kepler_dot_kepler__service__pb2.GetStatusRequest.SerializeToString,
            proto_dot_kepler_dot_kepler__service__pb2.GetStatusResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProcessFrameBundle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kepler_clarifai.KeplerService/ProcessFrameBundle',
            proto_dot_kepler_dot_kepler__pb2.FrameBundle.SerializeToString,
            proto_dot_kepler_dot_kepler__service__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
