// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/evaluation/evaluation.proto

#include "proto/evaluation/evaluation.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proto_2fevaluation_2fclassification_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ClassificationEvalResult_proto_2fevaluation_2fclassification_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fevaluation_2fdetection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DetectionEvalResult_proto_2fevaluation_2fdetection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fpredictor_2fpredictor_5fmetrics_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_MulticlassMetrics_proto_2fpredictor_2fpredictor_5fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fevaluation_2focr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OCREvalResult_proto_2fevaluation_2focr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
class EvaluationResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EvaluationResult> _instance;
} _EvaluationResult_default_instance_;
static void InitDefaultsscc_info_EvaluationResult_proto_2fevaluation_2fevaluation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_EvaluationResult_default_instance_;
    new (ptr) ::EvaluationResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EvaluationResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_EvaluationResult_proto_2fevaluation_2fevaluation_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_EvaluationResult_proto_2fevaluation_2fevaluation_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_ClassificationEvalResult_proto_2fevaluation_2fclassification_2eproto.base,
      &scc_info_DetectionEvalResult_proto_2fevaluation_2fdetection_2eproto.base,
      &scc_info_OCREvalResult_proto_2fevaluation_2focr_2eproto.base,
      &scc_info_MulticlassMetrics_proto_2fpredictor_2fpredictor_5fmetrics_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2fevaluation_2fevaluation_2eproto[1];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_proto_2fevaluation_2fevaluation_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2fevaluation_2fevaluation_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2fevaluation_2fevaluation_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::EvaluationResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::EvaluationResult, eid_),
  PROTOBUF_FIELD_OFFSET(::EvaluationResult, training_epoch_),
  PROTOBUF_FIELD_OFFSET(::EvaluationResult, training_step_),
  PROTOBUF_FIELD_OFFSET(::EvaluationResult, eval_dataset_name_),
  PROTOBUF_FIELD_OFFSET(::EvaluationResult, eval_dataset_split_),
  PROTOBUF_FIELD_OFFSET(::EvaluationResult, created_at_),
  PROTOBUF_FIELD_OFFSET(::EvaluationResult, kind_),
  PROTOBUF_FIELD_OFFSET(::EvaluationResult, classification_),
  PROTOBUF_FIELD_OFFSET(::EvaluationResult, detection_),
  PROTOBUF_FIELD_OFFSET(::EvaluationResult, ocr_),
  PROTOBUF_FIELD_OFFSET(::EvaluationResult, eval_metrics_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::EvaluationResult)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_EvaluationResult_default_instance_),
};

const char descriptor_table_protodef_proto_2fevaluation_2fevaluation_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!proto/evaluation/evaluation.proto\032\'pro"
  "to/predictor/predictor_metrics.proto\032%pr"
  "oto/evaluation/classification.proto\032 pro"
  "to/evaluation/detection.proto\032\032proto/eva"
  "luation/ocr.proto\032\037google/protobuf/times"
  "tamp.proto\"\277\003\n\020EvaluationResult\022\013\n\003eid\030\001"
  " \001(\t\022\026\n\016training_epoch\030\002 \001(\003\022\025\n\rtraining"
  "_step\030\003 \001(\003\022\031\n\021eval_dataset_name\030\004 \001(\t\022\032"
  "\n\022eval_dataset_split\030\005 \001(\t\022.\n\ncreated_at"
  "\030\006 \001(\0132\032.google.protobuf.Timestamp\022$\n\004ki"
  "nd\030\n \001(\0162\026.EvaluationResult.Kind\0221\n\016clas"
  "sification\030\013 \001(\0132\031.ClassificationEvalRes"
  "ult\022\'\n\tdetection\030\014 \001(\0132\024.DetectionEvalRe"
  "sult\022\033\n\003ocr\030\r \001(\0132\016.OCREvalResult\022(\n\014eva"
  "l_metrics\030\016 \001(\0132\022.MulticlassMetrics\"\?\n\004K"
  "ind\022\013\n\007INVALID\020\000\022\022\n\016CLASSIFICATION\020\001\022\r\n\t"
  "DETECTION\020\002\022\007\n\003OCR\020\003B\014Z\nevaluationb\006prot"
  "o3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2fevaluation_2fevaluation_2eproto_deps[5] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_proto_2fevaluation_2fclassification_2eproto,
  &::descriptor_table_proto_2fevaluation_2fdetection_2eproto,
  &::descriptor_table_proto_2fevaluation_2focr_2eproto,
  &::descriptor_table_proto_2fpredictor_2fpredictor_5fmetrics_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2fevaluation_2fevaluation_2eproto_sccs[1] = {
  &scc_info_EvaluationResult_proto_2fevaluation_2fevaluation_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2fevaluation_2fevaluation_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fevaluation_2fevaluation_2eproto = {
  false, false, descriptor_table_protodef_proto_2fevaluation_2fevaluation_2eproto, "proto/evaluation/evaluation.proto", 682,
  &descriptor_table_proto_2fevaluation_2fevaluation_2eproto_once, descriptor_table_proto_2fevaluation_2fevaluation_2eproto_sccs, descriptor_table_proto_2fevaluation_2fevaluation_2eproto_deps, 1, 5,
  schemas, file_default_instances, TableStruct_proto_2fevaluation_2fevaluation_2eproto::offsets,
  file_level_metadata_proto_2fevaluation_2fevaluation_2eproto, 1, file_level_enum_descriptors_proto_2fevaluation_2fevaluation_2eproto, file_level_service_descriptors_proto_2fevaluation_2fevaluation_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2fevaluation_2fevaluation_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2fevaluation_2fevaluation_2eproto)), true);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EvaluationResult_Kind_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proto_2fevaluation_2fevaluation_2eproto);
  return file_level_enum_descriptors_proto_2fevaluation_2fevaluation_2eproto[0];
}
bool EvaluationResult_Kind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr EvaluationResult_Kind EvaluationResult::INVALID;
constexpr EvaluationResult_Kind EvaluationResult::CLASSIFICATION;
constexpr EvaluationResult_Kind EvaluationResult::DETECTION;
constexpr EvaluationResult_Kind EvaluationResult::OCR;
constexpr EvaluationResult_Kind EvaluationResult::Kind_MIN;
constexpr EvaluationResult_Kind EvaluationResult::Kind_MAX;
constexpr int EvaluationResult::Kind_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void EvaluationResult::InitAsDefaultInstance() {
  ::_EvaluationResult_default_instance_._instance.get_mutable()->created_at_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::_EvaluationResult_default_instance_._instance.get_mutable()->classification_ = const_cast< ::ClassificationEvalResult*>(
      ::ClassificationEvalResult::internal_default_instance());
  ::_EvaluationResult_default_instance_._instance.get_mutable()->detection_ = const_cast< ::DetectionEvalResult*>(
      ::DetectionEvalResult::internal_default_instance());
  ::_EvaluationResult_default_instance_._instance.get_mutable()->ocr_ = const_cast< ::OCREvalResult*>(
      ::OCREvalResult::internal_default_instance());
  ::_EvaluationResult_default_instance_._instance.get_mutable()->eval_metrics_ = const_cast< ::MulticlassMetrics*>(
      ::MulticlassMetrics::internal_default_instance());
}
class EvaluationResult::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const EvaluationResult* msg);
  static const ::ClassificationEvalResult& classification(const EvaluationResult* msg);
  static const ::DetectionEvalResult& detection(const EvaluationResult* msg);
  static const ::OCREvalResult& ocr(const EvaluationResult* msg);
  static const ::MulticlassMetrics& eval_metrics(const EvaluationResult* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
EvaluationResult::_Internal::created_at(const EvaluationResult* msg) {
  return *msg->created_at_;
}
const ::ClassificationEvalResult&
EvaluationResult::_Internal::classification(const EvaluationResult* msg) {
  return *msg->classification_;
}
const ::DetectionEvalResult&
EvaluationResult::_Internal::detection(const EvaluationResult* msg) {
  return *msg->detection_;
}
const ::OCREvalResult&
EvaluationResult::_Internal::ocr(const EvaluationResult* msg) {
  return *msg->ocr_;
}
const ::MulticlassMetrics&
EvaluationResult::_Internal::eval_metrics(const EvaluationResult* msg) {
  return *msg->eval_metrics_;
}
void EvaluationResult::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
void EvaluationResult::clear_classification() {
  if (GetArena() == nullptr && classification_ != nullptr) {
    delete classification_;
  }
  classification_ = nullptr;
}
void EvaluationResult::clear_detection() {
  if (GetArena() == nullptr && detection_ != nullptr) {
    delete detection_;
  }
  detection_ = nullptr;
}
void EvaluationResult::clear_ocr() {
  if (GetArena() == nullptr && ocr_ != nullptr) {
    delete ocr_;
  }
  ocr_ = nullptr;
}
void EvaluationResult::clear_eval_metrics() {
  if (GetArena() == nullptr && eval_metrics_ != nullptr) {
    delete eval_metrics_;
  }
  eval_metrics_ = nullptr;
}
EvaluationResult::EvaluationResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:EvaluationResult)
}
EvaluationResult::EvaluationResult(const EvaluationResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  eid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_eid().empty()) {
    eid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_eid(),
      GetArena());
  }
  eval_dataset_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_eval_dataset_name().empty()) {
    eval_dataset_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_eval_dataset_name(),
      GetArena());
  }
  eval_dataset_split_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_eval_dataset_split().empty()) {
    eval_dataset_split_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_eval_dataset_split(),
      GetArena());
  }
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  if (from._internal_has_classification()) {
    classification_ = new ::ClassificationEvalResult(*from.classification_);
  } else {
    classification_ = nullptr;
  }
  if (from._internal_has_detection()) {
    detection_ = new ::DetectionEvalResult(*from.detection_);
  } else {
    detection_ = nullptr;
  }
  if (from._internal_has_ocr()) {
    ocr_ = new ::OCREvalResult(*from.ocr_);
  } else {
    ocr_ = nullptr;
  }
  if (from._internal_has_eval_metrics()) {
    eval_metrics_ = new ::MulticlassMetrics(*from.eval_metrics_);
  } else {
    eval_metrics_ = nullptr;
  }
  ::memcpy(&training_epoch_, &from.training_epoch_,
    static_cast<size_t>(reinterpret_cast<char*>(&kind_) -
    reinterpret_cast<char*>(&training_epoch_)) + sizeof(kind_));
  // @@protoc_insertion_point(copy_constructor:EvaluationResult)
}

void EvaluationResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EvaluationResult_proto_2fevaluation_2fevaluation_2eproto.base);
  eid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  eval_dataset_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  eval_dataset_split_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&created_at_)) + sizeof(kind_));
}

EvaluationResult::~EvaluationResult() {
  // @@protoc_insertion_point(destructor:EvaluationResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EvaluationResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  eid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  eval_dataset_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  eval_dataset_split_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete classification_;
  if (this != internal_default_instance()) delete detection_;
  if (this != internal_default_instance()) delete ocr_;
  if (this != internal_default_instance()) delete eval_metrics_;
}

void EvaluationResult::ArenaDtor(void* object) {
  EvaluationResult* _this = reinterpret_cast< EvaluationResult* >(object);
  (void)_this;
}
void EvaluationResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EvaluationResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EvaluationResult& EvaluationResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EvaluationResult_proto_2fevaluation_2fevaluation_2eproto.base);
  return *internal_default_instance();
}


void EvaluationResult::Clear() {
// @@protoc_insertion_point(message_clear_start:EvaluationResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  eval_dataset_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  eval_dataset_split_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  if (GetArena() == nullptr && classification_ != nullptr) {
    delete classification_;
  }
  classification_ = nullptr;
  if (GetArena() == nullptr && detection_ != nullptr) {
    delete detection_;
  }
  detection_ = nullptr;
  if (GetArena() == nullptr && ocr_ != nullptr) {
    delete ocr_;
  }
  ocr_ = nullptr;
  if (GetArena() == nullptr && eval_metrics_ != nullptr) {
    delete eval_metrics_;
  }
  eval_metrics_ = nullptr;
  ::memset(&training_epoch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&training_epoch_)) + sizeof(kind_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EvaluationResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string eid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_eid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "EvaluationResult.eid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 training_epoch = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          training_epoch_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 training_step = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          training_step_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string eval_dataset_name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_eval_dataset_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "EvaluationResult.eval_dataset_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string eval_dataset_split = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_eval_dataset_split();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "EvaluationResult.eval_dataset_split"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .EvaluationResult.Kind kind = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_kind(static_cast<::EvaluationResult_Kind>(val));
        } else goto handle_unusual;
        continue;
      // .ClassificationEvalResult classification = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_classification(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .DetectionEvalResult detection = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_detection(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .OCREvalResult ocr = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_ocr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .MulticlassMetrics eval_metrics = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_eval_metrics(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EvaluationResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:EvaluationResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string eid = 1;
  if (this->eid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_eid().data(), static_cast<int>(this->_internal_eid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "EvaluationResult.eid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_eid(), target);
  }

  // int64 training_epoch = 2;
  if (this->training_epoch() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_training_epoch(), target);
  }

  // int64 training_step = 3;
  if (this->training_step() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_training_step(), target);
  }

  // string eval_dataset_name = 4;
  if (this->eval_dataset_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_eval_dataset_name().data(), static_cast<int>(this->_internal_eval_dataset_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "EvaluationResult.eval_dataset_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_eval_dataset_name(), target);
  }

  // string eval_dataset_split = 5;
  if (this->eval_dataset_split().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_eval_dataset_split().data(), static_cast<int>(this->_internal_eval_dataset_split().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "EvaluationResult.eval_dataset_split");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_eval_dataset_split(), target);
  }

  // .google.protobuf.Timestamp created_at = 6;
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::created_at(this), target, stream);
  }

  // .EvaluationResult.Kind kind = 10;
  if (this->kind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_kind(), target);
  }

  // .ClassificationEvalResult classification = 11;
  if (this->has_classification()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::classification(this), target, stream);
  }

  // .DetectionEvalResult detection = 12;
  if (this->has_detection()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::detection(this), target, stream);
  }

  // .OCREvalResult ocr = 13;
  if (this->has_ocr()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::ocr(this), target, stream);
  }

  // .MulticlassMetrics eval_metrics = 14;
  if (this->has_eval_metrics()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::eval_metrics(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EvaluationResult)
  return target;
}

size_t EvaluationResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EvaluationResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string eid = 1;
  if (this->eid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_eid());
  }

  // string eval_dataset_name = 4;
  if (this->eval_dataset_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_eval_dataset_name());
  }

  // string eval_dataset_split = 5;
  if (this->eval_dataset_split().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_eval_dataset_split());
  }

  // .google.protobuf.Timestamp created_at = 6;
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .ClassificationEvalResult classification = 11;
  if (this->has_classification()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *classification_);
  }

  // .DetectionEvalResult detection = 12;
  if (this->has_detection()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *detection_);
  }

  // .OCREvalResult ocr = 13;
  if (this->has_ocr()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ocr_);
  }

  // .MulticlassMetrics eval_metrics = 14;
  if (this->has_eval_metrics()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *eval_metrics_);
  }

  // int64 training_epoch = 2;
  if (this->training_epoch() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_training_epoch());
  }

  // int64 training_step = 3;
  if (this->training_step() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_training_step());
  }

  // .EvaluationResult.Kind kind = 10;
  if (this->kind() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_kind());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EvaluationResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EvaluationResult)
  GOOGLE_DCHECK_NE(&from, this);
  const EvaluationResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EvaluationResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EvaluationResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EvaluationResult)
    MergeFrom(*source);
  }
}

void EvaluationResult::MergeFrom(const EvaluationResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EvaluationResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.eid().size() > 0) {
    _internal_set_eid(from._internal_eid());
  }
  if (from.eval_dataset_name().size() > 0) {
    _internal_set_eval_dataset_name(from._internal_eval_dataset_name());
  }
  if (from.eval_dataset_split().size() > 0) {
    _internal_set_eval_dataset_split(from._internal_eval_dataset_split());
  }
  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from.has_classification()) {
    _internal_mutable_classification()->::ClassificationEvalResult::MergeFrom(from._internal_classification());
  }
  if (from.has_detection()) {
    _internal_mutable_detection()->::DetectionEvalResult::MergeFrom(from._internal_detection());
  }
  if (from.has_ocr()) {
    _internal_mutable_ocr()->::OCREvalResult::MergeFrom(from._internal_ocr());
  }
  if (from.has_eval_metrics()) {
    _internal_mutable_eval_metrics()->::MulticlassMetrics::MergeFrom(from._internal_eval_metrics());
  }
  if (from.training_epoch() != 0) {
    _internal_set_training_epoch(from._internal_training_epoch());
  }
  if (from.training_step() != 0) {
    _internal_set_training_step(from._internal_training_step());
  }
  if (from.kind() != 0) {
    _internal_set_kind(from._internal_kind());
  }
}

void EvaluationResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EvaluationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvaluationResult::CopyFrom(const EvaluationResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EvaluationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvaluationResult::IsInitialized() const {
  return true;
}

void EvaluationResult::InternalSwap(EvaluationResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  eid_.Swap(&other->eid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  eval_dataset_name_.Swap(&other->eval_dataset_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  eval_dataset_split_.Swap(&other->eval_dataset_split_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EvaluationResult, kind_)
      + sizeof(EvaluationResult::kind_)
      - PROTOBUF_FIELD_OFFSET(EvaluationResult, created_at_)>(
          reinterpret_cast<char*>(&created_at_),
          reinterpret_cast<char*>(&other->created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EvaluationResult::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::EvaluationResult* Arena::CreateMaybeMessage< ::EvaluationResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::EvaluationResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
