// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/predictor/predictor.proto

#include "proto/predictor/predictor.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proto_2fconcept_5ftrainer_5fdump_2fconcept_5ftrainer_5fdump_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ConceptTrainerDump_proto_2fconcept_5ftrainer_5fdump_2fconcept_5ftrainer_5fdump_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fdatabatch_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_DataBatch_proto_2futils_2fdatabatch_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2fembedding_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Embedding_proto_2futils_2fembedding_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fpredictor_2fpredictor_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EvalSpec_proto_2fpredictor_2fpredictor_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fpredictor_2fpredictor_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PredictorGetWeightsResponse_WeightsEntry_DoNotUse_proto_2fpredictor_2fpredictor_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fpredictor_2fpredictor_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PredictorTrainRequest_proto_2fpredictor_2fpredictor_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fpredictor_2fpredictor_5fmetrics_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ProgressStatus_proto_2fpredictor_2fpredictor_5fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2frequest_5fmeta_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2futils_2frequest_5fmeta_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto;
class PredictorPredictRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PredictorPredictRequest> _instance;
} _PredictorPredictRequest_default_instance_;
class PredictorPredictSQLQueryRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PredictorPredictSQLQueryRequest> _instance;
} _PredictorPredictSQLQueryRequest_default_instance_;
class PredictorPredictResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PredictorPredictResponse> _instance;
} _PredictorPredictResponse_default_instance_;
class PredictorTrainAndEvalRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PredictorTrainAndEvalRequest> _instance;
} _PredictorTrainAndEvalRequest_default_instance_;
class PredictorTrainRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PredictorTrainRequest> _instance;
  const ::DataBatch* data_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sql_query_;
} _PredictorTrainRequest_default_instance_;
class PredictorTrainResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PredictorTrainResponse> _instance;
} _PredictorTrainResponse_default_instance_;
class PredictorGetWeightsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PredictorGetWeightsRequest> _instance;
} _PredictorGetWeightsRequest_default_instance_;
class PredictorGetWeightsResponse_WeightsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PredictorGetWeightsResponse_WeightsEntry_DoNotUse> _instance;
} _PredictorGetWeightsResponse_WeightsEntry_DoNotUse_default_instance_;
class PredictorGetWeightsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PredictorGetWeightsResponse> _instance;
} _PredictorGetWeightsResponse_default_instance_;
class EvalSpecDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EvalSpec> _instance;
} _EvalSpec_default_instance_;
static void InitDefaultsscc_info_EvalSpec_proto_2fpredictor_2fpredictor_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_EvalSpec_default_instance_;
    new (ptr) ::EvalSpec();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EvalSpec::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EvalSpec_proto_2fpredictor_2fpredictor_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EvalSpec_proto_2fpredictor_2fpredictor_2eproto}, {}};

static void InitDefaultsscc_info_PredictorGetWeightsRequest_proto_2fpredictor_2fpredictor_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PredictorGetWeightsRequest_default_instance_;
    new (ptr) ::PredictorGetWeightsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PredictorGetWeightsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PredictorGetWeightsRequest_proto_2fpredictor_2fpredictor_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PredictorGetWeightsRequest_proto_2fpredictor_2fpredictor_2eproto}, {
      &scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto.base,}};

static void InitDefaultsscc_info_PredictorGetWeightsResponse_proto_2fpredictor_2fpredictor_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PredictorGetWeightsResponse_default_instance_;
    new (ptr) ::PredictorGetWeightsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PredictorGetWeightsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_PredictorGetWeightsResponse_proto_2fpredictor_2fpredictor_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_PredictorGetWeightsResponse_proto_2fpredictor_2fpredictor_2eproto}, {
      &scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto.base,
      &scc_info_PredictorGetWeightsResponse_WeightsEntry_DoNotUse_proto_2fpredictor_2fpredictor_2eproto.base,
      &scc_info_ConceptTrainerDump_proto_2fconcept_5ftrainer_5fdump_2fconcept_5ftrainer_5fdump_2eproto.base,}};

static void InitDefaultsscc_info_PredictorGetWeightsResponse_WeightsEntry_DoNotUse_proto_2fpredictor_2fpredictor_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PredictorGetWeightsResponse_WeightsEntry_DoNotUse_default_instance_;
    new (ptr) ::PredictorGetWeightsResponse_WeightsEntry_DoNotUse();
  }
  ::PredictorGetWeightsResponse_WeightsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PredictorGetWeightsResponse_WeightsEntry_DoNotUse_proto_2fpredictor_2fpredictor_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PredictorGetWeightsResponse_WeightsEntry_DoNotUse_proto_2fpredictor_2fpredictor_2eproto}, {
      &scc_info_Embedding_proto_2futils_2fembedding_2eproto.base,}};

static void InitDefaultsscc_info_PredictorPredictRequest_proto_2fpredictor_2fpredictor_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PredictorPredictRequest_default_instance_;
    new (ptr) ::PredictorPredictRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PredictorPredictRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PredictorPredictRequest_proto_2fpredictor_2fpredictor_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_PredictorPredictRequest_proto_2fpredictor_2fpredictor_2eproto}, {
      &scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto.base,
      &scc_info_DataBatch_proto_2futils_2fdatabatch_2eproto.base,}};

static void InitDefaultsscc_info_PredictorPredictResponse_proto_2fpredictor_2fpredictor_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PredictorPredictResponse_default_instance_;
    new (ptr) ::PredictorPredictResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PredictorPredictResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PredictorPredictResponse_proto_2fpredictor_2fpredictor_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_PredictorPredictResponse_proto_2fpredictor_2fpredictor_2eproto}, {
      &scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto.base,
      &scc_info_DataBatch_proto_2futils_2fdatabatch_2eproto.base,}};

static void InitDefaultsscc_info_PredictorPredictSQLQueryRequest_proto_2fpredictor_2fpredictor_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PredictorPredictSQLQueryRequest_default_instance_;
    new (ptr) ::PredictorPredictSQLQueryRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PredictorPredictSQLQueryRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PredictorPredictSQLQueryRequest_proto_2fpredictor_2fpredictor_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PredictorPredictSQLQueryRequest_proto_2fpredictor_2fpredictor_2eproto}, {
      &scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto.base,}};

static void InitDefaultsscc_info_PredictorTrainAndEvalRequest_proto_2fpredictor_2fpredictor_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PredictorTrainAndEvalRequest_default_instance_;
    new (ptr) ::PredictorTrainAndEvalRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PredictorTrainAndEvalRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_PredictorTrainAndEvalRequest_proto_2fpredictor_2fpredictor_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_PredictorTrainAndEvalRequest_proto_2fpredictor_2fpredictor_2eproto}, {
      &scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto.base,
      &scc_info_PredictorTrainRequest_proto_2fpredictor_2fpredictor_2eproto.base,
      &scc_info_EvalSpec_proto_2fpredictor_2fpredictor_2eproto.base,}};

static void InitDefaultsscc_info_PredictorTrainRequest_proto_2fpredictor_2fpredictor_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PredictorTrainRequest_default_instance_;
    new (ptr) ::PredictorTrainRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PredictorTrainRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PredictorTrainRequest_proto_2fpredictor_2fpredictor_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_PredictorTrainRequest_proto_2fpredictor_2fpredictor_2eproto}, {
      &scc_info_RequestMeta_proto_2futils_2frequest_5fmeta_2eproto.base,
      &scc_info_DataBatch_proto_2futils_2fdatabatch_2eproto.base,}};

static void InitDefaultsscc_info_PredictorTrainResponse_proto_2fpredictor_2fpredictor_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PredictorTrainResponse_default_instance_;
    new (ptr) ::PredictorTrainResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PredictorTrainResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_PredictorTrainResponse_proto_2fpredictor_2fpredictor_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_PredictorTrainResponse_proto_2fpredictor_2fpredictor_2eproto}, {
      &scc_info_ResponseStatus_proto_2futils_2frequest_5fmeta_2eproto.base,
      &scc_info_ConceptTrainerDump_proto_2fconcept_5ftrainer_5fdump_2fconcept_5ftrainer_5fdump_2eproto.base,
      &scc_info_ProgressStatus_proto_2fpredictor_2fpredictor_5fmetrics_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2fpredictor_2fpredictor_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_2fpredictor_2fpredictor_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2fpredictor_2fpredictor_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2fpredictor_2fpredictor_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PredictorPredictRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PredictorPredictRequest, meta_),
  PROTOBUF_FIELD_OFFSET(::PredictorPredictRequest, data_),
  PROTOBUF_FIELD_OFFSET(::PredictorPredictRequest, trainer_name_),
  PROTOBUF_FIELD_OFFSET(::PredictorPredictRequest, aiids_),
  PROTOBUF_FIELD_OFFSET(::PredictorPredictRequest, topk_),
  PROTOBUF_FIELD_OFFSET(::PredictorPredictRequest, echo_aiids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PredictorPredictSQLQueryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PredictorPredictSQLQueryRequest, meta_),
  PROTOBUF_FIELD_OFFSET(::PredictorPredictSQLQueryRequest, sql_query_),
  PROTOBUF_FIELD_OFFSET(::PredictorPredictSQLQueryRequest, trainer_name_),
  PROTOBUF_FIELD_OFFSET(::PredictorPredictSQLQueryRequest, top_k_data_examples_),
  PROTOBUF_FIELD_OFFSET(::PredictorPredictSQLQueryRequest, aiids_),
  PROTOBUF_FIELD_OFFSET(::PredictorPredictSQLQueryRequest, top_k_predictions_),
  PROTOBUF_FIELD_OFFSET(::PredictorPredictSQLQueryRequest, echo_aiids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PredictorPredictResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PredictorPredictResponse, status_),
  PROTOBUF_FIELD_OFFSET(::PredictorPredictResponse, results_),
  PROTOBUF_FIELD_OFFSET(::PredictorPredictResponse, aiids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PredictorTrainAndEvalRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PredictorTrainAndEvalRequest, meta_),
  PROTOBUF_FIELD_OFFSET(::PredictorTrainAndEvalRequest, train_request_),
  PROTOBUF_FIELD_OFFSET(::PredictorTrainAndEvalRequest, eval_spec_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PredictorTrainRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::PredictorTrainRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PredictorTrainRequest, meta_),
  PROTOBUF_FIELD_OFFSET(::PredictorTrainRequest, trainer_name_),
  PROTOBUF_FIELD_OFFSET(::PredictorTrainRequest, use_prev_trained_),
  PROTOBUF_FIELD_OFFSET(::PredictorTrainRequest, training_type_),
  offsetof(::PredictorTrainRequestDefaultTypeInternal, data_),
  offsetof(::PredictorTrainRequestDefaultTypeInternal, sql_query_),
  PROTOBUF_FIELD_OFFSET(::PredictorTrainRequest, embeddings_model_),
  PROTOBUF_FIELD_OFFSET(::PredictorTrainRequest, aiids_),
  PROTOBUF_FIELD_OFFSET(::PredictorTrainRequest, train_iters_),
  PROTOBUF_FIELD_OFFSET(::PredictorTrainRequest, training_environment_),
  PROTOBUF_FIELD_OFFSET(::PredictorTrainRequest, hyper_parameters_),
  PROTOBUF_FIELD_OFFSET(::PredictorTrainRequest, missing_positive_example_policy_),
  PROTOBUF_FIELD_OFFSET(::PredictorTrainRequest, training_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PredictorTrainResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PredictorTrainResponse, status_),
  PROTOBUF_FIELD_OFFSET(::PredictorTrainResponse, trainer_),
  PROTOBUF_FIELD_OFFSET(::PredictorTrainResponse, failed_aiids_),
  PROTOBUF_FIELD_OFFSET(::PredictorTrainResponse, progress_status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PredictorGetWeightsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PredictorGetWeightsRequest, meta_),
  PROTOBUF_FIELD_OFFSET(::PredictorGetWeightsRequest, trainer_name_),
  PROTOBUF_FIELD_OFFSET(::PredictorGetWeightsRequest, embeddings_model_),
  PROTOBUF_FIELD_OFFSET(::PredictorGetWeightsResponse_WeightsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::PredictorGetWeightsResponse_WeightsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PredictorGetWeightsResponse_WeightsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::PredictorGetWeightsResponse_WeightsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PredictorGetWeightsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PredictorGetWeightsResponse, status_),
  PROTOBUF_FIELD_OFFSET(::PredictorGetWeightsResponse, weights_),
  PROTOBUF_FIELD_OFFSET(::PredictorGetWeightsResponse, trainer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::EvalSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::EvalSpec, confusion_matrix_topk_),
  PROTOBUF_FIELD_OFFSET(::EvalSpec, cooccurrence_matrix_topk_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PredictorPredictRequest)},
  { 11, -1, sizeof(::PredictorPredictSQLQueryRequest)},
  { 23, -1, sizeof(::PredictorPredictResponse)},
  { 31, -1, sizeof(::PredictorTrainAndEvalRequest)},
  { 39, -1, sizeof(::PredictorTrainRequest)},
  { 57, -1, sizeof(::PredictorTrainResponse)},
  { 66, -1, sizeof(::PredictorGetWeightsRequest)},
  { 74, 81, sizeof(::PredictorGetWeightsResponse_WeightsEntry_DoNotUse)},
  { 83, -1, sizeof(::PredictorGetWeightsResponse)},
  { 91, -1, sizeof(::EvalSpec)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PredictorPredictRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PredictorPredictSQLQueryRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PredictorPredictResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PredictorTrainAndEvalRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PredictorTrainRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PredictorTrainResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PredictorGetWeightsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PredictorGetWeightsResponse_WeightsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PredictorGetWeightsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_EvalSpec_default_instance_),
};

const char descriptor_table_protodef_proto_2fpredictor_2fpredictor_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\037proto/predictor/predictor.proto\0325proto"
  "/concept_trainer_dump/concept_trainer_du"
  "mp.proto\032\'proto/predictor/predictor_metr"
  "ics.proto\032\033proto/utils/databatch.proto\032\033"
  "proto/utils/embedding.proto\032\036proto/utils"
  "/request_meta.proto\"\226\001\n\027PredictorPredict"
  "Request\022\032\n\004meta\030\001 \001(\0132\014.RequestMeta\022\030\n\004d"
  "ata\030\002 \001(\0132\n.DataBatch\022\024\n\014trainer_name\030\003 "
  "\001(\t\022\r\n\005aiids\030\004 \003(\t\022\014\n\004topk\030\005 \001(\005\022\022\n\necho"
  "_aiids\030\006 \001(\010\"\301\001\n\037PredictorPredictSQLQuer"
  "yRequest\022\032\n\004meta\030\001 \001(\0132\014.RequestMeta\022\021\n\t"
  "sql_query\030\002 \001(\t\022\024\n\014trainer_name\030\003 \001(\t\022\033\n"
  "\023top_k_data_examples\030\004 \001(\005\022\r\n\005aiids\030\005 \003("
  "\t\022\031\n\021top_k_predictions\030\006 \001(\005\022\022\n\necho_aii"
  "ds\030\007 \001(\010\"g\n\030PredictorPredictResponse\022\037\n\006"
  "status\030\001 \001(\0132\017.ResponseStatus\022\033\n\007results"
  "\030\002 \001(\0132\n.DataBatch\022\r\n\005aiids\030\003 \003(\t\"\207\001\n\034Pr"
  "edictorTrainAndEvalRequest\022\032\n\004meta\030\001 \001(\013"
  "2\014.RequestMeta\022-\n\rtrain_request\030\002 \001(\0132\026."
  "PredictorTrainRequest\022\034\n\teval_spec\030\003 \001(\013"
  "2\t.EvalSpec\"\237\003\n\025PredictorTrainRequest\022\032\n"
  "\004meta\030\001 \001(\0132\014.RequestMeta\022\024\n\014trainer_nam"
  "e\030\002 \001(\t\022\030\n\020use_prev_trained\030\003 \001(\010\022$\n\rtra"
  "ining_type\030\004 \001(\0162\r.TrainingType\022\032\n\004data\030"
  "d \001(\0132\n.DataBatchH\000\022\023\n\tsql_query\030e \001(\tH\000"
  "\022\030\n\020embeddings_model\030\005 \001(\t\022\r\n\005aiids\030\006 \003("
  "\t\022\023\n\013train_iters\030\007 \001(\005\0222\n\024training_envir"
  "onment\030\010 \001(\0162\024.TrainingEnvironment\022\030\n\020hy"
  "per_parameters\030\t \001(\t\022F\n\037missing_positive"
  "_example_policy\030\n \001(\0162\035.MissingPositiveE"
  "xamplePolicyB\017\n\rtraining_data\"\237\001\n\026Predic"
  "torTrainResponse\022\037\n\006status\030\001 \001(\0132\017.Respo"
  "nseStatus\022$\n\007trainer\030\002 \001(\0132\023.ConceptTrai"
  "nerDump\022\024\n\014failed_aiids\030\003 \003(\t\022(\n\017progres"
  "s_status\030\004 \001(\0132\017.ProgressStatus\"l\n\032Predi"
  "ctorGetWeightsRequest\022\032\n\004meta\030\001 \001(\0132\014.Re"
  "questMeta\022\024\n\014trainer_name\030\002 \001(\t\022\034\n\020embed"
  "dings_model\030\005 \001(\tB\002\030\001\"\334\001\n\033PredictorGetWe"
  "ightsResponse\022\037\n\006status\030\001 \001(\0132\017.Response"
  "Status\022:\n\007weights\030\002 \003(\0132).PredictorGetWe"
  "ightsResponse.WeightsEntry\022$\n\007trainer\030\003 "
  "\001(\0132\023.ConceptTrainerDump\032:\n\014WeightsEntry"
  "\022\013\n\003key\030\001 \001(\t\022\031\n\005value\030\002 \001(\0132\n.Embedding"
  ":\0028\001\"K\n\010EvalSpec\022\035\n\025confusion_matrix_top"
  "k\030\001 \001(\005\022 \n\030cooccurrence_matrix_topk\030\002 \001("
  "\0052\374\003\n\020PredictorService\022I\n\020PredictorPredi"
  "ct\022\030.PredictorPredictRequest\032\031.Predictor"
  "PredictResponse\"\000\022Y\n\030PredictorPredictSQL"
  "Query\022 .PredictorPredictSQLQueryRequest\032"
  "\031.PredictorPredictResponse\"\000\022C\n\016Predicto"
  "rTrain\022\026.PredictorTrainRequest\032\027.Predict"
  "orTrainResponse\"\000\022K\n\024PredictorTrainStrea"
  "m\022\026.PredictorTrainRequest\032\027.PredictorTra"
  "inResponse\"\0000\001\022R\n\023PredictorGetWeights\022\033."
  "PredictorGetWeightsRequest\032\034.PredictorGe"
  "tWeightsResponse\"\000\022\\\n\035PredictorGetMultic"
  "lassMetrics\022\035.PredictorTrainAndEvalReque"
  "st\032\032.MulticlassMetricsResponse\"\000B\013Z\tpred"
  "ictorb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2fpredictor_2fpredictor_2eproto_deps[5] = {
  &::descriptor_table_proto_2fconcept_5ftrainer_5fdump_2fconcept_5ftrainer_5fdump_2eproto,
  &::descriptor_table_proto_2fpredictor_2fpredictor_5fmetrics_2eproto,
  &::descriptor_table_proto_2futils_2fdatabatch_2eproto,
  &::descriptor_table_proto_2futils_2fembedding_2eproto,
  &::descriptor_table_proto_2futils_2frequest_5fmeta_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2fpredictor_2fpredictor_2eproto_sccs[10] = {
  &scc_info_EvalSpec_proto_2fpredictor_2fpredictor_2eproto.base,
  &scc_info_PredictorGetWeightsRequest_proto_2fpredictor_2fpredictor_2eproto.base,
  &scc_info_PredictorGetWeightsResponse_proto_2fpredictor_2fpredictor_2eproto.base,
  &scc_info_PredictorGetWeightsResponse_WeightsEntry_DoNotUse_proto_2fpredictor_2fpredictor_2eproto.base,
  &scc_info_PredictorPredictRequest_proto_2fpredictor_2fpredictor_2eproto.base,
  &scc_info_PredictorPredictResponse_proto_2fpredictor_2fpredictor_2eproto.base,
  &scc_info_PredictorPredictSQLQueryRequest_proto_2fpredictor_2fpredictor_2eproto.base,
  &scc_info_PredictorTrainAndEvalRequest_proto_2fpredictor_2fpredictor_2eproto.base,
  &scc_info_PredictorTrainRequest_proto_2fpredictor_2fpredictor_2eproto.base,
  &scc_info_PredictorTrainResponse_proto_2fpredictor_2fpredictor_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2fpredictor_2fpredictor_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fpredictor_2fpredictor_2eproto = {
  false, false, descriptor_table_protodef_proto_2fpredictor_2fpredictor_2eproto, "proto/predictor/predictor.proto", 2333,
  &descriptor_table_proto_2fpredictor_2fpredictor_2eproto_once, descriptor_table_proto_2fpredictor_2fpredictor_2eproto_sccs, descriptor_table_proto_2fpredictor_2fpredictor_2eproto_deps, 10, 5,
  schemas, file_default_instances, TableStruct_proto_2fpredictor_2fpredictor_2eproto::offsets,
  file_level_metadata_proto_2fpredictor_2fpredictor_2eproto, 10, file_level_enum_descriptors_proto_2fpredictor_2fpredictor_2eproto, file_level_service_descriptors_proto_2fpredictor_2fpredictor_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2fpredictor_2fpredictor_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2fpredictor_2fpredictor_2eproto)), true);

// ===================================================================

void PredictorPredictRequest::InitAsDefaultInstance() {
  ::_PredictorPredictRequest_default_instance_._instance.get_mutable()->meta_ = const_cast< ::RequestMeta*>(
      ::RequestMeta::internal_default_instance());
  ::_PredictorPredictRequest_default_instance_._instance.get_mutable()->data_ = const_cast< ::DataBatch*>(
      ::DataBatch::internal_default_instance());
}
class PredictorPredictRequest::_Internal {
 public:
  static const ::RequestMeta& meta(const PredictorPredictRequest* msg);
  static const ::DataBatch& data(const PredictorPredictRequest* msg);
};

const ::RequestMeta&
PredictorPredictRequest::_Internal::meta(const PredictorPredictRequest* msg) {
  return *msg->meta_;
}
const ::DataBatch&
PredictorPredictRequest::_Internal::data(const PredictorPredictRequest* msg) {
  return *msg->data_;
}
void PredictorPredictRequest::clear_meta() {
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
}
void PredictorPredictRequest::clear_data() {
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
PredictorPredictRequest::PredictorPredictRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  aiids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PredictorPredictRequest)
}
PredictorPredictRequest::PredictorPredictRequest(const PredictorPredictRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      aiids_(from.aiids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  trainer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_trainer_name().empty()) {
    trainer_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_trainer_name(),
      GetArena());
  }
  if (from._internal_has_meta()) {
    meta_ = new ::RequestMeta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::DataBatch(*from.data_);
  } else {
    data_ = nullptr;
  }
  ::memcpy(&topk_, &from.topk_,
    static_cast<size_t>(reinterpret_cast<char*>(&echo_aiids_) -
    reinterpret_cast<char*>(&topk_)) + sizeof(echo_aiids_));
  // @@protoc_insertion_point(copy_constructor:PredictorPredictRequest)
}

void PredictorPredictRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PredictorPredictRequest_proto_2fpredictor_2fpredictor_2eproto.base);
  trainer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&meta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&echo_aiids_) -
      reinterpret_cast<char*>(&meta_)) + sizeof(echo_aiids_));
}

PredictorPredictRequest::~PredictorPredictRequest() {
  // @@protoc_insertion_point(destructor:PredictorPredictRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PredictorPredictRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  trainer_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete data_;
}

void PredictorPredictRequest::ArenaDtor(void* object) {
  PredictorPredictRequest* _this = reinterpret_cast< PredictorPredictRequest* >(object);
  (void)_this;
}
void PredictorPredictRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PredictorPredictRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PredictorPredictRequest& PredictorPredictRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PredictorPredictRequest_proto_2fpredictor_2fpredictor_2eproto.base);
  return *internal_default_instance();
}


void PredictorPredictRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PredictorPredictRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  aiids_.Clear();
  trainer_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  ::memset(&topk_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&echo_aiids_) -
      reinterpret_cast<char*>(&topk_)) + sizeof(echo_aiids_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PredictorPredictRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .RequestMeta meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .DataBatch data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string trainer_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_trainer_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PredictorPredictRequest.trainer_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string aiids = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_aiids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PredictorPredictRequest.aiids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 topk = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          topk_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool echo_aiids = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          echo_aiids_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PredictorPredictRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PredictorPredictRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::meta(this), target, stream);
  }

  // .DataBatch data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  // string trainer_name = 3;
  if (this->trainer_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trainer_name().data(), static_cast<int>(this->_internal_trainer_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PredictorPredictRequest.trainer_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_trainer_name(), target);
  }

  // repeated string aiids = 4;
  for (int i = 0, n = this->_internal_aiids_size(); i < n; i++) {
    const auto& s = this->_internal_aiids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PredictorPredictRequest.aiids");
    target = stream->WriteString(4, s, target);
  }

  // int32 topk = 5;
  if (this->topk() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_topk(), target);
  }

  // bool echo_aiids = 6;
  if (this->echo_aiids() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_echo_aiids(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PredictorPredictRequest)
  return target;
}

size_t PredictorPredictRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PredictorPredictRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string aiids = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(aiids_.size());
  for (int i = 0, n = aiids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      aiids_.Get(i));
  }

  // string trainer_name = 3;
  if (this->trainer_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trainer_name());
  }

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .DataBatch data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // int32 topk = 5;
  if (this->topk() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_topk());
  }

  // bool echo_aiids = 6;
  if (this->echo_aiids() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PredictorPredictRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PredictorPredictRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictorPredictRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PredictorPredictRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PredictorPredictRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PredictorPredictRequest)
    MergeFrom(*source);
  }
}

void PredictorPredictRequest::MergeFrom(const PredictorPredictRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PredictorPredictRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  aiids_.MergeFrom(from.aiids_);
  if (from.trainer_name().size() > 0) {
    _internal_set_trainer_name(from._internal_trainer_name());
  }
  if (from.has_meta()) {
    _internal_mutable_meta()->::RequestMeta::MergeFrom(from._internal_meta());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::DataBatch::MergeFrom(from._internal_data());
  }
  if (from.topk() != 0) {
    _internal_set_topk(from._internal_topk());
  }
  if (from.echo_aiids() != 0) {
    _internal_set_echo_aiids(from._internal_echo_aiids());
  }
}

void PredictorPredictRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PredictorPredictRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictorPredictRequest::CopyFrom(const PredictorPredictRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PredictorPredictRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictorPredictRequest::IsInitialized() const {
  return true;
}

void PredictorPredictRequest::InternalSwap(PredictorPredictRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  aiids_.InternalSwap(&other->aiids_);
  trainer_name_.Swap(&other->trainer_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PredictorPredictRequest, echo_aiids_)
      + sizeof(PredictorPredictRequest::echo_aiids_)
      - PROTOBUF_FIELD_OFFSET(PredictorPredictRequest, meta_)>(
          reinterpret_cast<char*>(&meta_),
          reinterpret_cast<char*>(&other->meta_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PredictorPredictRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PredictorPredictSQLQueryRequest::InitAsDefaultInstance() {
  ::_PredictorPredictSQLQueryRequest_default_instance_._instance.get_mutable()->meta_ = const_cast< ::RequestMeta*>(
      ::RequestMeta::internal_default_instance());
}
class PredictorPredictSQLQueryRequest::_Internal {
 public:
  static const ::RequestMeta& meta(const PredictorPredictSQLQueryRequest* msg);
};

const ::RequestMeta&
PredictorPredictSQLQueryRequest::_Internal::meta(const PredictorPredictSQLQueryRequest* msg) {
  return *msg->meta_;
}
void PredictorPredictSQLQueryRequest::clear_meta() {
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
}
PredictorPredictSQLQueryRequest::PredictorPredictSQLQueryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  aiids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PredictorPredictSQLQueryRequest)
}
PredictorPredictSQLQueryRequest::PredictorPredictSQLQueryRequest(const PredictorPredictSQLQueryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      aiids_(from.aiids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sql_query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sql_query().empty()) {
    sql_query_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sql_query(),
      GetArena());
  }
  trainer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_trainer_name().empty()) {
    trainer_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_trainer_name(),
      GetArena());
  }
  if (from._internal_has_meta()) {
    meta_ = new ::RequestMeta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  ::memcpy(&top_k_data_examples_, &from.top_k_data_examples_,
    static_cast<size_t>(reinterpret_cast<char*>(&echo_aiids_) -
    reinterpret_cast<char*>(&top_k_data_examples_)) + sizeof(echo_aiids_));
  // @@protoc_insertion_point(copy_constructor:PredictorPredictSQLQueryRequest)
}

void PredictorPredictSQLQueryRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PredictorPredictSQLQueryRequest_proto_2fpredictor_2fpredictor_2eproto.base);
  sql_query_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  trainer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&meta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&echo_aiids_) -
      reinterpret_cast<char*>(&meta_)) + sizeof(echo_aiids_));
}

PredictorPredictSQLQueryRequest::~PredictorPredictSQLQueryRequest() {
  // @@protoc_insertion_point(destructor:PredictorPredictSQLQueryRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PredictorPredictSQLQueryRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  sql_query_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  trainer_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete meta_;
}

void PredictorPredictSQLQueryRequest::ArenaDtor(void* object) {
  PredictorPredictSQLQueryRequest* _this = reinterpret_cast< PredictorPredictSQLQueryRequest* >(object);
  (void)_this;
}
void PredictorPredictSQLQueryRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PredictorPredictSQLQueryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PredictorPredictSQLQueryRequest& PredictorPredictSQLQueryRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PredictorPredictSQLQueryRequest_proto_2fpredictor_2fpredictor_2eproto.base);
  return *internal_default_instance();
}


void PredictorPredictSQLQueryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PredictorPredictSQLQueryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  aiids_.Clear();
  sql_query_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  trainer_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  ::memset(&top_k_data_examples_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&echo_aiids_) -
      reinterpret_cast<char*>(&top_k_data_examples_)) + sizeof(echo_aiids_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PredictorPredictSQLQueryRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .RequestMeta meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sql_query = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_sql_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PredictorPredictSQLQueryRequest.sql_query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string trainer_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_trainer_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PredictorPredictSQLQueryRequest.trainer_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 top_k_data_examples = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          top_k_data_examples_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string aiids = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_aiids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PredictorPredictSQLQueryRequest.aiids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 top_k_predictions = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          top_k_predictions_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool echo_aiids = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          echo_aiids_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PredictorPredictSQLQueryRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PredictorPredictSQLQueryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::meta(this), target, stream);
  }

  // string sql_query = 2;
  if (this->sql_query().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sql_query().data(), static_cast<int>(this->_internal_sql_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PredictorPredictSQLQueryRequest.sql_query");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sql_query(), target);
  }

  // string trainer_name = 3;
  if (this->trainer_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trainer_name().data(), static_cast<int>(this->_internal_trainer_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PredictorPredictSQLQueryRequest.trainer_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_trainer_name(), target);
  }

  // int32 top_k_data_examples = 4;
  if (this->top_k_data_examples() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_top_k_data_examples(), target);
  }

  // repeated string aiids = 5;
  for (int i = 0, n = this->_internal_aiids_size(); i < n; i++) {
    const auto& s = this->_internal_aiids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PredictorPredictSQLQueryRequest.aiids");
    target = stream->WriteString(5, s, target);
  }

  // int32 top_k_predictions = 6;
  if (this->top_k_predictions() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_top_k_predictions(), target);
  }

  // bool echo_aiids = 7;
  if (this->echo_aiids() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_echo_aiids(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PredictorPredictSQLQueryRequest)
  return target;
}

size_t PredictorPredictSQLQueryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PredictorPredictSQLQueryRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string aiids = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(aiids_.size());
  for (int i = 0, n = aiids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      aiids_.Get(i));
  }

  // string sql_query = 2;
  if (this->sql_query().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sql_query());
  }

  // string trainer_name = 3;
  if (this->trainer_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trainer_name());
  }

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // int32 top_k_data_examples = 4;
  if (this->top_k_data_examples() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_top_k_data_examples());
  }

  // int32 top_k_predictions = 6;
  if (this->top_k_predictions() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_top_k_predictions());
  }

  // bool echo_aiids = 7;
  if (this->echo_aiids() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PredictorPredictSQLQueryRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PredictorPredictSQLQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictorPredictSQLQueryRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PredictorPredictSQLQueryRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PredictorPredictSQLQueryRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PredictorPredictSQLQueryRequest)
    MergeFrom(*source);
  }
}

void PredictorPredictSQLQueryRequest::MergeFrom(const PredictorPredictSQLQueryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PredictorPredictSQLQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  aiids_.MergeFrom(from.aiids_);
  if (from.sql_query().size() > 0) {
    _internal_set_sql_query(from._internal_sql_query());
  }
  if (from.trainer_name().size() > 0) {
    _internal_set_trainer_name(from._internal_trainer_name());
  }
  if (from.has_meta()) {
    _internal_mutable_meta()->::RequestMeta::MergeFrom(from._internal_meta());
  }
  if (from.top_k_data_examples() != 0) {
    _internal_set_top_k_data_examples(from._internal_top_k_data_examples());
  }
  if (from.top_k_predictions() != 0) {
    _internal_set_top_k_predictions(from._internal_top_k_predictions());
  }
  if (from.echo_aiids() != 0) {
    _internal_set_echo_aiids(from._internal_echo_aiids());
  }
}

void PredictorPredictSQLQueryRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PredictorPredictSQLQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictorPredictSQLQueryRequest::CopyFrom(const PredictorPredictSQLQueryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PredictorPredictSQLQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictorPredictSQLQueryRequest::IsInitialized() const {
  return true;
}

void PredictorPredictSQLQueryRequest::InternalSwap(PredictorPredictSQLQueryRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  aiids_.InternalSwap(&other->aiids_);
  sql_query_.Swap(&other->sql_query_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  trainer_name_.Swap(&other->trainer_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PredictorPredictSQLQueryRequest, echo_aiids_)
      + sizeof(PredictorPredictSQLQueryRequest::echo_aiids_)
      - PROTOBUF_FIELD_OFFSET(PredictorPredictSQLQueryRequest, meta_)>(
          reinterpret_cast<char*>(&meta_),
          reinterpret_cast<char*>(&other->meta_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PredictorPredictSQLQueryRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PredictorPredictResponse::InitAsDefaultInstance() {
  ::_PredictorPredictResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
  ::_PredictorPredictResponse_default_instance_._instance.get_mutable()->results_ = const_cast< ::DataBatch*>(
      ::DataBatch::internal_default_instance());
}
class PredictorPredictResponse::_Internal {
 public:
  static const ::ResponseStatus& status(const PredictorPredictResponse* msg);
  static const ::DataBatch& results(const PredictorPredictResponse* msg);
};

const ::ResponseStatus&
PredictorPredictResponse::_Internal::status(const PredictorPredictResponse* msg) {
  return *msg->status_;
}
const ::DataBatch&
PredictorPredictResponse::_Internal::results(const PredictorPredictResponse* msg) {
  return *msg->results_;
}
void PredictorPredictResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void PredictorPredictResponse::clear_results() {
  if (GetArena() == nullptr && results_ != nullptr) {
    delete results_;
  }
  results_ = nullptr;
}
PredictorPredictResponse::PredictorPredictResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  aiids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PredictorPredictResponse)
}
PredictorPredictResponse::PredictorPredictResponse(const PredictorPredictResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      aiids_(from.aiids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_results()) {
    results_ = new ::DataBatch(*from.results_);
  } else {
    results_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:PredictorPredictResponse)
}

void PredictorPredictResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PredictorPredictResponse_proto_2fpredictor_2fpredictor_2eproto.base);
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&results_) -
      reinterpret_cast<char*>(&status_)) + sizeof(results_));
}

PredictorPredictResponse::~PredictorPredictResponse() {
  // @@protoc_insertion_point(destructor:PredictorPredictResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PredictorPredictResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete results_;
}

void PredictorPredictResponse::ArenaDtor(void* object) {
  PredictorPredictResponse* _this = reinterpret_cast< PredictorPredictResponse* >(object);
  (void)_this;
}
void PredictorPredictResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PredictorPredictResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PredictorPredictResponse& PredictorPredictResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PredictorPredictResponse_proto_2fpredictor_2fpredictor_2eproto.base);
  return *internal_default_instance();
}


void PredictorPredictResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:PredictorPredictResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  aiids_.Clear();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && results_ != nullptr) {
    delete results_;
  }
  results_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PredictorPredictResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .DataBatch results = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_results(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string aiids = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_aiids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PredictorPredictResponse.aiids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PredictorPredictResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PredictorPredictResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .DataBatch results = 2;
  if (this->has_results()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::results(this), target, stream);
  }

  // repeated string aiids = 3;
  for (int i = 0, n = this->_internal_aiids_size(); i < n; i++) {
    const auto& s = this->_internal_aiids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PredictorPredictResponse.aiids");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PredictorPredictResponse)
  return target;
}

size_t PredictorPredictResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PredictorPredictResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string aiids = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(aiids_.size());
  for (int i = 0, n = aiids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      aiids_.Get(i));
  }

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .DataBatch results = 2;
  if (this->has_results()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *results_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PredictorPredictResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PredictorPredictResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictorPredictResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PredictorPredictResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PredictorPredictResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PredictorPredictResponse)
    MergeFrom(*source);
  }
}

void PredictorPredictResponse::MergeFrom(const PredictorPredictResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PredictorPredictResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  aiids_.MergeFrom(from.aiids_);
  if (from.has_status()) {
    _internal_mutable_status()->::ResponseStatus::MergeFrom(from._internal_status());
  }
  if (from.has_results()) {
    _internal_mutable_results()->::DataBatch::MergeFrom(from._internal_results());
  }
}

void PredictorPredictResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PredictorPredictResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictorPredictResponse::CopyFrom(const PredictorPredictResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PredictorPredictResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictorPredictResponse::IsInitialized() const {
  return true;
}

void PredictorPredictResponse::InternalSwap(PredictorPredictResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  aiids_.InternalSwap(&other->aiids_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PredictorPredictResponse, results_)
      + sizeof(PredictorPredictResponse::results_)
      - PROTOBUF_FIELD_OFFSET(PredictorPredictResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PredictorPredictResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PredictorTrainAndEvalRequest::InitAsDefaultInstance() {
  ::_PredictorTrainAndEvalRequest_default_instance_._instance.get_mutable()->meta_ = const_cast< ::RequestMeta*>(
      ::RequestMeta::internal_default_instance());
  ::_PredictorTrainAndEvalRequest_default_instance_._instance.get_mutable()->train_request_ = const_cast< ::PredictorTrainRequest*>(
      ::PredictorTrainRequest::internal_default_instance());
  ::_PredictorTrainAndEvalRequest_default_instance_._instance.get_mutable()->eval_spec_ = const_cast< ::EvalSpec*>(
      ::EvalSpec::internal_default_instance());
}
class PredictorTrainAndEvalRequest::_Internal {
 public:
  static const ::RequestMeta& meta(const PredictorTrainAndEvalRequest* msg);
  static const ::PredictorTrainRequest& train_request(const PredictorTrainAndEvalRequest* msg);
  static const ::EvalSpec& eval_spec(const PredictorTrainAndEvalRequest* msg);
};

const ::RequestMeta&
PredictorTrainAndEvalRequest::_Internal::meta(const PredictorTrainAndEvalRequest* msg) {
  return *msg->meta_;
}
const ::PredictorTrainRequest&
PredictorTrainAndEvalRequest::_Internal::train_request(const PredictorTrainAndEvalRequest* msg) {
  return *msg->train_request_;
}
const ::EvalSpec&
PredictorTrainAndEvalRequest::_Internal::eval_spec(const PredictorTrainAndEvalRequest* msg) {
  return *msg->eval_spec_;
}
void PredictorTrainAndEvalRequest::clear_meta() {
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
}
PredictorTrainAndEvalRequest::PredictorTrainAndEvalRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PredictorTrainAndEvalRequest)
}
PredictorTrainAndEvalRequest::PredictorTrainAndEvalRequest(const PredictorTrainAndEvalRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_meta()) {
    meta_ = new ::RequestMeta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  if (from._internal_has_train_request()) {
    train_request_ = new ::PredictorTrainRequest(*from.train_request_);
  } else {
    train_request_ = nullptr;
  }
  if (from._internal_has_eval_spec()) {
    eval_spec_ = new ::EvalSpec(*from.eval_spec_);
  } else {
    eval_spec_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:PredictorTrainAndEvalRequest)
}

void PredictorTrainAndEvalRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PredictorTrainAndEvalRequest_proto_2fpredictor_2fpredictor_2eproto.base);
  ::memset(&meta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eval_spec_) -
      reinterpret_cast<char*>(&meta_)) + sizeof(eval_spec_));
}

PredictorTrainAndEvalRequest::~PredictorTrainAndEvalRequest() {
  // @@protoc_insertion_point(destructor:PredictorTrainAndEvalRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PredictorTrainAndEvalRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete train_request_;
  if (this != internal_default_instance()) delete eval_spec_;
}

void PredictorTrainAndEvalRequest::ArenaDtor(void* object) {
  PredictorTrainAndEvalRequest* _this = reinterpret_cast< PredictorTrainAndEvalRequest* >(object);
  (void)_this;
}
void PredictorTrainAndEvalRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PredictorTrainAndEvalRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PredictorTrainAndEvalRequest& PredictorTrainAndEvalRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PredictorTrainAndEvalRequest_proto_2fpredictor_2fpredictor_2eproto.base);
  return *internal_default_instance();
}


void PredictorTrainAndEvalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PredictorTrainAndEvalRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  if (GetArena() == nullptr && train_request_ != nullptr) {
    delete train_request_;
  }
  train_request_ = nullptr;
  if (GetArena() == nullptr && eval_spec_ != nullptr) {
    delete eval_spec_;
  }
  eval_spec_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PredictorTrainAndEvalRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .RequestMeta meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .PredictorTrainRequest train_request = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_train_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .EvalSpec eval_spec = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_eval_spec(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PredictorTrainAndEvalRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PredictorTrainAndEvalRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::meta(this), target, stream);
  }

  // .PredictorTrainRequest train_request = 2;
  if (this->has_train_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::train_request(this), target, stream);
  }

  // .EvalSpec eval_spec = 3;
  if (this->has_eval_spec()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::eval_spec(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PredictorTrainAndEvalRequest)
  return target;
}

size_t PredictorTrainAndEvalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PredictorTrainAndEvalRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .PredictorTrainRequest train_request = 2;
  if (this->has_train_request()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *train_request_);
  }

  // .EvalSpec eval_spec = 3;
  if (this->has_eval_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *eval_spec_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PredictorTrainAndEvalRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PredictorTrainAndEvalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictorTrainAndEvalRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PredictorTrainAndEvalRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PredictorTrainAndEvalRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PredictorTrainAndEvalRequest)
    MergeFrom(*source);
  }
}

void PredictorTrainAndEvalRequest::MergeFrom(const PredictorTrainAndEvalRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PredictorTrainAndEvalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_meta()) {
    _internal_mutable_meta()->::RequestMeta::MergeFrom(from._internal_meta());
  }
  if (from.has_train_request()) {
    _internal_mutable_train_request()->::PredictorTrainRequest::MergeFrom(from._internal_train_request());
  }
  if (from.has_eval_spec()) {
    _internal_mutable_eval_spec()->::EvalSpec::MergeFrom(from._internal_eval_spec());
  }
}

void PredictorTrainAndEvalRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PredictorTrainAndEvalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictorTrainAndEvalRequest::CopyFrom(const PredictorTrainAndEvalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PredictorTrainAndEvalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictorTrainAndEvalRequest::IsInitialized() const {
  return true;
}

void PredictorTrainAndEvalRequest::InternalSwap(PredictorTrainAndEvalRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PredictorTrainAndEvalRequest, eval_spec_)
      + sizeof(PredictorTrainAndEvalRequest::eval_spec_)
      - PROTOBUF_FIELD_OFFSET(PredictorTrainAndEvalRequest, meta_)>(
          reinterpret_cast<char*>(&meta_),
          reinterpret_cast<char*>(&other->meta_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PredictorTrainAndEvalRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PredictorTrainRequest::InitAsDefaultInstance() {
  ::_PredictorTrainRequest_default_instance_._instance.get_mutable()->meta_ = const_cast< ::RequestMeta*>(
      ::RequestMeta::internal_default_instance());
  ::_PredictorTrainRequest_default_instance_.data_ = const_cast< ::DataBatch*>(
      ::DataBatch::internal_default_instance());
  ::_PredictorTrainRequest_default_instance_.sql_query_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
class PredictorTrainRequest::_Internal {
 public:
  static const ::RequestMeta& meta(const PredictorTrainRequest* msg);
  static const ::DataBatch& data(const PredictorTrainRequest* msg);
};

const ::RequestMeta&
PredictorTrainRequest::_Internal::meta(const PredictorTrainRequest* msg) {
  return *msg->meta_;
}
const ::DataBatch&
PredictorTrainRequest::_Internal::data(const PredictorTrainRequest* msg) {
  return *msg->training_data_.data_;
}
void PredictorTrainRequest::clear_meta() {
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
}
void PredictorTrainRequest::set_allocated_data(::DataBatch* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_training_data();
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(data)->GetArena();
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    set_has_data();
    training_data_.data_ = data;
  }
  // @@protoc_insertion_point(field_set_allocated:PredictorTrainRequest.data)
}
void PredictorTrainRequest::clear_data() {
  if (_internal_has_data()) {
    if (GetArena() == nullptr) {
      delete training_data_.data_;
    }
    clear_has_training_data();
  }
}
PredictorTrainRequest::PredictorTrainRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  aiids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PredictorTrainRequest)
}
PredictorTrainRequest::PredictorTrainRequest(const PredictorTrainRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      aiids_(from.aiids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  trainer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_trainer_name().empty()) {
    trainer_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_trainer_name(),
      GetArena());
  }
  embeddings_model_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_embeddings_model().empty()) {
    embeddings_model_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_embeddings_model(),
      GetArena());
  }
  hyper_parameters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_hyper_parameters().empty()) {
    hyper_parameters_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_hyper_parameters(),
      GetArena());
  }
  if (from._internal_has_meta()) {
    meta_ = new ::RequestMeta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  ::memcpy(&use_prev_trained_, &from.use_prev_trained_,
    static_cast<size_t>(reinterpret_cast<char*>(&missing_positive_example_policy_) -
    reinterpret_cast<char*>(&use_prev_trained_)) + sizeof(missing_positive_example_policy_));
  clear_has_training_data();
  switch (from.training_data_case()) {
    case kData: {
      _internal_mutable_data()->::DataBatch::MergeFrom(from._internal_data());
      break;
    }
    case kSqlQuery: {
      _internal_set_sql_query(from._internal_sql_query());
      break;
    }
    case TRAINING_DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:PredictorTrainRequest)
}

void PredictorTrainRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PredictorTrainRequest_proto_2fpredictor_2fpredictor_2eproto.base);
  trainer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  embeddings_model_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hyper_parameters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&meta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&missing_positive_example_policy_) -
      reinterpret_cast<char*>(&meta_)) + sizeof(missing_positive_example_policy_));
  clear_has_training_data();
}

PredictorTrainRequest::~PredictorTrainRequest() {
  // @@protoc_insertion_point(destructor:PredictorTrainRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PredictorTrainRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  trainer_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  embeddings_model_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hyper_parameters_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete meta_;
  if (has_training_data()) {
    clear_training_data();
  }
}

void PredictorTrainRequest::ArenaDtor(void* object) {
  PredictorTrainRequest* _this = reinterpret_cast< PredictorTrainRequest* >(object);
  (void)_this;
}
void PredictorTrainRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PredictorTrainRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PredictorTrainRequest& PredictorTrainRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PredictorTrainRequest_proto_2fpredictor_2fpredictor_2eproto.base);
  return *internal_default_instance();
}


void PredictorTrainRequest::clear_training_data() {
// @@protoc_insertion_point(one_of_clear_start:PredictorTrainRequest)
  switch (training_data_case()) {
    case kData: {
      if (GetArena() == nullptr) {
        delete training_data_.data_;
      }
      break;
    }
    case kSqlQuery: {
      training_data_.sql_query_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case TRAINING_DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TRAINING_DATA_NOT_SET;
}


void PredictorTrainRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PredictorTrainRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  aiids_.Clear();
  trainer_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  embeddings_model_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  hyper_parameters_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  ::memset(&use_prev_trained_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&missing_positive_example_policy_) -
      reinterpret_cast<char*>(&use_prev_trained_)) + sizeof(missing_positive_example_policy_));
  clear_training_data();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PredictorTrainRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .RequestMeta meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string trainer_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_trainer_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PredictorTrainRequest.trainer_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool use_prev_trained = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          use_prev_trained_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .TrainingType training_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_training_type(static_cast<::TrainingType>(val));
        } else goto handle_unusual;
        continue;
      // string embeddings_model = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_embeddings_model();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PredictorTrainRequest.embeddings_model"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string aiids = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_aiids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PredictorTrainRequest.aiids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 train_iters = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          train_iters_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .TrainingEnvironment training_environment = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_training_environment(static_cast<::TrainingEnvironment>(val));
        } else goto handle_unusual;
        continue;
      // string hyper_parameters = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_hyper_parameters();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PredictorTrainRequest.hyper_parameters"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .MissingPositiveExamplePolicy missing_positive_example_policy = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_missing_positive_example_policy(static_cast<::MissingPositiveExamplePolicy>(val));
        } else goto handle_unusual;
        continue;
      // .DataBatch data = 100;
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sql_query = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_sql_query();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PredictorTrainRequest.sql_query"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PredictorTrainRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PredictorTrainRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::meta(this), target, stream);
  }

  // string trainer_name = 2;
  if (this->trainer_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trainer_name().data(), static_cast<int>(this->_internal_trainer_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PredictorTrainRequest.trainer_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_trainer_name(), target);
  }

  // bool use_prev_trained = 3;
  if (this->use_prev_trained() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_use_prev_trained(), target);
  }

  // .TrainingType training_type = 4;
  if (this->training_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_training_type(), target);
  }

  // string embeddings_model = 5;
  if (this->embeddings_model().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_embeddings_model().data(), static_cast<int>(this->_internal_embeddings_model().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PredictorTrainRequest.embeddings_model");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_embeddings_model(), target);
  }

  // repeated string aiids = 6;
  for (int i = 0, n = this->_internal_aiids_size(); i < n; i++) {
    const auto& s = this->_internal_aiids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PredictorTrainRequest.aiids");
    target = stream->WriteString(6, s, target);
  }

  // int32 train_iters = 7;
  if (this->train_iters() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_train_iters(), target);
  }

  // .TrainingEnvironment training_environment = 8;
  if (this->training_environment() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_training_environment(), target);
  }

  // string hyper_parameters = 9;
  if (this->hyper_parameters().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hyper_parameters().data(), static_cast<int>(this->_internal_hyper_parameters().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PredictorTrainRequest.hyper_parameters");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_hyper_parameters(), target);
  }

  // .MissingPositiveExamplePolicy missing_positive_example_policy = 10;
  if (this->missing_positive_example_policy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_missing_positive_example_policy(), target);
  }

  // .DataBatch data = 100;
  if (_internal_has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        100, _Internal::data(this), target, stream);
  }

  // string sql_query = 101;
  if (_internal_has_sql_query()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sql_query().data(), static_cast<int>(this->_internal_sql_query().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PredictorTrainRequest.sql_query");
    target = stream->WriteStringMaybeAliased(
        101, this->_internal_sql_query(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PredictorTrainRequest)
  return target;
}

size_t PredictorTrainRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PredictorTrainRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string aiids = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(aiids_.size());
  for (int i = 0, n = aiids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      aiids_.Get(i));
  }

  // string trainer_name = 2;
  if (this->trainer_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trainer_name());
  }

  // string embeddings_model = 5;
  if (this->embeddings_model().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_embeddings_model());
  }

  // string hyper_parameters = 9;
  if (this->hyper_parameters().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hyper_parameters());
  }

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // bool use_prev_trained = 3;
  if (this->use_prev_trained() != 0) {
    total_size += 1 + 1;
  }

  // .TrainingType training_type = 4;
  if (this->training_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_training_type());
  }

  // int32 train_iters = 7;
  if (this->train_iters() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_train_iters());
  }

  // .TrainingEnvironment training_environment = 8;
  if (this->training_environment() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_training_environment());
  }

  // .MissingPositiveExamplePolicy missing_positive_example_policy = 10;
  if (this->missing_positive_example_policy() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_missing_positive_example_policy());
  }

  switch (training_data_case()) {
    // .DataBatch data = 100;
    case kData: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *training_data_.data_);
      break;
    }
    // string sql_query = 101;
    case kSqlQuery: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_sql_query());
      break;
    }
    case TRAINING_DATA_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PredictorTrainRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PredictorTrainRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictorTrainRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PredictorTrainRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PredictorTrainRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PredictorTrainRequest)
    MergeFrom(*source);
  }
}

void PredictorTrainRequest::MergeFrom(const PredictorTrainRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PredictorTrainRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  aiids_.MergeFrom(from.aiids_);
  if (from.trainer_name().size() > 0) {
    _internal_set_trainer_name(from._internal_trainer_name());
  }
  if (from.embeddings_model().size() > 0) {
    _internal_set_embeddings_model(from._internal_embeddings_model());
  }
  if (from.hyper_parameters().size() > 0) {
    _internal_set_hyper_parameters(from._internal_hyper_parameters());
  }
  if (from.has_meta()) {
    _internal_mutable_meta()->::RequestMeta::MergeFrom(from._internal_meta());
  }
  if (from.use_prev_trained() != 0) {
    _internal_set_use_prev_trained(from._internal_use_prev_trained());
  }
  if (from.training_type() != 0) {
    _internal_set_training_type(from._internal_training_type());
  }
  if (from.train_iters() != 0) {
    _internal_set_train_iters(from._internal_train_iters());
  }
  if (from.training_environment() != 0) {
    _internal_set_training_environment(from._internal_training_environment());
  }
  if (from.missing_positive_example_policy() != 0) {
    _internal_set_missing_positive_example_policy(from._internal_missing_positive_example_policy());
  }
  switch (from.training_data_case()) {
    case kData: {
      _internal_mutable_data()->::DataBatch::MergeFrom(from._internal_data());
      break;
    }
    case kSqlQuery: {
      _internal_set_sql_query(from._internal_sql_query());
      break;
    }
    case TRAINING_DATA_NOT_SET: {
      break;
    }
  }
}

void PredictorTrainRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PredictorTrainRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictorTrainRequest::CopyFrom(const PredictorTrainRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PredictorTrainRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictorTrainRequest::IsInitialized() const {
  return true;
}

void PredictorTrainRequest::InternalSwap(PredictorTrainRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  aiids_.InternalSwap(&other->aiids_);
  trainer_name_.Swap(&other->trainer_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  embeddings_model_.Swap(&other->embeddings_model_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  hyper_parameters_.Swap(&other->hyper_parameters_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PredictorTrainRequest, missing_positive_example_policy_)
      + sizeof(PredictorTrainRequest::missing_positive_example_policy_)
      - PROTOBUF_FIELD_OFFSET(PredictorTrainRequest, meta_)>(
          reinterpret_cast<char*>(&meta_),
          reinterpret_cast<char*>(&other->meta_));
  swap(training_data_, other->training_data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata PredictorTrainRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PredictorTrainResponse::InitAsDefaultInstance() {
  ::_PredictorTrainResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
  ::_PredictorTrainResponse_default_instance_._instance.get_mutable()->trainer_ = const_cast< ::ConceptTrainerDump*>(
      ::ConceptTrainerDump::internal_default_instance());
  ::_PredictorTrainResponse_default_instance_._instance.get_mutable()->progress_status_ = const_cast< ::ProgressStatus*>(
      ::ProgressStatus::internal_default_instance());
}
class PredictorTrainResponse::_Internal {
 public:
  static const ::ResponseStatus& status(const PredictorTrainResponse* msg);
  static const ::ConceptTrainerDump& trainer(const PredictorTrainResponse* msg);
  static const ::ProgressStatus& progress_status(const PredictorTrainResponse* msg);
};

const ::ResponseStatus&
PredictorTrainResponse::_Internal::status(const PredictorTrainResponse* msg) {
  return *msg->status_;
}
const ::ConceptTrainerDump&
PredictorTrainResponse::_Internal::trainer(const PredictorTrainResponse* msg) {
  return *msg->trainer_;
}
const ::ProgressStatus&
PredictorTrainResponse::_Internal::progress_status(const PredictorTrainResponse* msg) {
  return *msg->progress_status_;
}
void PredictorTrainResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void PredictorTrainResponse::clear_trainer() {
  if (GetArena() == nullptr && trainer_ != nullptr) {
    delete trainer_;
  }
  trainer_ = nullptr;
}
void PredictorTrainResponse::clear_progress_status() {
  if (GetArena() == nullptr && progress_status_ != nullptr) {
    delete progress_status_;
  }
  progress_status_ = nullptr;
}
PredictorTrainResponse::PredictorTrainResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  failed_aiids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PredictorTrainResponse)
}
PredictorTrainResponse::PredictorTrainResponse(const PredictorTrainResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      failed_aiids_(from.failed_aiids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_trainer()) {
    trainer_ = new ::ConceptTrainerDump(*from.trainer_);
  } else {
    trainer_ = nullptr;
  }
  if (from._internal_has_progress_status()) {
    progress_status_ = new ::ProgressStatus(*from.progress_status_);
  } else {
    progress_status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:PredictorTrainResponse)
}

void PredictorTrainResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PredictorTrainResponse_proto_2fpredictor_2fpredictor_2eproto.base);
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_status_) -
      reinterpret_cast<char*>(&status_)) + sizeof(progress_status_));
}

PredictorTrainResponse::~PredictorTrainResponse() {
  // @@protoc_insertion_point(destructor:PredictorTrainResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PredictorTrainResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete trainer_;
  if (this != internal_default_instance()) delete progress_status_;
}

void PredictorTrainResponse::ArenaDtor(void* object) {
  PredictorTrainResponse* _this = reinterpret_cast< PredictorTrainResponse* >(object);
  (void)_this;
}
void PredictorTrainResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PredictorTrainResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PredictorTrainResponse& PredictorTrainResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PredictorTrainResponse_proto_2fpredictor_2fpredictor_2eproto.base);
  return *internal_default_instance();
}


void PredictorTrainResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:PredictorTrainResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  failed_aiids_.Clear();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && trainer_ != nullptr) {
    delete trainer_;
  }
  trainer_ = nullptr;
  if (GetArena() == nullptr && progress_status_ != nullptr) {
    delete progress_status_;
  }
  progress_status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PredictorTrainResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ConceptTrainerDump trainer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_trainer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string failed_aiids = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_failed_aiids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PredictorTrainResponse.failed_aiids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // .ProgressStatus progress_status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_progress_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PredictorTrainResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PredictorTrainResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .ConceptTrainerDump trainer = 2;
  if (this->has_trainer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::trainer(this), target, stream);
  }

  // repeated string failed_aiids = 3;
  for (int i = 0, n = this->_internal_failed_aiids_size(); i < n; i++) {
    const auto& s = this->_internal_failed_aiids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PredictorTrainResponse.failed_aiids");
    target = stream->WriteString(3, s, target);
  }

  // .ProgressStatus progress_status = 4;
  if (this->has_progress_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::progress_status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PredictorTrainResponse)
  return target;
}

size_t PredictorTrainResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PredictorTrainResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string failed_aiids = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(failed_aiids_.size());
  for (int i = 0, n = failed_aiids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      failed_aiids_.Get(i));
  }

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .ConceptTrainerDump trainer = 2;
  if (this->has_trainer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *trainer_);
  }

  // .ProgressStatus progress_status = 4;
  if (this->has_progress_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *progress_status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PredictorTrainResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PredictorTrainResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictorTrainResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PredictorTrainResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PredictorTrainResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PredictorTrainResponse)
    MergeFrom(*source);
  }
}

void PredictorTrainResponse::MergeFrom(const PredictorTrainResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PredictorTrainResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  failed_aiids_.MergeFrom(from.failed_aiids_);
  if (from.has_status()) {
    _internal_mutable_status()->::ResponseStatus::MergeFrom(from._internal_status());
  }
  if (from.has_trainer()) {
    _internal_mutable_trainer()->::ConceptTrainerDump::MergeFrom(from._internal_trainer());
  }
  if (from.has_progress_status()) {
    _internal_mutable_progress_status()->::ProgressStatus::MergeFrom(from._internal_progress_status());
  }
}

void PredictorTrainResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PredictorTrainResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictorTrainResponse::CopyFrom(const PredictorTrainResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PredictorTrainResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictorTrainResponse::IsInitialized() const {
  return true;
}

void PredictorTrainResponse::InternalSwap(PredictorTrainResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  failed_aiids_.InternalSwap(&other->failed_aiids_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PredictorTrainResponse, progress_status_)
      + sizeof(PredictorTrainResponse::progress_status_)
      - PROTOBUF_FIELD_OFFSET(PredictorTrainResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PredictorTrainResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PredictorGetWeightsRequest::InitAsDefaultInstance() {
  ::_PredictorGetWeightsRequest_default_instance_._instance.get_mutable()->meta_ = const_cast< ::RequestMeta*>(
      ::RequestMeta::internal_default_instance());
}
class PredictorGetWeightsRequest::_Internal {
 public:
  static const ::RequestMeta& meta(const PredictorGetWeightsRequest* msg);
};

const ::RequestMeta&
PredictorGetWeightsRequest::_Internal::meta(const PredictorGetWeightsRequest* msg) {
  return *msg->meta_;
}
void PredictorGetWeightsRequest::clear_meta() {
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
}
PredictorGetWeightsRequest::PredictorGetWeightsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PredictorGetWeightsRequest)
}
PredictorGetWeightsRequest::PredictorGetWeightsRequest(const PredictorGetWeightsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  trainer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_trainer_name().empty()) {
    trainer_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_trainer_name(),
      GetArena());
  }
  embeddings_model_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_embeddings_model().empty()) {
    embeddings_model_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_embeddings_model(),
      GetArena());
  }
  if (from._internal_has_meta()) {
    meta_ = new ::RequestMeta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:PredictorGetWeightsRequest)
}

void PredictorGetWeightsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PredictorGetWeightsRequest_proto_2fpredictor_2fpredictor_2eproto.base);
  trainer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  embeddings_model_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  meta_ = nullptr;
}

PredictorGetWeightsRequest::~PredictorGetWeightsRequest() {
  // @@protoc_insertion_point(destructor:PredictorGetWeightsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PredictorGetWeightsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  trainer_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  embeddings_model_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete meta_;
}

void PredictorGetWeightsRequest::ArenaDtor(void* object) {
  PredictorGetWeightsRequest* _this = reinterpret_cast< PredictorGetWeightsRequest* >(object);
  (void)_this;
}
void PredictorGetWeightsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PredictorGetWeightsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PredictorGetWeightsRequest& PredictorGetWeightsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PredictorGetWeightsRequest_proto_2fpredictor_2fpredictor_2eproto.base);
  return *internal_default_instance();
}


void PredictorGetWeightsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PredictorGetWeightsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trainer_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  embeddings_model_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PredictorGetWeightsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .RequestMeta meta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string trainer_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_trainer_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PredictorGetWeightsRequest.trainer_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string embeddings_model = 5 [deprecated = true];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_embeddings_model();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PredictorGetWeightsRequest.embeddings_model"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PredictorGetWeightsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PredictorGetWeightsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::meta(this), target, stream);
  }

  // string trainer_name = 2;
  if (this->trainer_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trainer_name().data(), static_cast<int>(this->_internal_trainer_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PredictorGetWeightsRequest.trainer_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_trainer_name(), target);
  }

  // string embeddings_model = 5 [deprecated = true];
  if (this->embeddings_model().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_embeddings_model().data(), static_cast<int>(this->_internal_embeddings_model().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PredictorGetWeightsRequest.embeddings_model");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_embeddings_model(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PredictorGetWeightsRequest)
  return target;
}

size_t PredictorGetWeightsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PredictorGetWeightsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string trainer_name = 2;
  if (this->trainer_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trainer_name());
  }

  // string embeddings_model = 5 [deprecated = true];
  if (this->embeddings_model().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_embeddings_model());
  }

  // .RequestMeta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PredictorGetWeightsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PredictorGetWeightsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictorGetWeightsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PredictorGetWeightsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PredictorGetWeightsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PredictorGetWeightsRequest)
    MergeFrom(*source);
  }
}

void PredictorGetWeightsRequest::MergeFrom(const PredictorGetWeightsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PredictorGetWeightsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.trainer_name().size() > 0) {
    _internal_set_trainer_name(from._internal_trainer_name());
  }
  if (from.embeddings_model().size() > 0) {
    _internal_set_embeddings_model(from._internal_embeddings_model());
  }
  if (from.has_meta()) {
    _internal_mutable_meta()->::RequestMeta::MergeFrom(from._internal_meta());
  }
}

void PredictorGetWeightsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PredictorGetWeightsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictorGetWeightsRequest::CopyFrom(const PredictorGetWeightsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PredictorGetWeightsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictorGetWeightsRequest::IsInitialized() const {
  return true;
}

void PredictorGetWeightsRequest::InternalSwap(PredictorGetWeightsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  trainer_name_.Swap(&other->trainer_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  embeddings_model_.Swap(&other->embeddings_model_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(meta_, other->meta_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PredictorGetWeightsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

PredictorGetWeightsResponse_WeightsEntry_DoNotUse::PredictorGetWeightsResponse_WeightsEntry_DoNotUse() {}
PredictorGetWeightsResponse_WeightsEntry_DoNotUse::PredictorGetWeightsResponse_WeightsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void PredictorGetWeightsResponse_WeightsEntry_DoNotUse::MergeFrom(const PredictorGetWeightsResponse_WeightsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata PredictorGetWeightsResponse_WeightsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void PredictorGetWeightsResponse_WeightsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void PredictorGetWeightsResponse::InitAsDefaultInstance() {
  ::_PredictorGetWeightsResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::ResponseStatus*>(
      ::ResponseStatus::internal_default_instance());
  ::_PredictorGetWeightsResponse_default_instance_._instance.get_mutable()->trainer_ = const_cast< ::ConceptTrainerDump*>(
      ::ConceptTrainerDump::internal_default_instance());
}
class PredictorGetWeightsResponse::_Internal {
 public:
  static const ::ResponseStatus& status(const PredictorGetWeightsResponse* msg);
  static const ::ConceptTrainerDump& trainer(const PredictorGetWeightsResponse* msg);
};

const ::ResponseStatus&
PredictorGetWeightsResponse::_Internal::status(const PredictorGetWeightsResponse* msg) {
  return *msg->status_;
}
const ::ConceptTrainerDump&
PredictorGetWeightsResponse::_Internal::trainer(const PredictorGetWeightsResponse* msg) {
  return *msg->trainer_;
}
void PredictorGetWeightsResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void PredictorGetWeightsResponse::clear_weights() {
  weights_.Clear();
}
void PredictorGetWeightsResponse::clear_trainer() {
  if (GetArena() == nullptr && trainer_ != nullptr) {
    delete trainer_;
  }
  trainer_ = nullptr;
}
PredictorGetWeightsResponse::PredictorGetWeightsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  weights_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PredictorGetWeightsResponse)
}
PredictorGetWeightsResponse::PredictorGetWeightsResponse(const PredictorGetWeightsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  weights_.MergeFrom(from.weights_);
  if (from._internal_has_status()) {
    status_ = new ::ResponseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_trainer()) {
    trainer_ = new ::ConceptTrainerDump(*from.trainer_);
  } else {
    trainer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:PredictorGetWeightsResponse)
}

void PredictorGetWeightsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PredictorGetWeightsResponse_proto_2fpredictor_2fpredictor_2eproto.base);
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trainer_) -
      reinterpret_cast<char*>(&status_)) + sizeof(trainer_));
}

PredictorGetWeightsResponse::~PredictorGetWeightsResponse() {
  // @@protoc_insertion_point(destructor:PredictorGetWeightsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PredictorGetWeightsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete trainer_;
}

void PredictorGetWeightsResponse::ArenaDtor(void* object) {
  PredictorGetWeightsResponse* _this = reinterpret_cast< PredictorGetWeightsResponse* >(object);
  (void)_this;
}
void PredictorGetWeightsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PredictorGetWeightsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PredictorGetWeightsResponse& PredictorGetWeightsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PredictorGetWeightsResponse_proto_2fpredictor_2fpredictor_2eproto.base);
  return *internal_default_instance();
}


void PredictorGetWeightsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:PredictorGetWeightsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weights_.Clear();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && trainer_ != nullptr) {
    delete trainer_;
  }
  trainer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PredictorGetWeightsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ResponseStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .Embedding> weights = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&weights_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // .ConceptTrainerDump trainer = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_trainer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PredictorGetWeightsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PredictorGetWeightsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // map<string, .Embedding> weights = 2;
  if (!this->_internal_weights().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::Embedding >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "PredictorGetWeightsResponse.WeightsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_weights().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_weights().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::Embedding >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::Embedding >::const_iterator
          it = this->_internal_weights().begin();
          it != this->_internal_weights().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = PredictorGetWeightsResponse_WeightsEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::Embedding >::const_iterator
          it = this->_internal_weights().begin();
          it != this->_internal_weights().end(); ++it) {
        target = PredictorGetWeightsResponse_WeightsEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .ConceptTrainerDump trainer = 3;
  if (this->has_trainer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::trainer(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PredictorGetWeightsResponse)
  return target;
}

size_t PredictorGetWeightsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PredictorGetWeightsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .Embedding> weights = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_weights_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::Embedding >::const_iterator
      it = this->_internal_weights().begin();
      it != this->_internal_weights().end(); ++it) {
    total_size += PredictorGetWeightsResponse_WeightsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .ResponseStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .ConceptTrainerDump trainer = 3;
  if (this->has_trainer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *trainer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PredictorGetWeightsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PredictorGetWeightsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictorGetWeightsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PredictorGetWeightsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PredictorGetWeightsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PredictorGetWeightsResponse)
    MergeFrom(*source);
  }
}

void PredictorGetWeightsResponse::MergeFrom(const PredictorGetWeightsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PredictorGetWeightsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  weights_.MergeFrom(from.weights_);
  if (from.has_status()) {
    _internal_mutable_status()->::ResponseStatus::MergeFrom(from._internal_status());
  }
  if (from.has_trainer()) {
    _internal_mutable_trainer()->::ConceptTrainerDump::MergeFrom(from._internal_trainer());
  }
}

void PredictorGetWeightsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PredictorGetWeightsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictorGetWeightsResponse::CopyFrom(const PredictorGetWeightsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PredictorGetWeightsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictorGetWeightsResponse::IsInitialized() const {
  return true;
}

void PredictorGetWeightsResponse::InternalSwap(PredictorGetWeightsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  weights_.Swap(&other->weights_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PredictorGetWeightsResponse, trainer_)
      + sizeof(PredictorGetWeightsResponse::trainer_)
      - PROTOBUF_FIELD_OFFSET(PredictorGetWeightsResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PredictorGetWeightsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EvalSpec::InitAsDefaultInstance() {
}
class EvalSpec::_Internal {
 public:
};

EvalSpec::EvalSpec(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:EvalSpec)
}
EvalSpec::EvalSpec(const EvalSpec& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&confusion_matrix_topk_, &from.confusion_matrix_topk_,
    static_cast<size_t>(reinterpret_cast<char*>(&cooccurrence_matrix_topk_) -
    reinterpret_cast<char*>(&confusion_matrix_topk_)) + sizeof(cooccurrence_matrix_topk_));
  // @@protoc_insertion_point(copy_constructor:EvalSpec)
}

void EvalSpec::SharedCtor() {
  ::memset(&confusion_matrix_topk_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cooccurrence_matrix_topk_) -
      reinterpret_cast<char*>(&confusion_matrix_topk_)) + sizeof(cooccurrence_matrix_topk_));
}

EvalSpec::~EvalSpec() {
  // @@protoc_insertion_point(destructor:EvalSpec)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EvalSpec::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void EvalSpec::ArenaDtor(void* object) {
  EvalSpec* _this = reinterpret_cast< EvalSpec* >(object);
  (void)_this;
}
void EvalSpec::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EvalSpec::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EvalSpec& EvalSpec::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EvalSpec_proto_2fpredictor_2fpredictor_2eproto.base);
  return *internal_default_instance();
}


void EvalSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:EvalSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&confusion_matrix_topk_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cooccurrence_matrix_topk_) -
      reinterpret_cast<char*>(&confusion_matrix_topk_)) + sizeof(cooccurrence_matrix_topk_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EvalSpec::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 confusion_matrix_topk = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          confusion_matrix_topk_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cooccurrence_matrix_topk = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          cooccurrence_matrix_topk_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EvalSpec::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:EvalSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 confusion_matrix_topk = 1;
  if (this->confusion_matrix_topk() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_confusion_matrix_topk(), target);
  }

  // int32 cooccurrence_matrix_topk = 2;
  if (this->cooccurrence_matrix_topk() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_cooccurrence_matrix_topk(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EvalSpec)
  return target;
}

size_t EvalSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EvalSpec)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 confusion_matrix_topk = 1;
  if (this->confusion_matrix_topk() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_confusion_matrix_topk());
  }

  // int32 cooccurrence_matrix_topk = 2;
  if (this->cooccurrence_matrix_topk() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cooccurrence_matrix_topk());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EvalSpec::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EvalSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const EvalSpec* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EvalSpec>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EvalSpec)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EvalSpec)
    MergeFrom(*source);
  }
}

void EvalSpec::MergeFrom(const EvalSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EvalSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.confusion_matrix_topk() != 0) {
    _internal_set_confusion_matrix_topk(from._internal_confusion_matrix_topk());
  }
  if (from.cooccurrence_matrix_topk() != 0) {
    _internal_set_cooccurrence_matrix_topk(from._internal_cooccurrence_matrix_topk());
  }
}

void EvalSpec::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EvalSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvalSpec::CopyFrom(const EvalSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EvalSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvalSpec::IsInitialized() const {
  return true;
}

void EvalSpec::InternalSwap(EvalSpec* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EvalSpec, cooccurrence_matrix_topk_)
      + sizeof(EvalSpec::cooccurrence_matrix_topk_)
      - PROTOBUF_FIELD_OFFSET(EvalSpec, confusion_matrix_topk_)>(
          reinterpret_cast<char*>(&confusion_matrix_topk_),
          reinterpret_cast<char*>(&other->confusion_matrix_topk_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EvalSpec::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::PredictorPredictRequest* Arena::CreateMaybeMessage< ::PredictorPredictRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PredictorPredictRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::PredictorPredictSQLQueryRequest* Arena::CreateMaybeMessage< ::PredictorPredictSQLQueryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PredictorPredictSQLQueryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::PredictorPredictResponse* Arena::CreateMaybeMessage< ::PredictorPredictResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PredictorPredictResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::PredictorTrainAndEvalRequest* Arena::CreateMaybeMessage< ::PredictorTrainAndEvalRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PredictorTrainAndEvalRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::PredictorTrainRequest* Arena::CreateMaybeMessage< ::PredictorTrainRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PredictorTrainRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::PredictorTrainResponse* Arena::CreateMaybeMessage< ::PredictorTrainResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PredictorTrainResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::PredictorGetWeightsRequest* Arena::CreateMaybeMessage< ::PredictorGetWeightsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PredictorGetWeightsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::PredictorGetWeightsResponse_WeightsEntry_DoNotUse* Arena::CreateMaybeMessage< ::PredictorGetWeightsResponse_WeightsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PredictorGetWeightsResponse_WeightsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::PredictorGetWeightsResponse* Arena::CreateMaybeMessage< ::PredictorGetWeightsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PredictorGetWeightsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::EvalSpec* Arena::CreateMaybeMessage< ::EvalSpec >(Arena* arena) {
  return Arena::CreateMessageInternal< ::EvalSpec >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
