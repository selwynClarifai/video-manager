# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from proto.predictor import predictor_metrics_pb2 as proto_dot_predictor_dot_predictor__metrics__pb2
from proto.predictor import predictor_pb2 as proto_dot_predictor_dot_predictor__pb2


class PredictorServiceStub(object):
    """Interface exported by the server.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PredictorPredict = channel.unary_unary(
                '/PredictorService/PredictorPredict',
                request_serializer=proto_dot_predictor_dot_predictor__pb2.PredictorPredictRequest.SerializeToString,
                response_deserializer=proto_dot_predictor_dot_predictor__pb2.PredictorPredictResponse.FromString,
                )
        self.PredictorPredictSQLQuery = channel.unary_unary(
                '/PredictorService/PredictorPredictSQLQuery',
                request_serializer=proto_dot_predictor_dot_predictor__pb2.PredictorPredictSQLQueryRequest.SerializeToString,
                response_deserializer=proto_dot_predictor_dot_predictor__pb2.PredictorPredictResponse.FromString,
                )
        self.PredictorTrain = channel.unary_unary(
                '/PredictorService/PredictorTrain',
                request_serializer=proto_dot_predictor_dot_predictor__pb2.PredictorTrainRequest.SerializeToString,
                response_deserializer=proto_dot_predictor_dot_predictor__pb2.PredictorTrainResponse.FromString,
                )
        self.PredictorTrainStream = channel.unary_stream(
                '/PredictorService/PredictorTrainStream',
                request_serializer=proto_dot_predictor_dot_predictor__pb2.PredictorTrainRequest.SerializeToString,
                response_deserializer=proto_dot_predictor_dot_predictor__pb2.PredictorTrainResponse.FromString,
                )
        self.PredictorGetWeights = channel.unary_unary(
                '/PredictorService/PredictorGetWeights',
                request_serializer=proto_dot_predictor_dot_predictor__pb2.PredictorGetWeightsRequest.SerializeToString,
                response_deserializer=proto_dot_predictor_dot_predictor__pb2.PredictorGetWeightsResponse.FromString,
                )
        self.PredictorGetMulticlassMetrics = channel.unary_unary(
                '/PredictorService/PredictorGetMulticlassMetrics',
                request_serializer=proto_dot_predictor_dot_predictor__pb2.PredictorTrainAndEvalRequest.SerializeToString,
                response_deserializer=proto_dot_predictor_dot_predictor__metrics__pb2.MulticlassMetricsResponse.FromString,
                )


class PredictorServiceServicer(object):
    """Interface exported by the server.
    """

    def PredictorPredict(self, request, context):
        """Predict given a trained model and embeddings from some examples
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PredictorPredictSQLQuery(self, request, context):
        """Predict given a trained model and embeddings from some examples
        return result with topk examples sorted
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PredictorTrain(self, request, context):
        """Put new DataExamples into the desired collection.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PredictorTrainStream(self, request, context):
        """Same as above except server streams back intermediate results
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PredictorGetWeights(self, request, context):
        """Get the weights as a list of embeddings from the given model.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PredictorGetMulticlassMetrics(self, request, context):
        """evaluate a model
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PredictorServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PredictorPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.PredictorPredict,
                    request_deserializer=proto_dot_predictor_dot_predictor__pb2.PredictorPredictRequest.FromString,
                    response_serializer=proto_dot_predictor_dot_predictor__pb2.PredictorPredictResponse.SerializeToString,
            ),
            'PredictorPredictSQLQuery': grpc.unary_unary_rpc_method_handler(
                    servicer.PredictorPredictSQLQuery,
                    request_deserializer=proto_dot_predictor_dot_predictor__pb2.PredictorPredictSQLQueryRequest.FromString,
                    response_serializer=proto_dot_predictor_dot_predictor__pb2.PredictorPredictResponse.SerializeToString,
            ),
            'PredictorTrain': grpc.unary_unary_rpc_method_handler(
                    servicer.PredictorTrain,
                    request_deserializer=proto_dot_predictor_dot_predictor__pb2.PredictorTrainRequest.FromString,
                    response_serializer=proto_dot_predictor_dot_predictor__pb2.PredictorTrainResponse.SerializeToString,
            ),
            'PredictorTrainStream': grpc.unary_stream_rpc_method_handler(
                    servicer.PredictorTrainStream,
                    request_deserializer=proto_dot_predictor_dot_predictor__pb2.PredictorTrainRequest.FromString,
                    response_serializer=proto_dot_predictor_dot_predictor__pb2.PredictorTrainResponse.SerializeToString,
            ),
            'PredictorGetWeights': grpc.unary_unary_rpc_method_handler(
                    servicer.PredictorGetWeights,
                    request_deserializer=proto_dot_predictor_dot_predictor__pb2.PredictorGetWeightsRequest.FromString,
                    response_serializer=proto_dot_predictor_dot_predictor__pb2.PredictorGetWeightsResponse.SerializeToString,
            ),
            'PredictorGetMulticlassMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.PredictorGetMulticlassMetrics,
                    request_deserializer=proto_dot_predictor_dot_predictor__pb2.PredictorTrainAndEvalRequest.FromString,
                    response_serializer=proto_dot_predictor_dot_predictor__metrics__pb2.MulticlassMetricsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'PredictorService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PredictorService(object):
    """Interface exported by the server.
    """

    @staticmethod
    def PredictorPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PredictorService/PredictorPredict',
            proto_dot_predictor_dot_predictor__pb2.PredictorPredictRequest.SerializeToString,
            proto_dot_predictor_dot_predictor__pb2.PredictorPredictResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PredictorPredictSQLQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PredictorService/PredictorPredictSQLQuery',
            proto_dot_predictor_dot_predictor__pb2.PredictorPredictSQLQueryRequest.SerializeToString,
            proto_dot_predictor_dot_predictor__pb2.PredictorPredictResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PredictorTrain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PredictorService/PredictorTrain',
            proto_dot_predictor_dot_predictor__pb2.PredictorTrainRequest.SerializeToString,
            proto_dot_predictor_dot_predictor__pb2.PredictorTrainResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PredictorTrainStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/PredictorService/PredictorTrainStream',
            proto_dot_predictor_dot_predictor__pb2.PredictorTrainRequest.SerializeToString,
            proto_dot_predictor_dot_predictor__pb2.PredictorTrainResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PredictorGetWeights(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PredictorService/PredictorGetWeights',
            proto_dot_predictor_dot_predictor__pb2.PredictorGetWeightsRequest.SerializeToString,
            proto_dot_predictor_dot_predictor__pb2.PredictorGetWeightsResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PredictorGetMulticlassMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PredictorService/PredictorGetMulticlassMetrics',
            proto_dot_predictor_dot_predictor__pb2.PredictorTrainAndEvalRequest.SerializeToString,
            proto_dot_predictor_dot_predictor__metrics__pb2.MulticlassMetricsResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
